Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTE_FLOAT
    CTE_INT
    CTE_STRING
    DIVISION
    DO
    ELSE
    EQUAL
    GREATER_THAN
    IF
    LESS_THAN
    MINUS
    MULTIPLICATION
    NOT_EQUAL
    PLUS
    PRINT
    WHILE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN END
Rule 2     DEC_VARS -> empty
Rule 3     DEC_VARS -> VARS
Rule 4     SOLO_FUNCS -> FUNCS MAS_FUNCS
Rule 5     MAS_FUNCS -> empty
Rule 6     MAS_FUNCS -> SOLO_FUNCS
Rule 7     DEC_FUNCS -> empty
Rule 8     DEC_FUNCS -> SOLO_FUNCS
Rule 9     VARS -> VAR LISTA_VAR
Rule 10    LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR
Rule 11    MAS_VAR -> empty
Rule 12    MAS_VAR -> LISTA_VAR
Rule 13    LISTA_ID -> ID MAS_ID
Rule 14    MAS_ID -> COMMA LISTA_ID
Rule 15    MAS_ID -> empty
Rule 16    TYPE -> INT
Rule 17    TYPE -> FLOAT
Rule 18    FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON
Rule 19    PARAMETROS -> empty
Rule 20    PARAMETROS -> DEC_PARAMETROS
Rule 21    DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS
Rule 22    LISTA_PARAMETROS -> empty
Rule 23    LISTA_PARAMETROS -> COMMA DEC_PARAMETROS
Rule 24    VARS_FUNC -> empty
Rule 25    VARS_FUNC -> VARS
Rule 26    BODY -> LEFT_BRACE ID RIGHT_BRACE
Rule 27    empty -> <empty>

Terminals, with rules where they appear

COLON                : 10 21
COMMA                : 14 23
CTE_FLOAT            : 
CTE_INT              : 
CTE_STRING           : 
DIVISION             : 
DO                   : 
ELSE                 : 
END                  : 1
EQUAL                : 
FLOAT                : 17
GREATER_THAN         : 
ID                   : 1 13 18 21 26
IF                   : 
INT                  : 16
LEFT_BRACE           : 26
LEFT_BRACKET         : 18
LEFT_PARENTHESIS     : 18
LESS_THAN            : 
MAIN                 : 1
MINUS                : 
MULTIPLICATION       : 
NOT_EQUAL            : 
PLUS                 : 
PRINT                : 
PROGRAM              : 1
RIGHT_BRACE          : 26
RIGHT_BRACKET        : 18
RIGHT_PARENTHESIS    : 18
SEMICOLON            : 1 10 18
VAR                  : 9
VOID                 : 18
WHILE                : 
error                : 

Nonterminals, with rules where they appear

BODY                 : 18
DEC_FUNCS            : 1
DEC_PARAMETROS       : 20 23
DEC_VARS             : 1
FUNCS                : 4
LISTA_ID             : 10 14
LISTA_PARAMETROS     : 21
LISTA_VAR            : 9 12
MAS_FUNCS            : 4
MAS_ID               : 13
MAS_VAR              : 10
PARAMETROS           : 18
PROGRAMA             : 0
SOLO_FUNCS           : 6 8
TYPE                 : 10 21
VARS                 : 3 25
VARS_FUNC            : 18
empty                : 2 5 7 11 15 19 22 24

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN END

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID SEMICOLON DEC_VARS DEC_FUNCS MAIN END

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . SEMICOLON DEC_VARS DEC_FUNCS MAIN END

    SEMICOLON       shift and go to state 4


state 4

    (1) PROGRAMA -> PROGRAM ID SEMICOLON . DEC_VARS DEC_FUNCS MAIN END
    (2) DEC_VARS -> . empty
    (3) DEC_VARS -> . VARS
    (27) empty -> .
    (9) VARS -> . VAR LISTA_VAR

    VOID            reduce using rule 27 (empty -> .)
    MAIN            reduce using rule 27 (empty -> .)
    VAR             shift and go to state 8

    DEC_VARS                       shift and go to state 5
    empty                          shift and go to state 6
    VARS                           shift and go to state 7

state 5

    (1) PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS . DEC_FUNCS MAIN END
    (7) DEC_FUNCS -> . empty
    (8) DEC_FUNCS -> . SOLO_FUNCS
    (27) empty -> .
    (4) SOLO_FUNCS -> . FUNCS MAS_FUNCS
    (18) FUNCS -> . VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    MAIN            reduce using rule 27 (empty -> .)
    VOID            shift and go to state 13

    DEC_FUNCS                      shift and go to state 9
    empty                          shift and go to state 10
    SOLO_FUNCS                     shift and go to state 11
    FUNCS                          shift and go to state 12

state 6

    (2) DEC_VARS -> empty .

    VOID            reduce using rule 2 (DEC_VARS -> empty .)
    MAIN            reduce using rule 2 (DEC_VARS -> empty .)


state 7

    (3) DEC_VARS -> VARS .

    VOID            reduce using rule 3 (DEC_VARS -> VARS .)
    MAIN            reduce using rule 3 (DEC_VARS -> VARS .)


state 8

    (9) VARS -> VAR . LISTA_VAR
    (10) LISTA_VAR -> . LISTA_ID COLON TYPE SEMICOLON MAS_VAR
    (13) LISTA_ID -> . ID MAS_ID

    ID              shift and go to state 16

    LISTA_VAR                      shift and go to state 14
    LISTA_ID                       shift and go to state 15

state 9

    (1) PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS . MAIN END

    MAIN            shift and go to state 17


state 10

    (7) DEC_FUNCS -> empty .

    MAIN            reduce using rule 7 (DEC_FUNCS -> empty .)


state 11

    (8) DEC_FUNCS -> SOLO_FUNCS .

    MAIN            reduce using rule 8 (DEC_FUNCS -> SOLO_FUNCS .)


state 12

    (4) SOLO_FUNCS -> FUNCS . MAS_FUNCS
    (5) MAS_FUNCS -> . empty
    (6) MAS_FUNCS -> . SOLO_FUNCS
    (27) empty -> .
    (4) SOLO_FUNCS -> . FUNCS MAS_FUNCS
    (18) FUNCS -> . VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    MAIN            reduce using rule 27 (empty -> .)
    VOID            shift and go to state 13

    FUNCS                          shift and go to state 12
    MAS_FUNCS                      shift and go to state 18
    empty                          shift and go to state 19
    SOLO_FUNCS                     shift and go to state 20

state 13

    (18) FUNCS -> VOID . ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    ID              shift and go to state 21


state 14

    (9) VARS -> VAR LISTA_VAR .

    VOID            reduce using rule 9 (VARS -> VAR LISTA_VAR .)
    MAIN            reduce using rule 9 (VARS -> VAR LISTA_VAR .)
    LEFT_BRACE      reduce using rule 9 (VARS -> VAR LISTA_VAR .)


state 15

    (10) LISTA_VAR -> LISTA_ID . COLON TYPE SEMICOLON MAS_VAR

    COLON           shift and go to state 22


state 16

    (13) LISTA_ID -> ID . MAS_ID
    (14) MAS_ID -> . COMMA LISTA_ID
    (15) MAS_ID -> . empty
    (27) empty -> .

    COMMA           shift and go to state 24
    COLON           reduce using rule 27 (empty -> .)

    MAS_ID                         shift and go to state 23
    empty                          shift and go to state 25

state 17

    (1) PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN . END

    END             shift and go to state 26


state 18

    (4) SOLO_FUNCS -> FUNCS MAS_FUNCS .

    MAIN            reduce using rule 4 (SOLO_FUNCS -> FUNCS MAS_FUNCS .)


state 19

    (5) MAS_FUNCS -> empty .

    MAIN            reduce using rule 5 (MAS_FUNCS -> empty .)


state 20

    (6) MAS_FUNCS -> SOLO_FUNCS .

    MAIN            reduce using rule 6 (MAS_FUNCS -> SOLO_FUNCS .)


state 21

    (18) FUNCS -> VOID ID . LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    LEFT_PARENTHESIS shift and go to state 27


state 22

    (10) LISTA_VAR -> LISTA_ID COLON . TYPE SEMICOLON MAS_VAR
    (16) TYPE -> . INT
    (17) TYPE -> . FLOAT

    INT             shift and go to state 29
    FLOAT           shift and go to state 30

    TYPE                           shift and go to state 28

state 23

    (13) LISTA_ID -> ID MAS_ID .

    COLON           reduce using rule 13 (LISTA_ID -> ID MAS_ID .)


state 24

    (14) MAS_ID -> COMMA . LISTA_ID
    (13) LISTA_ID -> . ID MAS_ID

    ID              shift and go to state 16

    LISTA_ID                       shift and go to state 31

state 25

    (15) MAS_ID -> empty .

    COLON           reduce using rule 15 (MAS_ID -> empty .)


state 26

    (1) PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN END .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN END .)


state 27

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS . PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON
    (19) PARAMETROS -> . empty
    (20) PARAMETROS -> . DEC_PARAMETROS
    (27) empty -> .
    (21) DEC_PARAMETROS -> . ID COLON TYPE LISTA_PARAMETROS

    RIGHT_PARENTHESIS reduce using rule 27 (empty -> .)
    ID              shift and go to state 32

    PARAMETROS                     shift and go to state 33
    empty                          shift and go to state 34
    DEC_PARAMETROS                 shift and go to state 35

state 28

    (10) LISTA_VAR -> LISTA_ID COLON TYPE . SEMICOLON MAS_VAR

    SEMICOLON       shift and go to state 36


state 29

    (16) TYPE -> INT .

    SEMICOLON       reduce using rule 16 (TYPE -> INT .)
    COMMA           reduce using rule 16 (TYPE -> INT .)
    RIGHT_PARENTHESIS reduce using rule 16 (TYPE -> INT .)


state 30

    (17) TYPE -> FLOAT .

    SEMICOLON       reduce using rule 17 (TYPE -> FLOAT .)
    COMMA           reduce using rule 17 (TYPE -> FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 17 (TYPE -> FLOAT .)


state 31

    (14) MAS_ID -> COMMA LISTA_ID .

    COLON           reduce using rule 14 (MAS_ID -> COMMA LISTA_ID .)


state 32

    (21) DEC_PARAMETROS -> ID . COLON TYPE LISTA_PARAMETROS

    COLON           shift and go to state 37


state 33

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS . RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 38


state 34

    (19) PARAMETROS -> empty .

    RIGHT_PARENTHESIS reduce using rule 19 (PARAMETROS -> empty .)


state 35

    (20) PARAMETROS -> DEC_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 20 (PARAMETROS -> DEC_PARAMETROS .)


state 36

    (10) LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON . MAS_VAR
    (11) MAS_VAR -> . empty
    (12) MAS_VAR -> . LISTA_VAR
    (27) empty -> .
    (10) LISTA_VAR -> . LISTA_ID COLON TYPE SEMICOLON MAS_VAR
    (13) LISTA_ID -> . ID MAS_ID

    VOID            reduce using rule 27 (empty -> .)
    MAIN            reduce using rule 27 (empty -> .)
    LEFT_BRACE      reduce using rule 27 (empty -> .)
    ID              shift and go to state 16

    LISTA_ID                       shift and go to state 15
    MAS_VAR                        shift and go to state 39
    empty                          shift and go to state 40
    LISTA_VAR                      shift and go to state 41

state 37

    (21) DEC_PARAMETROS -> ID COLON . TYPE LISTA_PARAMETROS
    (16) TYPE -> . INT
    (17) TYPE -> . FLOAT

    INT             shift and go to state 29
    FLOAT           shift and go to state 30

    TYPE                           shift and go to state 42

state 38

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS . LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    LEFT_BRACKET    shift and go to state 43


state 39

    (10) LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR .

    VOID            reduce using rule 10 (LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR .)
    MAIN            reduce using rule 10 (LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR .)
    LEFT_BRACE      reduce using rule 10 (LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR .)


state 40

    (11) MAS_VAR -> empty .

    VOID            reduce using rule 11 (MAS_VAR -> empty .)
    MAIN            reduce using rule 11 (MAS_VAR -> empty .)
    LEFT_BRACE      reduce using rule 11 (MAS_VAR -> empty .)


state 41

    (12) MAS_VAR -> LISTA_VAR .

    VOID            reduce using rule 12 (MAS_VAR -> LISTA_VAR .)
    MAIN            reduce using rule 12 (MAS_VAR -> LISTA_VAR .)
    LEFT_BRACE      reduce using rule 12 (MAS_VAR -> LISTA_VAR .)


state 42

    (21) DEC_PARAMETROS -> ID COLON TYPE . LISTA_PARAMETROS
    (22) LISTA_PARAMETROS -> . empty
    (23) LISTA_PARAMETROS -> . COMMA DEC_PARAMETROS
    (27) empty -> .

    COMMA           shift and go to state 46
    RIGHT_PARENTHESIS reduce using rule 27 (empty -> .)

    LISTA_PARAMETROS               shift and go to state 44
    empty                          shift and go to state 45

state 43

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET . VARS_FUNC BODY RIGHT_BRACKET SEMICOLON
    (24) VARS_FUNC -> . empty
    (25) VARS_FUNC -> . VARS
    (27) empty -> .
    (9) VARS -> . VAR LISTA_VAR

    LEFT_BRACE      reduce using rule 27 (empty -> .)
    VAR             shift and go to state 8

    VARS_FUNC                      shift and go to state 47
    empty                          shift and go to state 48
    VARS                           shift and go to state 49

state 44

    (21) DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 21 (DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS .)


state 45

    (22) LISTA_PARAMETROS -> empty .

    RIGHT_PARENTHESIS reduce using rule 22 (LISTA_PARAMETROS -> empty .)


state 46

    (23) LISTA_PARAMETROS -> COMMA . DEC_PARAMETROS
    (21) DEC_PARAMETROS -> . ID COLON TYPE LISTA_PARAMETROS

    ID              shift and go to state 32

    DEC_PARAMETROS                 shift and go to state 50

state 47

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC . BODY RIGHT_BRACKET SEMICOLON
    (26) BODY -> . LEFT_BRACE ID RIGHT_BRACE

    LEFT_BRACE      shift and go to state 52

    BODY                           shift and go to state 51

state 48

    (24) VARS_FUNC -> empty .

    LEFT_BRACE      reduce using rule 24 (VARS_FUNC -> empty .)


state 49

    (25) VARS_FUNC -> VARS .

    LEFT_BRACE      reduce using rule 25 (VARS_FUNC -> VARS .)


state 50

    (23) LISTA_PARAMETROS -> COMMA DEC_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 23 (LISTA_PARAMETROS -> COMMA DEC_PARAMETROS .)


state 51

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY . RIGHT_BRACKET SEMICOLON

    RIGHT_BRACKET   shift and go to state 53


state 52

    (26) BODY -> LEFT_BRACE . ID RIGHT_BRACE

    ID              shift and go to state 54


state 53

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 55


state 54

    (26) BODY -> LEFT_BRACE ID . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 56


state 55

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON .

    VOID            reduce using rule 18 (FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON .)
    MAIN            reduce using rule 18 (FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON .)


state 56

    (26) BODY -> LEFT_BRACE ID RIGHT_BRACE .

    RIGHT_BRACKET   reduce using rule 26 (BODY -> LEFT_BRACE ID RIGHT_BRACE .)

