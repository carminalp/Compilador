Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END
Rule 2     PUNTO_1 -> <empty>
Rule 3     DEC_VARS -> epsilon
Rule 4     DEC_VARS -> VARS
Rule 5     SOLO_FUNCS -> FUNCS MAS_FUNCS
Rule 6     MAS_FUNCS -> epsilon
Rule 7     MAS_FUNCS -> SOLO_FUNCS
Rule 8     DEC_FUNCS -> epsilon
Rule 9     DEC_FUNCS -> SOLO_FUNCS
Rule 10    PUNTO_2 -> <empty>
Rule 11    VARS -> VAR PUNTO_2 LISTA_VAR
Rule 12    PUNTO_3 -> <empty>
Rule 13    LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR
Rule 14    MAS_VAR -> epsilon
Rule 15    MAS_VAR -> LISTA_VAR
Rule 16    LISTA_ID -> ID MAS_ID
Rule 17    MAS_ID -> COMMA LISTA_ID
Rule 18    MAS_ID -> epsilon
Rule 19    TYPE -> INT
Rule 20    TYPE -> FLOAT
Rule 21    FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7
Rule 22    PUNTO_4 -> <empty>
Rule 23    PUNTO_5 -> <empty>
Rule 24    PUNTO_7 -> <empty>
Rule 25    PARAMETROS -> epsilon
Rule 26    PARAMETROS -> DEC_PARAMETROS
Rule 27    PUNTO_6 -> <empty>
Rule 28    DEC_PARAMETROS -> ID COLON TYPE PUNTO_6 LISTA_PARAMETROS
Rule 29    LISTA_PARAMETROS -> epsilon
Rule 30    LISTA_PARAMETROS -> COMMA DEC_PARAMETROS
Rule 31    VARS_FUNC -> epsilon
Rule 32    VARS_FUNC -> VARS
Rule 33    BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE
Rule 34    DEC_STATEMENTS -> epsilon
Rule 35    DEC_STATEMENTS -> LISTA_STATEMENTS
Rule 36    LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS
Rule 37    MAS_STATEMENTS -> epsilon
Rule 38    MAS_STATEMENTS -> LISTA_STATEMENTS
Rule 39    STATEMENT -> ASSIGN
Rule 40    STATEMENT -> CONDITION
Rule 41    STATEMENT -> CYCLE
Rule 42    STATEMENT -> F_CALL
Rule 43    STATEMENT -> PRINT_STMT
Rule 44    ASSIGN -> ID EQUAL EXPRESION SEMICOLON
Rule 45    EXPRESION -> EXP MAS_EXPRESIONES
Rule 46    MAS_EXPRESIONES -> epsilon
Rule 47    MAS_EXPRESIONES -> OPERADORES EXP
Rule 48    OPERADORES -> GREATER_THAN
Rule 49    OPERADORES -> LESS_THAN
Rule 50    OPERADORES -> NOT_EQUAL
Rule 51    EXP -> TERMINO MAS_EXP
Rule 52    MAS_EXP -> OPERADORES_EXP EXP
Rule 53    MAS_EXP -> epsilon
Rule 54    OPERADORES_EXP -> PLUS
Rule 55    OPERADORES_EXP -> MINUS
Rule 56    TERMINO -> FACTOR MAS_TERMINO
Rule 57    MAS_TERMINO -> epsilon
Rule 58    MAS_TERMINO -> OPERADORES_TER TERMINO
Rule 59    OPERADORES_TER -> MULTIPLICATION
Rule 60    OPERADORES_TER -> DIVISION
Rule 61    FACTOR -> OPERADORES_FACTOR ID_CTE
Rule 62    FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
Rule 63    ID_CTE -> ID
Rule 64    ID_CTE -> CTE
Rule 65    OPERADORES_FACTOR -> PLUS
Rule 66    OPERADORES_FACTOR -> MINUS
Rule 67    OPERADORES_FACTOR -> epsilon
Rule 68    CTE -> CTE_INT
Rule 69    CTE -> CTE_FLOAT
Rule 70    CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON
Rule 71    ELSE_CONDITION -> epsilon
Rule 72    ELSE_CONDITION -> ELSE BODY
Rule 73    CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON
Rule 74    F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON
Rule 75    EXPRESIONES -> epsilon
Rule 76    EXPRESIONES -> EXPRESIONES_F
Rule 77    EXPRESIONES_F -> EXPRESION LISTA_EXP
Rule 78    LISTA_EXP -> epsilon
Rule 79    LISTA_EXP -> COMMA EXPRESIONES_F
Rule 80    PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON
Rule 81    PARAMETROS_PRINT -> CTE_STRING MAS_PRINT
Rule 82    PARAMETROS_PRINT -> EXPRESION MAS_PRINT
Rule 83    MAS_PRINT -> epsilon
Rule 84    MAS_PRINT -> COMMA PARAMETROS_PRINT
Rule 85    epsilon -> <empty>

Terminals, with rules where they appear

COLON                : 13 28
COMMA                : 17 30 79 84
CTE_FLOAT            : 69
CTE_INT              : 68
CTE_STRING           : 81
DIVISION             : 60
DO                   : 73
ELSE                 : 72
END                  : 1
EQUAL                : 44
FLOAT                : 20
GREATER_THAN         : 48
ID                   : 1 16 21 28 44 63 74
IF                   : 70
INT                  : 19
LEFT_BRACE           : 33
LEFT_BRACKET         : 21
LEFT_PARENTHESIS     : 21 62 70 73 74 80
LESS_THAN            : 49
MAIN                 : 1
MINUS                : 55 66
MULTIPLICATION       : 59
NOT_EQUAL            : 50
PLUS                 : 54 65
PRINT                : 80
PROGRAM              : 1
RIGHT_BRACE          : 33
RIGHT_BRACKET        : 21
RIGHT_PARENTHESIS    : 21 62 70 73 74 80
SEMICOLON            : 1 13 21 44 70 73 74 80
VAR                  : 11
VOID                 : 21
WHILE                : 73
error                : 

Nonterminals, with rules where they appear

ASSIGN               : 39
BODY                 : 1 21 70 72 73
CONDITION            : 40
CTE                  : 64
CYCLE                : 41
DEC_FUNCS            : 1
DEC_PARAMETROS       : 26 30
DEC_STATEMENTS       : 33
DEC_VARS             : 1
ELSE_CONDITION       : 70
EXP                  : 45 47 52
EXPRESION            : 44 62 70 73 77 82
EXPRESIONES          : 74
EXPRESIONES_F        : 76 79
FACTOR               : 56
FUNCS                : 5
F_CALL               : 42
ID_CTE               : 61
LISTA_EXP            : 77
LISTA_ID             : 13 17
LISTA_PARAMETROS     : 28
LISTA_STATEMENTS     : 35 38
LISTA_VAR            : 11 15
MAS_EXP              : 51
MAS_EXPRESIONES      : 45
MAS_FUNCS            : 5
MAS_ID               : 16
MAS_PRINT            : 81 82
MAS_STATEMENTS       : 36
MAS_TERMINO          : 56
MAS_VAR              : 13
OPERADORES           : 47
OPERADORES_EXP       : 52
OPERADORES_FACTOR    : 61
OPERADORES_TER       : 58
PARAMETROS           : 21
PARAMETROS_PRINT     : 80 84
PRINT_STMT           : 43
PROGRAMA             : 0
PUNTO_1              : 1
PUNTO_2              : 11
PUNTO_3              : 13
PUNTO_4              : 21
PUNTO_5              : 21
PUNTO_6              : 28
PUNTO_7              : 21
SOLO_FUNCS           : 7 9
STATEMENT            : 36
TERMINO              : 51 58
TYPE                 : 13 28
VARS                 : 4 32
VARS_FUNC            : 21
epsilon              : 3 6 8 14 18 25 29 31 34 37 46 53 57 67 71 75 78 83

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END
    (2) PUNTO_1 -> .

    SEMICOLON       reduce using rule 2 (PUNTO_1 -> .)

    PUNTO_1                        shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 . SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END

    SEMICOLON       shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON . DEC_VARS DEC_FUNCS MAIN BODY END
    (3) DEC_VARS -> . epsilon
    (4) DEC_VARS -> . VARS
    (85) epsilon -> .
    (11) VARS -> . VAR PUNTO_2 LISTA_VAR

    VOID            reduce using rule 85 (epsilon -> .)
    MAIN            reduce using rule 85 (epsilon -> .)
    VAR             shift and go to state 9

    DEC_VARS                       shift and go to state 6
    epsilon                        shift and go to state 7
    VARS                           shift and go to state 8

state 6

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS . DEC_FUNCS MAIN BODY END
    (8) DEC_FUNCS -> . epsilon
    (9) DEC_FUNCS -> . SOLO_FUNCS
    (85) epsilon -> .
    (5) SOLO_FUNCS -> . FUNCS MAS_FUNCS
    (21) FUNCS -> . VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7

    MAIN            reduce using rule 85 (epsilon -> .)
    VOID            shift and go to state 14

    DEC_FUNCS                      shift and go to state 10
    epsilon                        shift and go to state 11
    SOLO_FUNCS                     shift and go to state 12
    FUNCS                          shift and go to state 13

state 7

    (3) DEC_VARS -> epsilon .

    VOID            reduce using rule 3 (DEC_VARS -> epsilon .)
    MAIN            reduce using rule 3 (DEC_VARS -> epsilon .)


state 8

    (4) DEC_VARS -> VARS .

    VOID            reduce using rule 4 (DEC_VARS -> VARS .)
    MAIN            reduce using rule 4 (DEC_VARS -> VARS .)


state 9

    (11) VARS -> VAR . PUNTO_2 LISTA_VAR
    (10) PUNTO_2 -> .

    ID              reduce using rule 10 (PUNTO_2 -> .)

    PUNTO_2                        shift and go to state 15

state 10

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS . MAIN BODY END

    MAIN            shift and go to state 16


state 11

    (8) DEC_FUNCS -> epsilon .

    MAIN            reduce using rule 8 (DEC_FUNCS -> epsilon .)


state 12

    (9) DEC_FUNCS -> SOLO_FUNCS .

    MAIN            reduce using rule 9 (DEC_FUNCS -> SOLO_FUNCS .)


state 13

    (5) SOLO_FUNCS -> FUNCS . MAS_FUNCS
    (6) MAS_FUNCS -> . epsilon
    (7) MAS_FUNCS -> . SOLO_FUNCS
    (85) epsilon -> .
    (5) SOLO_FUNCS -> . FUNCS MAS_FUNCS
    (21) FUNCS -> . VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7

    MAIN            reduce using rule 85 (epsilon -> .)
    VOID            shift and go to state 14

    FUNCS                          shift and go to state 13
    MAS_FUNCS                      shift and go to state 17
    epsilon                        shift and go to state 18
    SOLO_FUNCS                     shift and go to state 19

state 14

    (21) FUNCS -> VOID . ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7

    ID              shift and go to state 20


state 15

    (11) VARS -> VAR PUNTO_2 . LISTA_VAR
    (13) LISTA_VAR -> . LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR
    (16) LISTA_ID -> . ID MAS_ID

    ID              shift and go to state 23

    LISTA_VAR                      shift and go to state 21
    LISTA_ID                       shift and go to state 22

state 16

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN . BODY END
    (33) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 24

state 17

    (5) SOLO_FUNCS -> FUNCS MAS_FUNCS .

    MAIN            reduce using rule 5 (SOLO_FUNCS -> FUNCS MAS_FUNCS .)


state 18

    (6) MAS_FUNCS -> epsilon .

    MAIN            reduce using rule 6 (MAS_FUNCS -> epsilon .)


state 19

    (7) MAS_FUNCS -> SOLO_FUNCS .

    MAIN            reduce using rule 7 (MAS_FUNCS -> SOLO_FUNCS .)


state 20

    (21) FUNCS -> VOID ID . PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7
    (22) PUNTO_4 -> .

    LEFT_PARENTHESIS reduce using rule 22 (PUNTO_4 -> .)

    PUNTO_4                        shift and go to state 26

state 21

    (11) VARS -> VAR PUNTO_2 LISTA_VAR .

    VOID            reduce using rule 11 (VARS -> VAR PUNTO_2 LISTA_VAR .)
    MAIN            reduce using rule 11 (VARS -> VAR PUNTO_2 LISTA_VAR .)
    LEFT_BRACE      reduce using rule 11 (VARS -> VAR PUNTO_2 LISTA_VAR .)


state 22

    (13) LISTA_VAR -> LISTA_ID . COLON TYPE PUNTO_3 SEMICOLON MAS_VAR

    COLON           shift and go to state 27


state 23

    (16) LISTA_ID -> ID . MAS_ID
    (17) MAS_ID -> . COMMA LISTA_ID
    (18) MAS_ID -> . epsilon
    (85) epsilon -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 85 (epsilon -> .)

    MAS_ID                         shift and go to state 28
    epsilon                        shift and go to state 30

state 24

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY . END

    END             shift and go to state 31


state 25

    (33) BODY -> LEFT_BRACE . DEC_STATEMENTS RIGHT_BRACE
    (34) DEC_STATEMENTS -> . epsilon
    (35) DEC_STATEMENTS -> . LISTA_STATEMENTS
    (85) epsilon -> .
    (36) LISTA_STATEMENTS -> . STATEMENT MAS_STATEMENTS
    (39) STATEMENT -> . ASSIGN
    (40) STATEMENT -> . CONDITION
    (41) STATEMENT -> . CYCLE
    (42) STATEMENT -> . F_CALL
    (43) STATEMENT -> . PRINT_STMT
    (44) ASSIGN -> . ID EQUAL EXPRESION SEMICOLON
    (70) CONDITION -> . IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON
    (73) CYCLE -> . DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON
    (74) F_CALL -> . ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON
    (80) PRINT_STMT -> . PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON

    RIGHT_BRACE     reduce using rule 85 (epsilon -> .)
    ID              shift and go to state 41
    IF              shift and go to state 42
    DO              shift and go to state 43
    PRINT           shift and go to state 44

    DEC_STATEMENTS                 shift and go to state 32
    epsilon                        shift and go to state 33
    LISTA_STATEMENTS               shift and go to state 34
    STATEMENT                      shift and go to state 35
    ASSIGN                         shift and go to state 36
    CONDITION                      shift and go to state 37
    CYCLE                          shift and go to state 38
    F_CALL                         shift and go to state 39
    PRINT_STMT                     shift and go to state 40

state 26

    (21) FUNCS -> VOID ID PUNTO_4 . LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7

    LEFT_PARENTHESIS shift and go to state 45


state 27

    (13) LISTA_VAR -> LISTA_ID COLON . TYPE PUNTO_3 SEMICOLON MAS_VAR
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT

    INT             shift and go to state 47
    FLOAT           shift and go to state 48

    TYPE                           shift and go to state 46

state 28

    (16) LISTA_ID -> ID MAS_ID .

    COLON           reduce using rule 16 (LISTA_ID -> ID MAS_ID .)


state 29

    (17) MAS_ID -> COMMA . LISTA_ID
    (16) LISTA_ID -> . ID MAS_ID

    ID              shift and go to state 23

    LISTA_ID                       shift and go to state 49

state 30

    (18) MAS_ID -> epsilon .

    COLON           reduce using rule 18 (MAS_ID -> epsilon .)


state 31

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END .)


state 32

    (33) BODY -> LEFT_BRACE DEC_STATEMENTS . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 50


state 33

    (34) DEC_STATEMENTS -> epsilon .

    RIGHT_BRACE     reduce using rule 34 (DEC_STATEMENTS -> epsilon .)


state 34

    (35) DEC_STATEMENTS -> LISTA_STATEMENTS .

    RIGHT_BRACE     reduce using rule 35 (DEC_STATEMENTS -> LISTA_STATEMENTS .)


state 35

    (36) LISTA_STATEMENTS -> STATEMENT . MAS_STATEMENTS
    (37) MAS_STATEMENTS -> . epsilon
    (38) MAS_STATEMENTS -> . LISTA_STATEMENTS
    (85) epsilon -> .
    (36) LISTA_STATEMENTS -> . STATEMENT MAS_STATEMENTS
    (39) STATEMENT -> . ASSIGN
    (40) STATEMENT -> . CONDITION
    (41) STATEMENT -> . CYCLE
    (42) STATEMENT -> . F_CALL
    (43) STATEMENT -> . PRINT_STMT
    (44) ASSIGN -> . ID EQUAL EXPRESION SEMICOLON
    (70) CONDITION -> . IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON
    (73) CYCLE -> . DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON
    (74) F_CALL -> . ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON
    (80) PRINT_STMT -> . PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON

    RIGHT_BRACE     reduce using rule 85 (epsilon -> .)
    ID              shift and go to state 41
    IF              shift and go to state 42
    DO              shift and go to state 43
    PRINT           shift and go to state 44

    STATEMENT                      shift and go to state 35
    MAS_STATEMENTS                 shift and go to state 51
    epsilon                        shift and go to state 52
    LISTA_STATEMENTS               shift and go to state 53
    ASSIGN                         shift and go to state 36
    CONDITION                      shift and go to state 37
    CYCLE                          shift and go to state 38
    F_CALL                         shift and go to state 39
    PRINT_STMT                     shift and go to state 40

state 36

    (39) STATEMENT -> ASSIGN .

    ID              reduce using rule 39 (STATEMENT -> ASSIGN .)
    IF              reduce using rule 39 (STATEMENT -> ASSIGN .)
    DO              reduce using rule 39 (STATEMENT -> ASSIGN .)
    PRINT           reduce using rule 39 (STATEMENT -> ASSIGN .)
    RIGHT_BRACE     reduce using rule 39 (STATEMENT -> ASSIGN .)


state 37

    (40) STATEMENT -> CONDITION .

    ID              reduce using rule 40 (STATEMENT -> CONDITION .)
    IF              reduce using rule 40 (STATEMENT -> CONDITION .)
    DO              reduce using rule 40 (STATEMENT -> CONDITION .)
    PRINT           reduce using rule 40 (STATEMENT -> CONDITION .)
    RIGHT_BRACE     reduce using rule 40 (STATEMENT -> CONDITION .)


state 38

    (41) STATEMENT -> CYCLE .

    ID              reduce using rule 41 (STATEMENT -> CYCLE .)
    IF              reduce using rule 41 (STATEMENT -> CYCLE .)
    DO              reduce using rule 41 (STATEMENT -> CYCLE .)
    PRINT           reduce using rule 41 (STATEMENT -> CYCLE .)
    RIGHT_BRACE     reduce using rule 41 (STATEMENT -> CYCLE .)


state 39

    (42) STATEMENT -> F_CALL .

    ID              reduce using rule 42 (STATEMENT -> F_CALL .)
    IF              reduce using rule 42 (STATEMENT -> F_CALL .)
    DO              reduce using rule 42 (STATEMENT -> F_CALL .)
    PRINT           reduce using rule 42 (STATEMENT -> F_CALL .)
    RIGHT_BRACE     reduce using rule 42 (STATEMENT -> F_CALL .)


state 40

    (43) STATEMENT -> PRINT_STMT .

    ID              reduce using rule 43 (STATEMENT -> PRINT_STMT .)
    IF              reduce using rule 43 (STATEMENT -> PRINT_STMT .)
    DO              reduce using rule 43 (STATEMENT -> PRINT_STMT .)
    PRINT           reduce using rule 43 (STATEMENT -> PRINT_STMT .)
    RIGHT_BRACE     reduce using rule 43 (STATEMENT -> PRINT_STMT .)


state 41

    (44) ASSIGN -> ID . EQUAL EXPRESION SEMICOLON
    (74) F_CALL -> ID . LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON

    EQUAL           shift and go to state 54
    LEFT_PARENTHESIS shift and go to state 55


state 42

    (70) CONDITION -> IF . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON

    LEFT_PARENTHESIS shift and go to state 56


state 43

    (73) CYCLE -> DO . BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON
    (33) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 57

state 44

    (80) PRINT_STMT -> PRINT . LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS shift and go to state 58


state 45

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS . PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7
    (23) PUNTO_5 -> .

    ID              reduce using rule 23 (PUNTO_5 -> .)
    RIGHT_PARENTHESIS reduce using rule 23 (PUNTO_5 -> .)

    PUNTO_5                        shift and go to state 59

state 46

    (13) LISTA_VAR -> LISTA_ID COLON TYPE . PUNTO_3 SEMICOLON MAS_VAR
    (12) PUNTO_3 -> .

    SEMICOLON       reduce using rule 12 (PUNTO_3 -> .)

    PUNTO_3                        shift and go to state 60

state 47

    (19) TYPE -> INT .

    SEMICOLON       reduce using rule 19 (TYPE -> INT .)
    COMMA           reduce using rule 19 (TYPE -> INT .)
    RIGHT_PARENTHESIS reduce using rule 19 (TYPE -> INT .)


state 48

    (20) TYPE -> FLOAT .

    SEMICOLON       reduce using rule 20 (TYPE -> FLOAT .)
    COMMA           reduce using rule 20 (TYPE -> FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 20 (TYPE -> FLOAT .)


state 49

    (17) MAS_ID -> COMMA LISTA_ID .

    COLON           reduce using rule 17 (MAS_ID -> COMMA LISTA_ID .)


state 50

    (33) BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .

    END             reduce using rule 33 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)
    WHILE           reduce using rule 33 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)
    ELSE            reduce using rule 33 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)
    SEMICOLON       reduce using rule 33 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)
    RIGHT_BRACKET   reduce using rule 33 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)


state 51

    (36) LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS .

    RIGHT_BRACE     reduce using rule 36 (LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS .)


state 52

    (37) MAS_STATEMENTS -> epsilon .

    RIGHT_BRACE     reduce using rule 37 (MAS_STATEMENTS -> epsilon .)


state 53

    (38) MAS_STATEMENTS -> LISTA_STATEMENTS .

    RIGHT_BRACE     reduce using rule 38 (MAS_STATEMENTS -> LISTA_STATEMENTS .)


state 54

    (44) ASSIGN -> ID EQUAL . EXPRESION SEMICOLON
    (45) EXPRESION -> . EXP MAS_EXPRESIONES
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    EXPRESION                      shift and go to state 61
    EXP                            shift and go to state 62
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 55

    (74) F_CALL -> ID LEFT_PARENTHESIS . EXPRESIONES RIGHT_PARENTHESIS SEMICOLON
    (75) EXPRESIONES -> . epsilon
    (76) EXPRESIONES -> . EXPRESIONES_F
    (85) epsilon -> .
    (77) EXPRESIONES_F -> . EXPRESION LISTA_EXP
    (45) EXPRESION -> . EXP MAS_EXPRESIONES
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon

    RIGHT_PARENTHESIS reduce using rule 85 (epsilon -> .)
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)
    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68

    EXPRESIONES                    shift and go to state 70
    epsilon                        shift and go to state 71
    EXPRESIONES_F                  shift and go to state 72
    EXPRESION                      shift and go to state 73
    EXP                            shift and go to state 62
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65

state 56

    (70) CONDITION -> IF LEFT_PARENTHESIS . EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON
    (45) EXPRESION -> . EXP MAS_EXPRESIONES
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    EXPRESION                      shift and go to state 74
    EXP                            shift and go to state 62
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 57

    (73) CYCLE -> DO BODY . WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON

    WHILE           shift and go to state 75


state 58

    (80) PRINT_STMT -> PRINT LEFT_PARENTHESIS . PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON
    (81) PARAMETROS_PRINT -> . CTE_STRING MAS_PRINT
    (82) PARAMETROS_PRINT -> . EXPRESION MAS_PRINT
    (45) EXPRESION -> . EXP MAS_EXPRESIONES
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    CTE_STRING      shift and go to state 77
    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    PARAMETROS_PRINT               shift and go to state 76
    EXPRESION                      shift and go to state 78
    EXP                            shift and go to state 62
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 59

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 . PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7
    (25) PARAMETROS -> . epsilon
    (26) PARAMETROS -> . DEC_PARAMETROS
    (85) epsilon -> .
    (28) DEC_PARAMETROS -> . ID COLON TYPE PUNTO_6 LISTA_PARAMETROS

    RIGHT_PARENTHESIS reduce using rule 85 (epsilon -> .)
    ID              shift and go to state 79

    PARAMETROS                     shift and go to state 80
    epsilon                        shift and go to state 81
    DEC_PARAMETROS                 shift and go to state 82

state 60

    (13) LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 . SEMICOLON MAS_VAR

    SEMICOLON       shift and go to state 83


state 61

    (44) ASSIGN -> ID EQUAL EXPRESION . SEMICOLON

    SEMICOLON       shift and go to state 84


state 62

    (45) EXPRESION -> EXP . MAS_EXPRESIONES
    (46) MAS_EXPRESIONES -> . epsilon
    (47) MAS_EXPRESIONES -> . OPERADORES EXP
    (85) epsilon -> .
    (48) OPERADORES -> . GREATER_THAN
    (49) OPERADORES -> . LESS_THAN
    (50) OPERADORES -> . NOT_EQUAL

    SEMICOLON       reduce using rule 85 (epsilon -> .)
    COMMA           reduce using rule 85 (epsilon -> .)
    RIGHT_PARENTHESIS reduce using rule 85 (epsilon -> .)
    GREATER_THAN    shift and go to state 88
    LESS_THAN       shift and go to state 89
    NOT_EQUAL       shift and go to state 90

    MAS_EXPRESIONES                shift and go to state 85
    epsilon                        shift and go to state 86
    OPERADORES                     shift and go to state 87

state 63

    (51) EXP -> TERMINO . MAS_EXP
    (52) MAS_EXP -> . OPERADORES_EXP EXP
    (53) MAS_EXP -> . epsilon
    (54) OPERADORES_EXP -> . PLUS
    (55) OPERADORES_EXP -> . MINUS
    (85) epsilon -> .

    PLUS            shift and go to state 94
    MINUS           shift and go to state 95
    GREATER_THAN    reduce using rule 85 (epsilon -> .)
    LESS_THAN       reduce using rule 85 (epsilon -> .)
    NOT_EQUAL       reduce using rule 85 (epsilon -> .)
    SEMICOLON       reduce using rule 85 (epsilon -> .)
    COMMA           reduce using rule 85 (epsilon -> .)
    RIGHT_PARENTHESIS reduce using rule 85 (epsilon -> .)

    MAS_EXP                        shift and go to state 91
    OPERADORES_EXP                 shift and go to state 92
    epsilon                        shift and go to state 93

state 64

    (56) TERMINO -> FACTOR . MAS_TERMINO
    (57) MAS_TERMINO -> . epsilon
    (58) MAS_TERMINO -> . OPERADORES_TER TERMINO
    (85) epsilon -> .
    (59) OPERADORES_TER -> . MULTIPLICATION
    (60) OPERADORES_TER -> . DIVISION

    PLUS            reduce using rule 85 (epsilon -> .)
    MINUS           reduce using rule 85 (epsilon -> .)
    GREATER_THAN    reduce using rule 85 (epsilon -> .)
    LESS_THAN       reduce using rule 85 (epsilon -> .)
    NOT_EQUAL       reduce using rule 85 (epsilon -> .)
    SEMICOLON       reduce using rule 85 (epsilon -> .)
    COMMA           reduce using rule 85 (epsilon -> .)
    RIGHT_PARENTHESIS reduce using rule 85 (epsilon -> .)
    MULTIPLICATION  shift and go to state 99
    DIVISION        shift and go to state 100

    MAS_TERMINO                    shift and go to state 96
    epsilon                        shift and go to state 97
    OPERADORES_TER                 shift and go to state 98

state 65

    (61) FACTOR -> OPERADORES_FACTOR . ID_CTE
    (63) ID_CTE -> . ID
    (64) ID_CTE -> . CTE
    (68) CTE -> . CTE_INT
    (69) CTE -> . CTE_FLOAT

    ID              shift and go to state 102
    CTE_INT         shift and go to state 104
    CTE_FLOAT       shift and go to state 105

    ID_CTE                         shift and go to state 101
    CTE                            shift and go to state 103

state 66

    (62) FACTOR -> LEFT_PARENTHESIS . EXPRESION RIGHT_PARENTHESIS
    (45) EXPRESION -> . EXP MAS_EXPRESIONES
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    EXPRESION                      shift and go to state 106
    EXP                            shift and go to state 62
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 67

    (65) OPERADORES_FACTOR -> PLUS .

    ID              reduce using rule 65 (OPERADORES_FACTOR -> PLUS .)
    CTE_INT         reduce using rule 65 (OPERADORES_FACTOR -> PLUS .)
    CTE_FLOAT       reduce using rule 65 (OPERADORES_FACTOR -> PLUS .)


state 68

    (66) OPERADORES_FACTOR -> MINUS .

    ID              reduce using rule 66 (OPERADORES_FACTOR -> MINUS .)
    CTE_INT         reduce using rule 66 (OPERADORES_FACTOR -> MINUS .)
    CTE_FLOAT       reduce using rule 66 (OPERADORES_FACTOR -> MINUS .)


state 69

    (67) OPERADORES_FACTOR -> epsilon .

    ID              reduce using rule 67 (OPERADORES_FACTOR -> epsilon .)
    CTE_INT         reduce using rule 67 (OPERADORES_FACTOR -> epsilon .)
    CTE_FLOAT       reduce using rule 67 (OPERADORES_FACTOR -> epsilon .)


state 70

    (74) F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 107


state 71

    (75) EXPRESIONES -> epsilon .
    (67) OPERADORES_FACTOR -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 75 (EXPRESIONES -> epsilon .)
    ID              reduce using rule 67 (OPERADORES_FACTOR -> epsilon .)
    CTE_INT         reduce using rule 67 (OPERADORES_FACTOR -> epsilon .)
    CTE_FLOAT       reduce using rule 67 (OPERADORES_FACTOR -> epsilon .)


state 72

    (76) EXPRESIONES -> EXPRESIONES_F .

    RIGHT_PARENTHESIS reduce using rule 76 (EXPRESIONES -> EXPRESIONES_F .)


state 73

    (77) EXPRESIONES_F -> EXPRESION . LISTA_EXP
    (78) LISTA_EXP -> . epsilon
    (79) LISTA_EXP -> . COMMA EXPRESIONES_F
    (85) epsilon -> .

    COMMA           shift and go to state 110
    RIGHT_PARENTHESIS reduce using rule 85 (epsilon -> .)

    LISTA_EXP                      shift and go to state 108
    epsilon                        shift and go to state 109

state 74

    (70) CONDITION -> IF LEFT_PARENTHESIS EXPRESION . RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 111


state 75

    (73) CYCLE -> DO BODY WHILE . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS shift and go to state 112


state 76

    (80) PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 113


state 77

    (81) PARAMETROS_PRINT -> CTE_STRING . MAS_PRINT
    (83) MAS_PRINT -> . epsilon
    (84) MAS_PRINT -> . COMMA PARAMETROS_PRINT
    (85) epsilon -> .

    COMMA           shift and go to state 116
    RIGHT_PARENTHESIS reduce using rule 85 (epsilon -> .)

    MAS_PRINT                      shift and go to state 114
    epsilon                        shift and go to state 115

state 78

    (82) PARAMETROS_PRINT -> EXPRESION . MAS_PRINT
    (83) MAS_PRINT -> . epsilon
    (84) MAS_PRINT -> . COMMA PARAMETROS_PRINT
    (85) epsilon -> .

    COMMA           shift and go to state 116
    RIGHT_PARENTHESIS reduce using rule 85 (epsilon -> .)

    MAS_PRINT                      shift and go to state 117
    epsilon                        shift and go to state 115

state 79

    (28) DEC_PARAMETROS -> ID . COLON TYPE PUNTO_6 LISTA_PARAMETROS

    COLON           shift and go to state 118


state 80

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS . RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7

    RIGHT_PARENTHESIS shift and go to state 119


state 81

    (25) PARAMETROS -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 25 (PARAMETROS -> epsilon .)


state 82

    (26) PARAMETROS -> DEC_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 26 (PARAMETROS -> DEC_PARAMETROS .)


state 83

    (13) LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON . MAS_VAR
    (14) MAS_VAR -> . epsilon
    (15) MAS_VAR -> . LISTA_VAR
    (85) epsilon -> .
    (13) LISTA_VAR -> . LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR
    (16) LISTA_ID -> . ID MAS_ID

    VOID            reduce using rule 85 (epsilon -> .)
    MAIN            reduce using rule 85 (epsilon -> .)
    LEFT_BRACE      reduce using rule 85 (epsilon -> .)
    ID              shift and go to state 23

    LISTA_ID                       shift and go to state 22
    MAS_VAR                        shift and go to state 120
    epsilon                        shift and go to state 121
    LISTA_VAR                      shift and go to state 122

state 84

    (44) ASSIGN -> ID EQUAL EXPRESION SEMICOLON .

    ID              reduce using rule 44 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)
    IF              reduce using rule 44 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)
    DO              reduce using rule 44 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)
    PRINT           reduce using rule 44 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)
    RIGHT_BRACE     reduce using rule 44 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)


state 85

    (45) EXPRESION -> EXP MAS_EXPRESIONES .

    SEMICOLON       reduce using rule 45 (EXPRESION -> EXP MAS_EXPRESIONES .)
    COMMA           reduce using rule 45 (EXPRESION -> EXP MAS_EXPRESIONES .)
    RIGHT_PARENTHESIS reduce using rule 45 (EXPRESION -> EXP MAS_EXPRESIONES .)


state 86

    (46) MAS_EXPRESIONES -> epsilon .

    SEMICOLON       reduce using rule 46 (MAS_EXPRESIONES -> epsilon .)
    COMMA           reduce using rule 46 (MAS_EXPRESIONES -> epsilon .)
    RIGHT_PARENTHESIS reduce using rule 46 (MAS_EXPRESIONES -> epsilon .)


state 87

    (47) MAS_EXPRESIONES -> OPERADORES . EXP
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    EXP                            shift and go to state 123
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 88

    (48) OPERADORES -> GREATER_THAN .

    LEFT_PARENTHESIS reduce using rule 48 (OPERADORES -> GREATER_THAN .)
    PLUS            reduce using rule 48 (OPERADORES -> GREATER_THAN .)
    MINUS           reduce using rule 48 (OPERADORES -> GREATER_THAN .)
    ID              reduce using rule 48 (OPERADORES -> GREATER_THAN .)
    CTE_INT         reduce using rule 48 (OPERADORES -> GREATER_THAN .)
    CTE_FLOAT       reduce using rule 48 (OPERADORES -> GREATER_THAN .)


state 89

    (49) OPERADORES -> LESS_THAN .

    LEFT_PARENTHESIS reduce using rule 49 (OPERADORES -> LESS_THAN .)
    PLUS            reduce using rule 49 (OPERADORES -> LESS_THAN .)
    MINUS           reduce using rule 49 (OPERADORES -> LESS_THAN .)
    ID              reduce using rule 49 (OPERADORES -> LESS_THAN .)
    CTE_INT         reduce using rule 49 (OPERADORES -> LESS_THAN .)
    CTE_FLOAT       reduce using rule 49 (OPERADORES -> LESS_THAN .)


state 90

    (50) OPERADORES -> NOT_EQUAL .

    LEFT_PARENTHESIS reduce using rule 50 (OPERADORES -> NOT_EQUAL .)
    PLUS            reduce using rule 50 (OPERADORES -> NOT_EQUAL .)
    MINUS           reduce using rule 50 (OPERADORES -> NOT_EQUAL .)
    ID              reduce using rule 50 (OPERADORES -> NOT_EQUAL .)
    CTE_INT         reduce using rule 50 (OPERADORES -> NOT_EQUAL .)
    CTE_FLOAT       reduce using rule 50 (OPERADORES -> NOT_EQUAL .)


state 91

    (51) EXP -> TERMINO MAS_EXP .

    GREATER_THAN    reduce using rule 51 (EXP -> TERMINO MAS_EXP .)
    LESS_THAN       reduce using rule 51 (EXP -> TERMINO MAS_EXP .)
    NOT_EQUAL       reduce using rule 51 (EXP -> TERMINO MAS_EXP .)
    SEMICOLON       reduce using rule 51 (EXP -> TERMINO MAS_EXP .)
    COMMA           reduce using rule 51 (EXP -> TERMINO MAS_EXP .)
    RIGHT_PARENTHESIS reduce using rule 51 (EXP -> TERMINO MAS_EXP .)


state 92

    (52) MAS_EXP -> OPERADORES_EXP . EXP
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    EXP                            shift and go to state 124
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 93

    (53) MAS_EXP -> epsilon .

    GREATER_THAN    reduce using rule 53 (MAS_EXP -> epsilon .)
    LESS_THAN       reduce using rule 53 (MAS_EXP -> epsilon .)
    NOT_EQUAL       reduce using rule 53 (MAS_EXP -> epsilon .)
    SEMICOLON       reduce using rule 53 (MAS_EXP -> epsilon .)
    COMMA           reduce using rule 53 (MAS_EXP -> epsilon .)
    RIGHT_PARENTHESIS reduce using rule 53 (MAS_EXP -> epsilon .)


state 94

    (54) OPERADORES_EXP -> PLUS .

    LEFT_PARENTHESIS reduce using rule 54 (OPERADORES_EXP -> PLUS .)
    PLUS            reduce using rule 54 (OPERADORES_EXP -> PLUS .)
    MINUS           reduce using rule 54 (OPERADORES_EXP -> PLUS .)
    ID              reduce using rule 54 (OPERADORES_EXP -> PLUS .)
    CTE_INT         reduce using rule 54 (OPERADORES_EXP -> PLUS .)
    CTE_FLOAT       reduce using rule 54 (OPERADORES_EXP -> PLUS .)


state 95

    (55) OPERADORES_EXP -> MINUS .

    LEFT_PARENTHESIS reduce using rule 55 (OPERADORES_EXP -> MINUS .)
    PLUS            reduce using rule 55 (OPERADORES_EXP -> MINUS .)
    MINUS           reduce using rule 55 (OPERADORES_EXP -> MINUS .)
    ID              reduce using rule 55 (OPERADORES_EXP -> MINUS .)
    CTE_INT         reduce using rule 55 (OPERADORES_EXP -> MINUS .)
    CTE_FLOAT       reduce using rule 55 (OPERADORES_EXP -> MINUS .)


state 96

    (56) TERMINO -> FACTOR MAS_TERMINO .

    PLUS            reduce using rule 56 (TERMINO -> FACTOR MAS_TERMINO .)
    MINUS           reduce using rule 56 (TERMINO -> FACTOR MAS_TERMINO .)
    GREATER_THAN    reduce using rule 56 (TERMINO -> FACTOR MAS_TERMINO .)
    LESS_THAN       reduce using rule 56 (TERMINO -> FACTOR MAS_TERMINO .)
    NOT_EQUAL       reduce using rule 56 (TERMINO -> FACTOR MAS_TERMINO .)
    SEMICOLON       reduce using rule 56 (TERMINO -> FACTOR MAS_TERMINO .)
    COMMA           reduce using rule 56 (TERMINO -> FACTOR MAS_TERMINO .)
    RIGHT_PARENTHESIS reduce using rule 56 (TERMINO -> FACTOR MAS_TERMINO .)


state 97

    (57) MAS_TERMINO -> epsilon .

    PLUS            reduce using rule 57 (MAS_TERMINO -> epsilon .)
    MINUS           reduce using rule 57 (MAS_TERMINO -> epsilon .)
    GREATER_THAN    reduce using rule 57 (MAS_TERMINO -> epsilon .)
    LESS_THAN       reduce using rule 57 (MAS_TERMINO -> epsilon .)
    NOT_EQUAL       reduce using rule 57 (MAS_TERMINO -> epsilon .)
    SEMICOLON       reduce using rule 57 (MAS_TERMINO -> epsilon .)
    COMMA           reduce using rule 57 (MAS_TERMINO -> epsilon .)
    RIGHT_PARENTHESIS reduce using rule 57 (MAS_TERMINO -> epsilon .)


state 98

    (58) MAS_TERMINO -> OPERADORES_TER . TERMINO
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    TERMINO                        shift and go to state 125
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 99

    (59) OPERADORES_TER -> MULTIPLICATION .

    LEFT_PARENTHESIS reduce using rule 59 (OPERADORES_TER -> MULTIPLICATION .)
    PLUS            reduce using rule 59 (OPERADORES_TER -> MULTIPLICATION .)
    MINUS           reduce using rule 59 (OPERADORES_TER -> MULTIPLICATION .)
    ID              reduce using rule 59 (OPERADORES_TER -> MULTIPLICATION .)
    CTE_INT         reduce using rule 59 (OPERADORES_TER -> MULTIPLICATION .)
    CTE_FLOAT       reduce using rule 59 (OPERADORES_TER -> MULTIPLICATION .)


state 100

    (60) OPERADORES_TER -> DIVISION .

    LEFT_PARENTHESIS reduce using rule 60 (OPERADORES_TER -> DIVISION .)
    PLUS            reduce using rule 60 (OPERADORES_TER -> DIVISION .)
    MINUS           reduce using rule 60 (OPERADORES_TER -> DIVISION .)
    ID              reduce using rule 60 (OPERADORES_TER -> DIVISION .)
    CTE_INT         reduce using rule 60 (OPERADORES_TER -> DIVISION .)
    CTE_FLOAT       reduce using rule 60 (OPERADORES_TER -> DIVISION .)


state 101

    (61) FACTOR -> OPERADORES_FACTOR ID_CTE .

    MULTIPLICATION  reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    DIVISION        reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    PLUS            reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    MINUS           reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    GREATER_THAN    reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    LESS_THAN       reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    NOT_EQUAL       reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    SEMICOLON       reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    COMMA           reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    RIGHT_PARENTHESIS reduce using rule 61 (FACTOR -> OPERADORES_FACTOR ID_CTE .)


state 102

    (63) ID_CTE -> ID .

    MULTIPLICATION  reduce using rule 63 (ID_CTE -> ID .)
    DIVISION        reduce using rule 63 (ID_CTE -> ID .)
    PLUS            reduce using rule 63 (ID_CTE -> ID .)
    MINUS           reduce using rule 63 (ID_CTE -> ID .)
    GREATER_THAN    reduce using rule 63 (ID_CTE -> ID .)
    LESS_THAN       reduce using rule 63 (ID_CTE -> ID .)
    NOT_EQUAL       reduce using rule 63 (ID_CTE -> ID .)
    SEMICOLON       reduce using rule 63 (ID_CTE -> ID .)
    COMMA           reduce using rule 63 (ID_CTE -> ID .)
    RIGHT_PARENTHESIS reduce using rule 63 (ID_CTE -> ID .)


state 103

    (64) ID_CTE -> CTE .

    MULTIPLICATION  reduce using rule 64 (ID_CTE -> CTE .)
    DIVISION        reduce using rule 64 (ID_CTE -> CTE .)
    PLUS            reduce using rule 64 (ID_CTE -> CTE .)
    MINUS           reduce using rule 64 (ID_CTE -> CTE .)
    GREATER_THAN    reduce using rule 64 (ID_CTE -> CTE .)
    LESS_THAN       reduce using rule 64 (ID_CTE -> CTE .)
    NOT_EQUAL       reduce using rule 64 (ID_CTE -> CTE .)
    SEMICOLON       reduce using rule 64 (ID_CTE -> CTE .)
    COMMA           reduce using rule 64 (ID_CTE -> CTE .)
    RIGHT_PARENTHESIS reduce using rule 64 (ID_CTE -> CTE .)


state 104

    (68) CTE -> CTE_INT .

    MULTIPLICATION  reduce using rule 68 (CTE -> CTE_INT .)
    DIVISION        reduce using rule 68 (CTE -> CTE_INT .)
    PLUS            reduce using rule 68 (CTE -> CTE_INT .)
    MINUS           reduce using rule 68 (CTE -> CTE_INT .)
    GREATER_THAN    reduce using rule 68 (CTE -> CTE_INT .)
    LESS_THAN       reduce using rule 68 (CTE -> CTE_INT .)
    NOT_EQUAL       reduce using rule 68 (CTE -> CTE_INT .)
    SEMICOLON       reduce using rule 68 (CTE -> CTE_INT .)
    COMMA           reduce using rule 68 (CTE -> CTE_INT .)
    RIGHT_PARENTHESIS reduce using rule 68 (CTE -> CTE_INT .)


state 105

    (69) CTE -> CTE_FLOAT .

    MULTIPLICATION  reduce using rule 69 (CTE -> CTE_FLOAT .)
    DIVISION        reduce using rule 69 (CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 69 (CTE -> CTE_FLOAT .)
    MINUS           reduce using rule 69 (CTE -> CTE_FLOAT .)
    GREATER_THAN    reduce using rule 69 (CTE -> CTE_FLOAT .)
    LESS_THAN       reduce using rule 69 (CTE -> CTE_FLOAT .)
    NOT_EQUAL       reduce using rule 69 (CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 69 (CTE -> CTE_FLOAT .)
    COMMA           reduce using rule 69 (CTE -> CTE_FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 69 (CTE -> CTE_FLOAT .)


state 106

    (62) FACTOR -> LEFT_PARENTHESIS EXPRESION . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 126


state 107

    (74) F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 127


state 108

    (77) EXPRESIONES_F -> EXPRESION LISTA_EXP .

    RIGHT_PARENTHESIS reduce using rule 77 (EXPRESIONES_F -> EXPRESION LISTA_EXP .)


state 109

    (78) LISTA_EXP -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 78 (LISTA_EXP -> epsilon .)


state 110

    (79) LISTA_EXP -> COMMA . EXPRESIONES_F
    (77) EXPRESIONES_F -> . EXPRESION LISTA_EXP
    (45) EXPRESION -> . EXP MAS_EXPRESIONES
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    EXPRESIONES_F                  shift and go to state 128
    EXPRESION                      shift and go to state 73
    EXP                            shift and go to state 62
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 111

    (70) CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS . BODY ELSE_CONDITION SEMICOLON
    (33) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 129

state 112

    (73) CYCLE -> DO BODY WHILE LEFT_PARENTHESIS . EXPRESION RIGHT_PARENTHESIS SEMICOLON
    (45) EXPRESION -> . EXP MAS_EXPRESIONES
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    EXPRESION                      shift and go to state 130
    EXP                            shift and go to state 62
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 113

    (80) PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 131


state 114

    (81) PARAMETROS_PRINT -> CTE_STRING MAS_PRINT .

    RIGHT_PARENTHESIS reduce using rule 81 (PARAMETROS_PRINT -> CTE_STRING MAS_PRINT .)


state 115

    (83) MAS_PRINT -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 83 (MAS_PRINT -> epsilon .)


state 116

    (84) MAS_PRINT -> COMMA . PARAMETROS_PRINT
    (81) PARAMETROS_PRINT -> . CTE_STRING MAS_PRINT
    (82) PARAMETROS_PRINT -> . EXPRESION MAS_PRINT
    (45) EXPRESION -> . EXP MAS_EXPRESIONES
    (51) EXP -> . TERMINO MAS_EXP
    (56) TERMINO -> . FACTOR MAS_TERMINO
    (61) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (62) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (65) OPERADORES_FACTOR -> . PLUS
    (66) OPERADORES_FACTOR -> . MINUS
    (67) OPERADORES_FACTOR -> . epsilon
    (85) epsilon -> .

    CTE_STRING      shift and go to state 77
    LEFT_PARENTHESIS shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    ID              reduce using rule 85 (epsilon -> .)
    CTE_INT         reduce using rule 85 (epsilon -> .)
    CTE_FLOAT       reduce using rule 85 (epsilon -> .)

    PARAMETROS_PRINT               shift and go to state 132
    EXPRESION                      shift and go to state 78
    EXP                            shift and go to state 62
    TERMINO                        shift and go to state 63
    FACTOR                         shift and go to state 64
    OPERADORES_FACTOR              shift and go to state 65
    epsilon                        shift and go to state 69

state 117

    (82) PARAMETROS_PRINT -> EXPRESION MAS_PRINT .

    RIGHT_PARENTHESIS reduce using rule 82 (PARAMETROS_PRINT -> EXPRESION MAS_PRINT .)


state 118

    (28) DEC_PARAMETROS -> ID COLON . TYPE PUNTO_6 LISTA_PARAMETROS
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT

    INT             shift and go to state 47
    FLOAT           shift and go to state 48

    TYPE                           shift and go to state 133

state 119

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS . LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7

    LEFT_BRACKET    shift and go to state 134


state 120

    (13) LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR .

    VOID            reduce using rule 13 (LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR .)
    MAIN            reduce using rule 13 (LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR .)
    LEFT_BRACE      reduce using rule 13 (LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR .)


state 121

    (14) MAS_VAR -> epsilon .

    VOID            reduce using rule 14 (MAS_VAR -> epsilon .)
    MAIN            reduce using rule 14 (MAS_VAR -> epsilon .)
    LEFT_BRACE      reduce using rule 14 (MAS_VAR -> epsilon .)


state 122

    (15) MAS_VAR -> LISTA_VAR .

    VOID            reduce using rule 15 (MAS_VAR -> LISTA_VAR .)
    MAIN            reduce using rule 15 (MAS_VAR -> LISTA_VAR .)
    LEFT_BRACE      reduce using rule 15 (MAS_VAR -> LISTA_VAR .)


state 123

    (47) MAS_EXPRESIONES -> OPERADORES EXP .

    SEMICOLON       reduce using rule 47 (MAS_EXPRESIONES -> OPERADORES EXP .)
    COMMA           reduce using rule 47 (MAS_EXPRESIONES -> OPERADORES EXP .)
    RIGHT_PARENTHESIS reduce using rule 47 (MAS_EXPRESIONES -> OPERADORES EXP .)


state 124

    (52) MAS_EXP -> OPERADORES_EXP EXP .

    GREATER_THAN    reduce using rule 52 (MAS_EXP -> OPERADORES_EXP EXP .)
    LESS_THAN       reduce using rule 52 (MAS_EXP -> OPERADORES_EXP EXP .)
    NOT_EQUAL       reduce using rule 52 (MAS_EXP -> OPERADORES_EXP EXP .)
    SEMICOLON       reduce using rule 52 (MAS_EXP -> OPERADORES_EXP EXP .)
    COMMA           reduce using rule 52 (MAS_EXP -> OPERADORES_EXP EXP .)
    RIGHT_PARENTHESIS reduce using rule 52 (MAS_EXP -> OPERADORES_EXP EXP .)


state 125

    (58) MAS_TERMINO -> OPERADORES_TER TERMINO .

    PLUS            reduce using rule 58 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    MINUS           reduce using rule 58 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    GREATER_THAN    reduce using rule 58 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    LESS_THAN       reduce using rule 58 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    NOT_EQUAL       reduce using rule 58 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    SEMICOLON       reduce using rule 58 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    COMMA           reduce using rule 58 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    RIGHT_PARENTHESIS reduce using rule 58 (MAS_TERMINO -> OPERADORES_TER TERMINO .)


state 126

    (62) FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .

    MULTIPLICATION  reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    DIVISION        reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 62 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)


state 127

    (74) F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .

    ID              reduce using rule 74 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 74 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)
    DO              reduce using rule 74 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 74 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_BRACE     reduce using rule 74 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)


state 128

    (79) LISTA_EXP -> COMMA EXPRESIONES_F .

    RIGHT_PARENTHESIS reduce using rule 79 (LISTA_EXP -> COMMA EXPRESIONES_F .)


state 129

    (70) CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY . ELSE_CONDITION SEMICOLON
    (71) ELSE_CONDITION -> . epsilon
    (72) ELSE_CONDITION -> . ELSE BODY
    (85) epsilon -> .

    ELSE            shift and go to state 137
    SEMICOLON       reduce using rule 85 (epsilon -> .)

    ELSE_CONDITION                 shift and go to state 135
    epsilon                        shift and go to state 136

state 130

    (73) CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 138


state 131

    (80) PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .

    ID              reduce using rule 80 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 80 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)
    DO              reduce using rule 80 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 80 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_BRACE     reduce using rule 80 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)


state 132

    (84) MAS_PRINT -> COMMA PARAMETROS_PRINT .

    RIGHT_PARENTHESIS reduce using rule 84 (MAS_PRINT -> COMMA PARAMETROS_PRINT .)


state 133

    (28) DEC_PARAMETROS -> ID COLON TYPE . PUNTO_6 LISTA_PARAMETROS
    (27) PUNTO_6 -> .

    COMMA           reduce using rule 27 (PUNTO_6 -> .)
    RIGHT_PARENTHESIS reduce using rule 27 (PUNTO_6 -> .)

    PUNTO_6                        shift and go to state 139

state 134

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET . VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7
    (31) VARS_FUNC -> . epsilon
    (32) VARS_FUNC -> . VARS
    (85) epsilon -> .
    (11) VARS -> . VAR PUNTO_2 LISTA_VAR

    LEFT_BRACE      reduce using rule 85 (epsilon -> .)
    VAR             shift and go to state 9

    VARS_FUNC                      shift and go to state 140
    epsilon                        shift and go to state 141
    VARS                           shift and go to state 142

state 135

    (70) CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION . SEMICOLON

    SEMICOLON       shift and go to state 143


state 136

    (71) ELSE_CONDITION -> epsilon .

    SEMICOLON       reduce using rule 71 (ELSE_CONDITION -> epsilon .)


state 137

    (72) ELSE_CONDITION -> ELSE . BODY
    (33) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 144

state 138

    (73) CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 145


state 139

    (28) DEC_PARAMETROS -> ID COLON TYPE PUNTO_6 . LISTA_PARAMETROS
    (29) LISTA_PARAMETROS -> . epsilon
    (30) LISTA_PARAMETROS -> . COMMA DEC_PARAMETROS
    (85) epsilon -> .

    COMMA           shift and go to state 148
    RIGHT_PARENTHESIS reduce using rule 85 (epsilon -> .)

    LISTA_PARAMETROS               shift and go to state 146
    epsilon                        shift and go to state 147

state 140

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC . BODY RIGHT_BRACKET SEMICOLON PUNTO_7
    (33) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 149

state 141

    (31) VARS_FUNC -> epsilon .

    LEFT_BRACE      reduce using rule 31 (VARS_FUNC -> epsilon .)


state 142

    (32) VARS_FUNC -> VARS .

    LEFT_BRACE      reduce using rule 32 (VARS_FUNC -> VARS .)


state 143

    (70) CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .

    ID              reduce using rule 70 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)
    IF              reduce using rule 70 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)
    DO              reduce using rule 70 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)
    PRINT           reduce using rule 70 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)
    RIGHT_BRACE     reduce using rule 70 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)


state 144

    (72) ELSE_CONDITION -> ELSE BODY .

    SEMICOLON       reduce using rule 72 (ELSE_CONDITION -> ELSE BODY .)


state 145

    (73) CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .

    ID              reduce using rule 73 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 73 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)
    DO              reduce using rule 73 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 73 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_BRACE     reduce using rule 73 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)


state 146

    (28) DEC_PARAMETROS -> ID COLON TYPE PUNTO_6 LISTA_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 28 (DEC_PARAMETROS -> ID COLON TYPE PUNTO_6 LISTA_PARAMETROS .)


state 147

    (29) LISTA_PARAMETROS -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 29 (LISTA_PARAMETROS -> epsilon .)


state 148

    (30) LISTA_PARAMETROS -> COMMA . DEC_PARAMETROS
    (28) DEC_PARAMETROS -> . ID COLON TYPE PUNTO_6 LISTA_PARAMETROS

    ID              shift and go to state 79

    DEC_PARAMETROS                 shift and go to state 150

state 149

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY . RIGHT_BRACKET SEMICOLON PUNTO_7

    RIGHT_BRACKET   shift and go to state 151


state 150

    (30) LISTA_PARAMETROS -> COMMA DEC_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 30 (LISTA_PARAMETROS -> COMMA DEC_PARAMETROS .)


state 151

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET . SEMICOLON PUNTO_7

    SEMICOLON       shift and go to state 152


state 152

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON . PUNTO_7
    (24) PUNTO_7 -> .

    VOID            reduce using rule 24 (PUNTO_7 -> .)
    MAIN            reduce using rule 24 (PUNTO_7 -> .)

    PUNTO_7                        shift and go to state 153

state 153

    (21) FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7 .

    VOID            reduce using rule 21 (FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7 .)
    MAIN            reduce using rule 21 (FUNCS -> VOID ID PUNTO_4 LEFT_PARENTHESIS PUNTO_5 PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON PUNTO_7 .)

