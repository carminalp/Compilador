Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CTE_STRING
    DO
    ELSE
    IF
    PRINT
    WHILE

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END
Rule 2     DEC_VARS -> epsilon
Rule 3     DEC_VARS -> VARS
Rule 4     SOLO_FUNCS -> FUNCS MAS_FUNCS
Rule 5     MAS_FUNCS -> epsilon
Rule 6     MAS_FUNCS -> SOLO_FUNCS
Rule 7     DEC_FUNCS -> epsilon
Rule 8     DEC_FUNCS -> SOLO_FUNCS
Rule 9     VARS -> VAR LISTA_VAR
Rule 10    LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR
Rule 11    MAS_VAR -> epsilon
Rule 12    MAS_VAR -> LISTA_VAR
Rule 13    LISTA_ID -> ID MAS_ID
Rule 14    MAS_ID -> COMMA LISTA_ID
Rule 15    MAS_ID -> epsilon
Rule 16    TYPE -> INT
Rule 17    TYPE -> FLOAT
Rule 18    FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON
Rule 19    PARAMETROS -> epsilon
Rule 20    PARAMETROS -> DEC_PARAMETROS
Rule 21    DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS
Rule 22    LISTA_PARAMETROS -> epsilon
Rule 23    LISTA_PARAMETROS -> COMMA DEC_PARAMETROS
Rule 24    VARS_FUNC -> epsilon
Rule 25    VARS_FUNC -> VARS
Rule 26    BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE
Rule 27    DEC_STATEMENTS -> epsilon
Rule 28    DEC_STATEMENTS -> LISTA_STATEMENTS
Rule 29    LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS
Rule 30    MAS_STATEMENTS -> epsilon
Rule 31    MAS_STATEMENTS -> LISTA_STATEMENTS
Rule 32    STATEMENT -> ASSIGN
Rule 33    ASSIGN -> ID EQUAL EXPRESION SEMICOLON
Rule 34    EXPRESION -> EXP MAS_EXPRESIONES
Rule 35    MAS_EXPRESIONES -> epsilon
Rule 36    MAS_EXPRESIONES -> OPERADORES EXP
Rule 37    OPERADORES -> GREATER_THAN
Rule 38    OPERADORES -> LESS_THAN
Rule 39    OPERADORES -> NOT_EQUAL
Rule 40    EXP -> TERMINO MAS_EXP
Rule 41    MAS_EXP -> OPERADORES_EXP EXP
Rule 42    MAS_EXP -> epsilon
Rule 43    OPERADORES_EXP -> PLUS
Rule 44    OPERADORES_EXP -> MINUS
Rule 45    TERMINO -> FACTOR MAS_TERMINO
Rule 46    MAS_TERMINO -> epsilon
Rule 47    MAS_TERMINO -> OPERADORES_TER TERMINO
Rule 48    OPERADORES_TER -> MULTIPLICATION
Rule 49    OPERADORES_TER -> DIVISION
Rule 50    FACTOR -> OPERADORES_FACTOR ID_CTE
Rule 51    FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
Rule 52    ID_CTE -> ID
Rule 53    ID_CTE -> CTE
Rule 54    OPERADORES_FACTOR -> PLUS
Rule 55    OPERADORES_FACTOR -> MINUS
Rule 56    OPERADORES_FACTOR -> epsilon
Rule 57    CTE -> CTE_INT
Rule 58    CTE -> CTE_FLOAT
Rule 59    epsilon -> <empty>

Terminals, with rules where they appear

COLON                : 10 21
COMMA                : 14 23
CTE_FLOAT            : 58
CTE_INT              : 57
CTE_STRING           : 
DIVISION             : 49
DO                   : 
ELSE                 : 
END                  : 1
EQUAL                : 33
FLOAT                : 17
GREATER_THAN         : 37
ID                   : 1 13 18 21 33 52
IF                   : 
INT                  : 16
LEFT_BRACE           : 26
LEFT_BRACKET         : 18
LEFT_PARENTHESIS     : 18 51
LESS_THAN            : 38
MAIN                 : 1
MINUS                : 44 55
MULTIPLICATION       : 48
NOT_EQUAL            : 39
PLUS                 : 43 54
PRINT                : 
PROGRAM              : 1
RIGHT_BRACE          : 26
RIGHT_BRACKET        : 18
RIGHT_PARENTHESIS    : 18 51
SEMICOLON            : 1 10 18 33
VAR                  : 9
VOID                 : 18
WHILE                : 
error                : 

Nonterminals, with rules where they appear

ASSIGN               : 32
BODY                 : 1 18
CTE                  : 53
DEC_FUNCS            : 1
DEC_PARAMETROS       : 20 23
DEC_STATEMENTS       : 26
DEC_VARS             : 1
EXP                  : 34 36 41
EXPRESION            : 33 51
FACTOR               : 45
FUNCS                : 4
ID_CTE               : 50
LISTA_ID             : 10 14
LISTA_PARAMETROS     : 21
LISTA_STATEMENTS     : 28 31
LISTA_VAR            : 9 12
MAS_EXP              : 40
MAS_EXPRESIONES      : 34
MAS_FUNCS            : 4
MAS_ID               : 13
MAS_STATEMENTS       : 29
MAS_TERMINO          : 45
MAS_VAR              : 10
OPERADORES           : 36
OPERADORES_EXP       : 41
OPERADORES_FACTOR    : 50
OPERADORES_TER       : 47
PARAMETROS           : 18
PROGRAMA             : 0
SOLO_FUNCS           : 6 8
STATEMENT            : 29
TERMINO              : 40 47
TYPE                 : 10 21
VARS                 : 3 25
VARS_FUNC            : 18
epsilon              : 2 5 7 11 15 19 22 24 27 30 35 42 46 56

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END

    SEMICOLON       shift and go to state 4


state 4

    (1) PROGRAMA -> PROGRAM ID SEMICOLON . DEC_VARS DEC_FUNCS MAIN BODY END
    (2) DEC_VARS -> . epsilon
    (3) DEC_VARS -> . VARS
    (59) epsilon -> .
    (9) VARS -> . VAR LISTA_VAR

    VOID            reduce using rule 59 (epsilon -> .)
    MAIN            reduce using rule 59 (epsilon -> .)
    VAR             shift and go to state 8

    DEC_VARS                       shift and go to state 5
    epsilon                        shift and go to state 6
    VARS                           shift and go to state 7

state 5

    (1) PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS . DEC_FUNCS MAIN BODY END
    (7) DEC_FUNCS -> . epsilon
    (8) DEC_FUNCS -> . SOLO_FUNCS
    (59) epsilon -> .
    (4) SOLO_FUNCS -> . FUNCS MAS_FUNCS
    (18) FUNCS -> . VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    MAIN            reduce using rule 59 (epsilon -> .)
    VOID            shift and go to state 13

    DEC_FUNCS                      shift and go to state 9
    epsilon                        shift and go to state 10
    SOLO_FUNCS                     shift and go to state 11
    FUNCS                          shift and go to state 12

state 6

    (2) DEC_VARS -> epsilon .

    VOID            reduce using rule 2 (DEC_VARS -> epsilon .)
    MAIN            reduce using rule 2 (DEC_VARS -> epsilon .)


state 7

    (3) DEC_VARS -> VARS .

    VOID            reduce using rule 3 (DEC_VARS -> VARS .)
    MAIN            reduce using rule 3 (DEC_VARS -> VARS .)


state 8

    (9) VARS -> VAR . LISTA_VAR
    (10) LISTA_VAR -> . LISTA_ID COLON TYPE SEMICOLON MAS_VAR
    (13) LISTA_ID -> . ID MAS_ID

    ID              shift and go to state 16

    LISTA_VAR                      shift and go to state 14
    LISTA_ID                       shift and go to state 15

state 9

    (1) PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS . MAIN BODY END

    MAIN            shift and go to state 17


state 10

    (7) DEC_FUNCS -> epsilon .

    MAIN            reduce using rule 7 (DEC_FUNCS -> epsilon .)


state 11

    (8) DEC_FUNCS -> SOLO_FUNCS .

    MAIN            reduce using rule 8 (DEC_FUNCS -> SOLO_FUNCS .)


state 12

    (4) SOLO_FUNCS -> FUNCS . MAS_FUNCS
    (5) MAS_FUNCS -> . epsilon
    (6) MAS_FUNCS -> . SOLO_FUNCS
    (59) epsilon -> .
    (4) SOLO_FUNCS -> . FUNCS MAS_FUNCS
    (18) FUNCS -> . VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    MAIN            reduce using rule 59 (epsilon -> .)
    VOID            shift and go to state 13

    FUNCS                          shift and go to state 12
    MAS_FUNCS                      shift and go to state 18
    epsilon                        shift and go to state 19
    SOLO_FUNCS                     shift and go to state 20

state 13

    (18) FUNCS -> VOID . ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    ID              shift and go to state 21


state 14

    (9) VARS -> VAR LISTA_VAR .

    VOID            reduce using rule 9 (VARS -> VAR LISTA_VAR .)
    MAIN            reduce using rule 9 (VARS -> VAR LISTA_VAR .)
    LEFT_BRACE      reduce using rule 9 (VARS -> VAR LISTA_VAR .)


state 15

    (10) LISTA_VAR -> LISTA_ID . COLON TYPE SEMICOLON MAS_VAR

    COLON           shift and go to state 22


state 16

    (13) LISTA_ID -> ID . MAS_ID
    (14) MAS_ID -> . COMMA LISTA_ID
    (15) MAS_ID -> . epsilon
    (59) epsilon -> .

    COMMA           shift and go to state 24
    COLON           reduce using rule 59 (epsilon -> .)

    MAS_ID                         shift and go to state 23
    epsilon                        shift and go to state 25

state 17

    (1) PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN . BODY END
    (26) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 27

    BODY                           shift and go to state 26

state 18

    (4) SOLO_FUNCS -> FUNCS MAS_FUNCS .

    MAIN            reduce using rule 4 (SOLO_FUNCS -> FUNCS MAS_FUNCS .)


state 19

    (5) MAS_FUNCS -> epsilon .

    MAIN            reduce using rule 5 (MAS_FUNCS -> epsilon .)


state 20

    (6) MAS_FUNCS -> SOLO_FUNCS .

    MAIN            reduce using rule 6 (MAS_FUNCS -> SOLO_FUNCS .)


state 21

    (18) FUNCS -> VOID ID . LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    LEFT_PARENTHESIS shift and go to state 28


state 22

    (10) LISTA_VAR -> LISTA_ID COLON . TYPE SEMICOLON MAS_VAR
    (16) TYPE -> . INT
    (17) TYPE -> . FLOAT

    INT             shift and go to state 30
    FLOAT           shift and go to state 31

    TYPE                           shift and go to state 29

state 23

    (13) LISTA_ID -> ID MAS_ID .

    COLON           reduce using rule 13 (LISTA_ID -> ID MAS_ID .)


state 24

    (14) MAS_ID -> COMMA . LISTA_ID
    (13) LISTA_ID -> . ID MAS_ID

    ID              shift and go to state 16

    LISTA_ID                       shift and go to state 32

state 25

    (15) MAS_ID -> epsilon .

    COLON           reduce using rule 15 (MAS_ID -> epsilon .)


state 26

    (1) PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY . END

    END             shift and go to state 33


state 27

    (26) BODY -> LEFT_BRACE . DEC_STATEMENTS RIGHT_BRACE
    (27) DEC_STATEMENTS -> . epsilon
    (28) DEC_STATEMENTS -> . LISTA_STATEMENTS
    (59) epsilon -> .
    (29) LISTA_STATEMENTS -> . STATEMENT MAS_STATEMENTS
    (32) STATEMENT -> . ASSIGN
    (33) ASSIGN -> . ID EQUAL EXPRESION SEMICOLON

    RIGHT_BRACE     reduce using rule 59 (epsilon -> .)
    ID              shift and go to state 39

    DEC_STATEMENTS                 shift and go to state 34
    epsilon                        shift and go to state 35
    LISTA_STATEMENTS               shift and go to state 36
    STATEMENT                      shift and go to state 37
    ASSIGN                         shift and go to state 38

state 28

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS . PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON
    (19) PARAMETROS -> . epsilon
    (20) PARAMETROS -> . DEC_PARAMETROS
    (59) epsilon -> .
    (21) DEC_PARAMETROS -> . ID COLON TYPE LISTA_PARAMETROS

    RIGHT_PARENTHESIS reduce using rule 59 (epsilon -> .)
    ID              shift and go to state 40

    PARAMETROS                     shift and go to state 41
    epsilon                        shift and go to state 42
    DEC_PARAMETROS                 shift and go to state 43

state 29

    (10) LISTA_VAR -> LISTA_ID COLON TYPE . SEMICOLON MAS_VAR

    SEMICOLON       shift and go to state 44


state 30

    (16) TYPE -> INT .

    SEMICOLON       reduce using rule 16 (TYPE -> INT .)
    COMMA           reduce using rule 16 (TYPE -> INT .)
    RIGHT_PARENTHESIS reduce using rule 16 (TYPE -> INT .)


state 31

    (17) TYPE -> FLOAT .

    SEMICOLON       reduce using rule 17 (TYPE -> FLOAT .)
    COMMA           reduce using rule 17 (TYPE -> FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 17 (TYPE -> FLOAT .)


state 32

    (14) MAS_ID -> COMMA LISTA_ID .

    COLON           reduce using rule 14 (MAS_ID -> COMMA LISTA_ID .)


state 33

    (1) PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END .)


state 34

    (26) BODY -> LEFT_BRACE DEC_STATEMENTS . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 45


state 35

    (27) DEC_STATEMENTS -> epsilon .

    RIGHT_BRACE     reduce using rule 27 (DEC_STATEMENTS -> epsilon .)


state 36

    (28) DEC_STATEMENTS -> LISTA_STATEMENTS .

    RIGHT_BRACE     reduce using rule 28 (DEC_STATEMENTS -> LISTA_STATEMENTS .)


state 37

    (29) LISTA_STATEMENTS -> STATEMENT . MAS_STATEMENTS
    (30) MAS_STATEMENTS -> . epsilon
    (31) MAS_STATEMENTS -> . LISTA_STATEMENTS
    (59) epsilon -> .
    (29) LISTA_STATEMENTS -> . STATEMENT MAS_STATEMENTS
    (32) STATEMENT -> . ASSIGN
    (33) ASSIGN -> . ID EQUAL EXPRESION SEMICOLON

    RIGHT_BRACE     reduce using rule 59 (epsilon -> .)
    ID              shift and go to state 39

    STATEMENT                      shift and go to state 37
    MAS_STATEMENTS                 shift and go to state 46
    epsilon                        shift and go to state 47
    LISTA_STATEMENTS               shift and go to state 48
    ASSIGN                         shift and go to state 38

state 38

    (32) STATEMENT -> ASSIGN .

    ID              reduce using rule 32 (STATEMENT -> ASSIGN .)
    RIGHT_BRACE     reduce using rule 32 (STATEMENT -> ASSIGN .)


state 39

    (33) ASSIGN -> ID . EQUAL EXPRESION SEMICOLON

    EQUAL           shift and go to state 49


state 40

    (21) DEC_PARAMETROS -> ID . COLON TYPE LISTA_PARAMETROS

    COLON           shift and go to state 50


state 41

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS . RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 51


state 42

    (19) PARAMETROS -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 19 (PARAMETROS -> epsilon .)


state 43

    (20) PARAMETROS -> DEC_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 20 (PARAMETROS -> DEC_PARAMETROS .)


state 44

    (10) LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON . MAS_VAR
    (11) MAS_VAR -> . epsilon
    (12) MAS_VAR -> . LISTA_VAR
    (59) epsilon -> .
    (10) LISTA_VAR -> . LISTA_ID COLON TYPE SEMICOLON MAS_VAR
    (13) LISTA_ID -> . ID MAS_ID

    VOID            reduce using rule 59 (epsilon -> .)
    MAIN            reduce using rule 59 (epsilon -> .)
    LEFT_BRACE      reduce using rule 59 (epsilon -> .)
    ID              shift and go to state 16

    LISTA_ID                       shift and go to state 15
    MAS_VAR                        shift and go to state 52
    epsilon                        shift and go to state 53
    LISTA_VAR                      shift and go to state 54

state 45

    (26) BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .

    END             reduce using rule 26 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)
    RIGHT_BRACKET   reduce using rule 26 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)


state 46

    (29) LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS .

    RIGHT_BRACE     reduce using rule 29 (LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS .)


state 47

    (30) MAS_STATEMENTS -> epsilon .

    RIGHT_BRACE     reduce using rule 30 (MAS_STATEMENTS -> epsilon .)


state 48

    (31) MAS_STATEMENTS -> LISTA_STATEMENTS .

    RIGHT_BRACE     reduce using rule 31 (MAS_STATEMENTS -> LISTA_STATEMENTS .)


state 49

    (33) ASSIGN -> ID EQUAL . EXPRESION SEMICOLON
    (34) EXPRESION -> . EXP MAS_EXPRESIONES
    (40) EXP -> . TERMINO MAS_EXP
    (45) TERMINO -> . FACTOR MAS_TERMINO
    (50) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (51) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (54) OPERADORES_FACTOR -> . PLUS
    (55) OPERADORES_FACTOR -> . MINUS
    (56) OPERADORES_FACTOR -> . epsilon
    (59) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    ID              reduce using rule 59 (epsilon -> .)
    CTE_INT         reduce using rule 59 (epsilon -> .)
    CTE_FLOAT       reduce using rule 59 (epsilon -> .)

    EXPRESION                      shift and go to state 55
    EXP                            shift and go to state 56
    TERMINO                        shift and go to state 57
    FACTOR                         shift and go to state 58
    OPERADORES_FACTOR              shift and go to state 59
    epsilon                        shift and go to state 63

state 50

    (21) DEC_PARAMETROS -> ID COLON . TYPE LISTA_PARAMETROS
    (16) TYPE -> . INT
    (17) TYPE -> . FLOAT

    INT             shift and go to state 30
    FLOAT           shift and go to state 31

    TYPE                           shift and go to state 64

state 51

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS . LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    LEFT_BRACKET    shift and go to state 65


state 52

    (10) LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR .

    VOID            reduce using rule 10 (LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR .)
    MAIN            reduce using rule 10 (LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR .)
    LEFT_BRACE      reduce using rule 10 (LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR .)


state 53

    (11) MAS_VAR -> epsilon .

    VOID            reduce using rule 11 (MAS_VAR -> epsilon .)
    MAIN            reduce using rule 11 (MAS_VAR -> epsilon .)
    LEFT_BRACE      reduce using rule 11 (MAS_VAR -> epsilon .)


state 54

    (12) MAS_VAR -> LISTA_VAR .

    VOID            reduce using rule 12 (MAS_VAR -> LISTA_VAR .)
    MAIN            reduce using rule 12 (MAS_VAR -> LISTA_VAR .)
    LEFT_BRACE      reduce using rule 12 (MAS_VAR -> LISTA_VAR .)


state 55

    (33) ASSIGN -> ID EQUAL EXPRESION . SEMICOLON

    SEMICOLON       shift and go to state 66


state 56

    (34) EXPRESION -> EXP . MAS_EXPRESIONES
    (35) MAS_EXPRESIONES -> . epsilon
    (36) MAS_EXPRESIONES -> . OPERADORES EXP
    (59) epsilon -> .
    (37) OPERADORES -> . GREATER_THAN
    (38) OPERADORES -> . LESS_THAN
    (39) OPERADORES -> . NOT_EQUAL

    SEMICOLON       reduce using rule 59 (epsilon -> .)
    RIGHT_PARENTHESIS reduce using rule 59 (epsilon -> .)
    GREATER_THAN    shift and go to state 70
    LESS_THAN       shift and go to state 71
    NOT_EQUAL       shift and go to state 72

    MAS_EXPRESIONES                shift and go to state 67
    epsilon                        shift and go to state 68
    OPERADORES                     shift and go to state 69

state 57

    (40) EXP -> TERMINO . MAS_EXP
    (41) MAS_EXP -> . OPERADORES_EXP EXP
    (42) MAS_EXP -> . epsilon
    (43) OPERADORES_EXP -> . PLUS
    (44) OPERADORES_EXP -> . MINUS
    (59) epsilon -> .

    PLUS            shift and go to state 76
    MINUS           shift and go to state 77
    GREATER_THAN    reduce using rule 59 (epsilon -> .)
    LESS_THAN       reduce using rule 59 (epsilon -> .)
    NOT_EQUAL       reduce using rule 59 (epsilon -> .)
    SEMICOLON       reduce using rule 59 (epsilon -> .)
    RIGHT_PARENTHESIS reduce using rule 59 (epsilon -> .)

    MAS_EXP                        shift and go to state 73
    OPERADORES_EXP                 shift and go to state 74
    epsilon                        shift and go to state 75

state 58

    (45) TERMINO -> FACTOR . MAS_TERMINO
    (46) MAS_TERMINO -> . epsilon
    (47) MAS_TERMINO -> . OPERADORES_TER TERMINO
    (59) epsilon -> .
    (48) OPERADORES_TER -> . MULTIPLICATION
    (49) OPERADORES_TER -> . DIVISION

    PLUS            reduce using rule 59 (epsilon -> .)
    MINUS           reduce using rule 59 (epsilon -> .)
    GREATER_THAN    reduce using rule 59 (epsilon -> .)
    LESS_THAN       reduce using rule 59 (epsilon -> .)
    NOT_EQUAL       reduce using rule 59 (epsilon -> .)
    SEMICOLON       reduce using rule 59 (epsilon -> .)
    RIGHT_PARENTHESIS reduce using rule 59 (epsilon -> .)
    MULTIPLICATION  shift and go to state 81
    DIVISION        shift and go to state 82

    MAS_TERMINO                    shift and go to state 78
    epsilon                        shift and go to state 79
    OPERADORES_TER                 shift and go to state 80

state 59

    (50) FACTOR -> OPERADORES_FACTOR . ID_CTE
    (52) ID_CTE -> . ID
    (53) ID_CTE -> . CTE
    (57) CTE -> . CTE_INT
    (58) CTE -> . CTE_FLOAT

    ID              shift and go to state 84
    CTE_INT         shift and go to state 86
    CTE_FLOAT       shift and go to state 87

    ID_CTE                         shift and go to state 83
    CTE                            shift and go to state 85

state 60

    (51) FACTOR -> LEFT_PARENTHESIS . EXPRESION RIGHT_PARENTHESIS
    (34) EXPRESION -> . EXP MAS_EXPRESIONES
    (40) EXP -> . TERMINO MAS_EXP
    (45) TERMINO -> . FACTOR MAS_TERMINO
    (50) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (51) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (54) OPERADORES_FACTOR -> . PLUS
    (55) OPERADORES_FACTOR -> . MINUS
    (56) OPERADORES_FACTOR -> . epsilon
    (59) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    ID              reduce using rule 59 (epsilon -> .)
    CTE_INT         reduce using rule 59 (epsilon -> .)
    CTE_FLOAT       reduce using rule 59 (epsilon -> .)

    EXPRESION                      shift and go to state 88
    EXP                            shift and go to state 56
    TERMINO                        shift and go to state 57
    FACTOR                         shift and go to state 58
    OPERADORES_FACTOR              shift and go to state 59
    epsilon                        shift and go to state 63

state 61

    (54) OPERADORES_FACTOR -> PLUS .

    ID              reduce using rule 54 (OPERADORES_FACTOR -> PLUS .)
    CTE_INT         reduce using rule 54 (OPERADORES_FACTOR -> PLUS .)
    CTE_FLOAT       reduce using rule 54 (OPERADORES_FACTOR -> PLUS .)


state 62

    (55) OPERADORES_FACTOR -> MINUS .

    ID              reduce using rule 55 (OPERADORES_FACTOR -> MINUS .)
    CTE_INT         reduce using rule 55 (OPERADORES_FACTOR -> MINUS .)
    CTE_FLOAT       reduce using rule 55 (OPERADORES_FACTOR -> MINUS .)


state 63

    (56) OPERADORES_FACTOR -> epsilon .

    ID              reduce using rule 56 (OPERADORES_FACTOR -> epsilon .)
    CTE_INT         reduce using rule 56 (OPERADORES_FACTOR -> epsilon .)
    CTE_FLOAT       reduce using rule 56 (OPERADORES_FACTOR -> epsilon .)


state 64

    (21) DEC_PARAMETROS -> ID COLON TYPE . LISTA_PARAMETROS
    (22) LISTA_PARAMETROS -> . epsilon
    (23) LISTA_PARAMETROS -> . COMMA DEC_PARAMETROS
    (59) epsilon -> .

    COMMA           shift and go to state 91
    RIGHT_PARENTHESIS reduce using rule 59 (epsilon -> .)

    LISTA_PARAMETROS               shift and go to state 89
    epsilon                        shift and go to state 90

state 65

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET . VARS_FUNC BODY RIGHT_BRACKET SEMICOLON
    (24) VARS_FUNC -> . epsilon
    (25) VARS_FUNC -> . VARS
    (59) epsilon -> .
    (9) VARS -> . VAR LISTA_VAR

    LEFT_BRACE      reduce using rule 59 (epsilon -> .)
    VAR             shift and go to state 8

    VARS_FUNC                      shift and go to state 92
    epsilon                        shift and go to state 93
    VARS                           shift and go to state 94

state 66

    (33) ASSIGN -> ID EQUAL EXPRESION SEMICOLON .

    ID              reduce using rule 33 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)
    RIGHT_BRACE     reduce using rule 33 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)


state 67

    (34) EXPRESION -> EXP MAS_EXPRESIONES .

    SEMICOLON       reduce using rule 34 (EXPRESION -> EXP MAS_EXPRESIONES .)
    RIGHT_PARENTHESIS reduce using rule 34 (EXPRESION -> EXP MAS_EXPRESIONES .)


state 68

    (35) MAS_EXPRESIONES -> epsilon .

    SEMICOLON       reduce using rule 35 (MAS_EXPRESIONES -> epsilon .)
    RIGHT_PARENTHESIS reduce using rule 35 (MAS_EXPRESIONES -> epsilon .)


state 69

    (36) MAS_EXPRESIONES -> OPERADORES . EXP
    (40) EXP -> . TERMINO MAS_EXP
    (45) TERMINO -> . FACTOR MAS_TERMINO
    (50) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (51) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (54) OPERADORES_FACTOR -> . PLUS
    (55) OPERADORES_FACTOR -> . MINUS
    (56) OPERADORES_FACTOR -> . epsilon
    (59) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    ID              reduce using rule 59 (epsilon -> .)
    CTE_INT         reduce using rule 59 (epsilon -> .)
    CTE_FLOAT       reduce using rule 59 (epsilon -> .)

    EXP                            shift and go to state 95
    TERMINO                        shift and go to state 57
    FACTOR                         shift and go to state 58
    OPERADORES_FACTOR              shift and go to state 59
    epsilon                        shift and go to state 63

state 70

    (37) OPERADORES -> GREATER_THAN .

    LEFT_PARENTHESIS reduce using rule 37 (OPERADORES -> GREATER_THAN .)
    PLUS            reduce using rule 37 (OPERADORES -> GREATER_THAN .)
    MINUS           reduce using rule 37 (OPERADORES -> GREATER_THAN .)
    ID              reduce using rule 37 (OPERADORES -> GREATER_THAN .)
    CTE_INT         reduce using rule 37 (OPERADORES -> GREATER_THAN .)
    CTE_FLOAT       reduce using rule 37 (OPERADORES -> GREATER_THAN .)


state 71

    (38) OPERADORES -> LESS_THAN .

    LEFT_PARENTHESIS reduce using rule 38 (OPERADORES -> LESS_THAN .)
    PLUS            reduce using rule 38 (OPERADORES -> LESS_THAN .)
    MINUS           reduce using rule 38 (OPERADORES -> LESS_THAN .)
    ID              reduce using rule 38 (OPERADORES -> LESS_THAN .)
    CTE_INT         reduce using rule 38 (OPERADORES -> LESS_THAN .)
    CTE_FLOAT       reduce using rule 38 (OPERADORES -> LESS_THAN .)


state 72

    (39) OPERADORES -> NOT_EQUAL .

    LEFT_PARENTHESIS reduce using rule 39 (OPERADORES -> NOT_EQUAL .)
    PLUS            reduce using rule 39 (OPERADORES -> NOT_EQUAL .)
    MINUS           reduce using rule 39 (OPERADORES -> NOT_EQUAL .)
    ID              reduce using rule 39 (OPERADORES -> NOT_EQUAL .)
    CTE_INT         reduce using rule 39 (OPERADORES -> NOT_EQUAL .)
    CTE_FLOAT       reduce using rule 39 (OPERADORES -> NOT_EQUAL .)


state 73

    (40) EXP -> TERMINO MAS_EXP .

    GREATER_THAN    reduce using rule 40 (EXP -> TERMINO MAS_EXP .)
    LESS_THAN       reduce using rule 40 (EXP -> TERMINO MAS_EXP .)
    NOT_EQUAL       reduce using rule 40 (EXP -> TERMINO MAS_EXP .)
    SEMICOLON       reduce using rule 40 (EXP -> TERMINO MAS_EXP .)
    RIGHT_PARENTHESIS reduce using rule 40 (EXP -> TERMINO MAS_EXP .)


state 74

    (41) MAS_EXP -> OPERADORES_EXP . EXP
    (40) EXP -> . TERMINO MAS_EXP
    (45) TERMINO -> . FACTOR MAS_TERMINO
    (50) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (51) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (54) OPERADORES_FACTOR -> . PLUS
    (55) OPERADORES_FACTOR -> . MINUS
    (56) OPERADORES_FACTOR -> . epsilon
    (59) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    ID              reduce using rule 59 (epsilon -> .)
    CTE_INT         reduce using rule 59 (epsilon -> .)
    CTE_FLOAT       reduce using rule 59 (epsilon -> .)

    EXP                            shift and go to state 96
    TERMINO                        shift and go to state 57
    FACTOR                         shift and go to state 58
    OPERADORES_FACTOR              shift and go to state 59
    epsilon                        shift and go to state 63

state 75

    (42) MAS_EXP -> epsilon .

    GREATER_THAN    reduce using rule 42 (MAS_EXP -> epsilon .)
    LESS_THAN       reduce using rule 42 (MAS_EXP -> epsilon .)
    NOT_EQUAL       reduce using rule 42 (MAS_EXP -> epsilon .)
    SEMICOLON       reduce using rule 42 (MAS_EXP -> epsilon .)
    RIGHT_PARENTHESIS reduce using rule 42 (MAS_EXP -> epsilon .)


state 76

    (43) OPERADORES_EXP -> PLUS .

    LEFT_PARENTHESIS reduce using rule 43 (OPERADORES_EXP -> PLUS .)
    PLUS            reduce using rule 43 (OPERADORES_EXP -> PLUS .)
    MINUS           reduce using rule 43 (OPERADORES_EXP -> PLUS .)
    ID              reduce using rule 43 (OPERADORES_EXP -> PLUS .)
    CTE_INT         reduce using rule 43 (OPERADORES_EXP -> PLUS .)
    CTE_FLOAT       reduce using rule 43 (OPERADORES_EXP -> PLUS .)


state 77

    (44) OPERADORES_EXP -> MINUS .

    LEFT_PARENTHESIS reduce using rule 44 (OPERADORES_EXP -> MINUS .)
    PLUS            reduce using rule 44 (OPERADORES_EXP -> MINUS .)
    MINUS           reduce using rule 44 (OPERADORES_EXP -> MINUS .)
    ID              reduce using rule 44 (OPERADORES_EXP -> MINUS .)
    CTE_INT         reduce using rule 44 (OPERADORES_EXP -> MINUS .)
    CTE_FLOAT       reduce using rule 44 (OPERADORES_EXP -> MINUS .)


state 78

    (45) TERMINO -> FACTOR MAS_TERMINO .

    PLUS            reduce using rule 45 (TERMINO -> FACTOR MAS_TERMINO .)
    MINUS           reduce using rule 45 (TERMINO -> FACTOR MAS_TERMINO .)
    GREATER_THAN    reduce using rule 45 (TERMINO -> FACTOR MAS_TERMINO .)
    LESS_THAN       reduce using rule 45 (TERMINO -> FACTOR MAS_TERMINO .)
    NOT_EQUAL       reduce using rule 45 (TERMINO -> FACTOR MAS_TERMINO .)
    SEMICOLON       reduce using rule 45 (TERMINO -> FACTOR MAS_TERMINO .)
    RIGHT_PARENTHESIS reduce using rule 45 (TERMINO -> FACTOR MAS_TERMINO .)


state 79

    (46) MAS_TERMINO -> epsilon .

    PLUS            reduce using rule 46 (MAS_TERMINO -> epsilon .)
    MINUS           reduce using rule 46 (MAS_TERMINO -> epsilon .)
    GREATER_THAN    reduce using rule 46 (MAS_TERMINO -> epsilon .)
    LESS_THAN       reduce using rule 46 (MAS_TERMINO -> epsilon .)
    NOT_EQUAL       reduce using rule 46 (MAS_TERMINO -> epsilon .)
    SEMICOLON       reduce using rule 46 (MAS_TERMINO -> epsilon .)
    RIGHT_PARENTHESIS reduce using rule 46 (MAS_TERMINO -> epsilon .)


state 80

    (47) MAS_TERMINO -> OPERADORES_TER . TERMINO
    (45) TERMINO -> . FACTOR MAS_TERMINO
    (50) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (51) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (54) OPERADORES_FACTOR -> . PLUS
    (55) OPERADORES_FACTOR -> . MINUS
    (56) OPERADORES_FACTOR -> . epsilon
    (59) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 60
    PLUS            shift and go to state 61
    MINUS           shift and go to state 62
    ID              reduce using rule 59 (epsilon -> .)
    CTE_INT         reduce using rule 59 (epsilon -> .)
    CTE_FLOAT       reduce using rule 59 (epsilon -> .)

    TERMINO                        shift and go to state 97
    FACTOR                         shift and go to state 58
    OPERADORES_FACTOR              shift and go to state 59
    epsilon                        shift and go to state 63

state 81

    (48) OPERADORES_TER -> MULTIPLICATION .

    LEFT_PARENTHESIS reduce using rule 48 (OPERADORES_TER -> MULTIPLICATION .)
    PLUS            reduce using rule 48 (OPERADORES_TER -> MULTIPLICATION .)
    MINUS           reduce using rule 48 (OPERADORES_TER -> MULTIPLICATION .)
    ID              reduce using rule 48 (OPERADORES_TER -> MULTIPLICATION .)
    CTE_INT         reduce using rule 48 (OPERADORES_TER -> MULTIPLICATION .)
    CTE_FLOAT       reduce using rule 48 (OPERADORES_TER -> MULTIPLICATION .)


state 82

    (49) OPERADORES_TER -> DIVISION .

    LEFT_PARENTHESIS reduce using rule 49 (OPERADORES_TER -> DIVISION .)
    PLUS            reduce using rule 49 (OPERADORES_TER -> DIVISION .)
    MINUS           reduce using rule 49 (OPERADORES_TER -> DIVISION .)
    ID              reduce using rule 49 (OPERADORES_TER -> DIVISION .)
    CTE_INT         reduce using rule 49 (OPERADORES_TER -> DIVISION .)
    CTE_FLOAT       reduce using rule 49 (OPERADORES_TER -> DIVISION .)


state 83

    (50) FACTOR -> OPERADORES_FACTOR ID_CTE .

    MULTIPLICATION  reduce using rule 50 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    DIVISION        reduce using rule 50 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    PLUS            reduce using rule 50 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    MINUS           reduce using rule 50 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    GREATER_THAN    reduce using rule 50 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    LESS_THAN       reduce using rule 50 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    NOT_EQUAL       reduce using rule 50 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    SEMICOLON       reduce using rule 50 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    RIGHT_PARENTHESIS reduce using rule 50 (FACTOR -> OPERADORES_FACTOR ID_CTE .)


state 84

    (52) ID_CTE -> ID .

    MULTIPLICATION  reduce using rule 52 (ID_CTE -> ID .)
    DIVISION        reduce using rule 52 (ID_CTE -> ID .)
    PLUS            reduce using rule 52 (ID_CTE -> ID .)
    MINUS           reduce using rule 52 (ID_CTE -> ID .)
    GREATER_THAN    reduce using rule 52 (ID_CTE -> ID .)
    LESS_THAN       reduce using rule 52 (ID_CTE -> ID .)
    NOT_EQUAL       reduce using rule 52 (ID_CTE -> ID .)
    SEMICOLON       reduce using rule 52 (ID_CTE -> ID .)
    RIGHT_PARENTHESIS reduce using rule 52 (ID_CTE -> ID .)


state 85

    (53) ID_CTE -> CTE .

    MULTIPLICATION  reduce using rule 53 (ID_CTE -> CTE .)
    DIVISION        reduce using rule 53 (ID_CTE -> CTE .)
    PLUS            reduce using rule 53 (ID_CTE -> CTE .)
    MINUS           reduce using rule 53 (ID_CTE -> CTE .)
    GREATER_THAN    reduce using rule 53 (ID_CTE -> CTE .)
    LESS_THAN       reduce using rule 53 (ID_CTE -> CTE .)
    NOT_EQUAL       reduce using rule 53 (ID_CTE -> CTE .)
    SEMICOLON       reduce using rule 53 (ID_CTE -> CTE .)
    RIGHT_PARENTHESIS reduce using rule 53 (ID_CTE -> CTE .)


state 86

    (57) CTE -> CTE_INT .

    MULTIPLICATION  reduce using rule 57 (CTE -> CTE_INT .)
    DIVISION        reduce using rule 57 (CTE -> CTE_INT .)
    PLUS            reduce using rule 57 (CTE -> CTE_INT .)
    MINUS           reduce using rule 57 (CTE -> CTE_INT .)
    GREATER_THAN    reduce using rule 57 (CTE -> CTE_INT .)
    LESS_THAN       reduce using rule 57 (CTE -> CTE_INT .)
    NOT_EQUAL       reduce using rule 57 (CTE -> CTE_INT .)
    SEMICOLON       reduce using rule 57 (CTE -> CTE_INT .)
    RIGHT_PARENTHESIS reduce using rule 57 (CTE -> CTE_INT .)


state 87

    (58) CTE -> CTE_FLOAT .

    MULTIPLICATION  reduce using rule 58 (CTE -> CTE_FLOAT .)
    DIVISION        reduce using rule 58 (CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 58 (CTE -> CTE_FLOAT .)
    MINUS           reduce using rule 58 (CTE -> CTE_FLOAT .)
    GREATER_THAN    reduce using rule 58 (CTE -> CTE_FLOAT .)
    LESS_THAN       reduce using rule 58 (CTE -> CTE_FLOAT .)
    NOT_EQUAL       reduce using rule 58 (CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 58 (CTE -> CTE_FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 58 (CTE -> CTE_FLOAT .)


state 88

    (51) FACTOR -> LEFT_PARENTHESIS EXPRESION . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 98


state 89

    (21) DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 21 (DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS .)


state 90

    (22) LISTA_PARAMETROS -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 22 (LISTA_PARAMETROS -> epsilon .)


state 91

    (23) LISTA_PARAMETROS -> COMMA . DEC_PARAMETROS
    (21) DEC_PARAMETROS -> . ID COLON TYPE LISTA_PARAMETROS

    ID              shift and go to state 40

    DEC_PARAMETROS                 shift and go to state 99

state 92

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC . BODY RIGHT_BRACKET SEMICOLON
    (26) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 27

    BODY                           shift and go to state 100

state 93

    (24) VARS_FUNC -> epsilon .

    LEFT_BRACE      reduce using rule 24 (VARS_FUNC -> epsilon .)


state 94

    (25) VARS_FUNC -> VARS .

    LEFT_BRACE      reduce using rule 25 (VARS_FUNC -> VARS .)


state 95

    (36) MAS_EXPRESIONES -> OPERADORES EXP .

    SEMICOLON       reduce using rule 36 (MAS_EXPRESIONES -> OPERADORES EXP .)
    RIGHT_PARENTHESIS reduce using rule 36 (MAS_EXPRESIONES -> OPERADORES EXP .)


state 96

    (41) MAS_EXP -> OPERADORES_EXP EXP .

    GREATER_THAN    reduce using rule 41 (MAS_EXP -> OPERADORES_EXP EXP .)
    LESS_THAN       reduce using rule 41 (MAS_EXP -> OPERADORES_EXP EXP .)
    NOT_EQUAL       reduce using rule 41 (MAS_EXP -> OPERADORES_EXP EXP .)
    SEMICOLON       reduce using rule 41 (MAS_EXP -> OPERADORES_EXP EXP .)
    RIGHT_PARENTHESIS reduce using rule 41 (MAS_EXP -> OPERADORES_EXP EXP .)


state 97

    (47) MAS_TERMINO -> OPERADORES_TER TERMINO .

    PLUS            reduce using rule 47 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    MINUS           reduce using rule 47 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    GREATER_THAN    reduce using rule 47 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    LESS_THAN       reduce using rule 47 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    NOT_EQUAL       reduce using rule 47 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    SEMICOLON       reduce using rule 47 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    RIGHT_PARENTHESIS reduce using rule 47 (MAS_TERMINO -> OPERADORES_TER TERMINO .)


state 98

    (51) FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .

    MULTIPLICATION  reduce using rule 51 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    DIVISION        reduce using rule 51 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 51 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 51 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 51 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 51 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 51 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 51 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 51 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)


state 99

    (23) LISTA_PARAMETROS -> COMMA DEC_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 23 (LISTA_PARAMETROS -> COMMA DEC_PARAMETROS .)


state 100

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY . RIGHT_BRACKET SEMICOLON

    RIGHT_BRACKET   shift and go to state 101


state 101

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 102


state 102

    (18) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON .

    VOID            reduce using rule 18 (FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON .)
    MAIN            reduce using rule 18 (FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON .)

