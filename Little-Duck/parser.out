Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> PROGRAMA
Rule 1     PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END
Rule 2     PUNTO_1 -> <empty>
Rule 3     DEC_VARS -> epsilon
Rule 4     DEC_VARS -> VARS
Rule 5     SOLO_FUNCS -> FUNCS MAS_FUNCS
Rule 6     MAS_FUNCS -> epsilon
Rule 7     MAS_FUNCS -> SOLO_FUNCS
Rule 8     DEC_FUNCS -> epsilon
Rule 9     DEC_FUNCS -> SOLO_FUNCS
Rule 10    PUNTO_2 -> <empty>
Rule 11    VARS -> VAR PUNTO_2 LISTA_VAR
Rule 12    PUNTO_3 -> <empty>
Rule 13    LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR
Rule 14    MAS_VAR -> epsilon
Rule 15    MAS_VAR -> LISTA_VAR
Rule 16    LISTA_ID -> ID MAS_ID
Rule 17    MAS_ID -> COMMA LISTA_ID
Rule 18    MAS_ID -> epsilon
Rule 19    TYPE -> INT
Rule 20    TYPE -> FLOAT
Rule 21    FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON
Rule 22    PARAMETROS -> epsilon
Rule 23    PARAMETROS -> DEC_PARAMETROS
Rule 24    DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS
Rule 25    LISTA_PARAMETROS -> epsilon
Rule 26    LISTA_PARAMETROS -> COMMA DEC_PARAMETROS
Rule 27    VARS_FUNC -> epsilon
Rule 28    VARS_FUNC -> VARS
Rule 29    BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE
Rule 30    DEC_STATEMENTS -> epsilon
Rule 31    DEC_STATEMENTS -> LISTA_STATEMENTS
Rule 32    LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS
Rule 33    MAS_STATEMENTS -> epsilon
Rule 34    MAS_STATEMENTS -> LISTA_STATEMENTS
Rule 35    STATEMENT -> ASSIGN
Rule 36    STATEMENT -> CONDITION
Rule 37    STATEMENT -> CYCLE
Rule 38    STATEMENT -> F_CALL
Rule 39    STATEMENT -> PRINT_STMT
Rule 40    ASSIGN -> ID EQUAL EXPRESION SEMICOLON
Rule 41    EXPRESION -> EXP MAS_EXPRESIONES
Rule 42    MAS_EXPRESIONES -> epsilon
Rule 43    MAS_EXPRESIONES -> OPERADORES EXP
Rule 44    OPERADORES -> GREATER_THAN
Rule 45    OPERADORES -> LESS_THAN
Rule 46    OPERADORES -> NOT_EQUAL
Rule 47    EXP -> TERMINO MAS_EXP
Rule 48    MAS_EXP -> OPERADORES_EXP EXP
Rule 49    MAS_EXP -> epsilon
Rule 50    OPERADORES_EXP -> PLUS
Rule 51    OPERADORES_EXP -> MINUS
Rule 52    TERMINO -> FACTOR MAS_TERMINO
Rule 53    MAS_TERMINO -> epsilon
Rule 54    MAS_TERMINO -> OPERADORES_TER TERMINO
Rule 55    OPERADORES_TER -> MULTIPLICATION
Rule 56    OPERADORES_TER -> DIVISION
Rule 57    FACTOR -> OPERADORES_FACTOR ID_CTE
Rule 58    FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
Rule 59    ID_CTE -> ID
Rule 60    ID_CTE -> CTE
Rule 61    OPERADORES_FACTOR -> PLUS
Rule 62    OPERADORES_FACTOR -> MINUS
Rule 63    OPERADORES_FACTOR -> epsilon
Rule 64    CTE -> CTE_INT
Rule 65    CTE -> CTE_FLOAT
Rule 66    CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON
Rule 67    ELSE_CONDITION -> epsilon
Rule 68    ELSE_CONDITION -> ELSE BODY
Rule 69    CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON
Rule 70    F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON
Rule 71    EXPRESIONES -> epsilon
Rule 72    EXPRESIONES -> EXPRESIONES_F
Rule 73    EXPRESIONES_F -> EXPRESION LISTA_EXP
Rule 74    LISTA_EXP -> epsilon
Rule 75    LISTA_EXP -> COMMA EXPRESIONES_F
Rule 76    PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON
Rule 77    PARAMETROS_PRINT -> CTE_STRING MAS_PRINT
Rule 78    PARAMETROS_PRINT -> EXPRESION MAS_PRINT
Rule 79    MAS_PRINT -> epsilon
Rule 80    MAS_PRINT -> COMMA PARAMETROS_PRINT
Rule 81    epsilon -> <empty>

Terminals, with rules where they appear

COLON                : 13 24
COMMA                : 17 26 75 80
CTE_FLOAT            : 65
CTE_INT              : 64
CTE_STRING           : 77
DIVISION             : 56
DO                   : 69
ELSE                 : 68
END                  : 1
EQUAL                : 40
FLOAT                : 20
GREATER_THAN         : 44
ID                   : 1 16 21 24 40 59 70
IF                   : 66
INT                  : 19
LEFT_BRACE           : 29
LEFT_BRACKET         : 21
LEFT_PARENTHESIS     : 21 58 66 69 70 76
LESS_THAN            : 45
MAIN                 : 1
MINUS                : 51 62
MULTIPLICATION       : 55
NOT_EQUAL            : 46
PLUS                 : 50 61
PRINT                : 76
PROGRAM              : 1
RIGHT_BRACE          : 29
RIGHT_BRACKET        : 21
RIGHT_PARENTHESIS    : 21 58 66 69 70 76
SEMICOLON            : 1 13 21 40 66 69 70 76
VAR                  : 11
VOID                 : 21
WHILE                : 69
error                : 

Nonterminals, with rules where they appear

ASSIGN               : 35
BODY                 : 1 21 66 68 69
CONDITION            : 36
CTE                  : 60
CYCLE                : 37
DEC_FUNCS            : 1
DEC_PARAMETROS       : 23 26
DEC_STATEMENTS       : 29
DEC_VARS             : 1
ELSE_CONDITION       : 66
EXP                  : 41 43 48
EXPRESION            : 40 58 66 69 73 78
EXPRESIONES          : 70
EXPRESIONES_F        : 72 75
FACTOR               : 52
FUNCS                : 5
F_CALL               : 38
ID_CTE               : 57
LISTA_EXP            : 73
LISTA_ID             : 13 17
LISTA_PARAMETROS     : 24
LISTA_STATEMENTS     : 31 34
LISTA_VAR            : 11 15
MAS_EXP              : 47
MAS_EXPRESIONES      : 41
MAS_FUNCS            : 5
MAS_ID               : 16
MAS_PRINT            : 77 78
MAS_STATEMENTS       : 32
MAS_TERMINO          : 52
MAS_VAR              : 13
OPERADORES           : 43
OPERADORES_EXP       : 48
OPERADORES_FACTOR    : 57
OPERADORES_TER       : 54
PARAMETROS           : 21
PARAMETROS_PRINT     : 76 80
PRINT_STMT           : 39
PROGRAMA             : 0
PUNTO_1              : 1
PUNTO_2              : 11
PUNTO_3              : 13
SOLO_FUNCS           : 7 9
STATEMENT            : 32
TERMINO              : 47 54
TYPE                 : 13 24
VARS                 : 4 28
VARS_FUNC            : 21
epsilon              : 3 6 8 14 18 22 25 27 30 33 42 49 53 63 67 71 74 79

Parsing method: LALR

state 0

    (0) S' -> . PROGRAMA
    (1) PROGRAMA -> . PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END

    PROGRAM         shift and go to state 2

    PROGRAMA                       shift and go to state 1

state 1

    (0) S' -> PROGRAMA .



state 2

    (1) PROGRAMA -> PROGRAM . ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END

    ID              shift and go to state 3


state 3

    (1) PROGRAMA -> PROGRAM ID . PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END
    (2) PUNTO_1 -> .

    SEMICOLON       reduce using rule 2 (PUNTO_1 -> .)

    PUNTO_1                        shift and go to state 4

state 4

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 . SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END

    SEMICOLON       shift and go to state 5


state 5

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON . DEC_VARS DEC_FUNCS MAIN BODY END
    (3) DEC_VARS -> . epsilon
    (4) DEC_VARS -> . VARS
    (81) epsilon -> .
    (11) VARS -> . VAR PUNTO_2 LISTA_VAR

    VOID            reduce using rule 81 (epsilon -> .)
    MAIN            reduce using rule 81 (epsilon -> .)
    VAR             shift and go to state 9

    DEC_VARS                       shift and go to state 6
    epsilon                        shift and go to state 7
    VARS                           shift and go to state 8

state 6

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS . DEC_FUNCS MAIN BODY END
    (8) DEC_FUNCS -> . epsilon
    (9) DEC_FUNCS -> . SOLO_FUNCS
    (81) epsilon -> .
    (5) SOLO_FUNCS -> . FUNCS MAS_FUNCS
    (21) FUNCS -> . VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    MAIN            reduce using rule 81 (epsilon -> .)
    VOID            shift and go to state 14

    DEC_FUNCS                      shift and go to state 10
    epsilon                        shift and go to state 11
    SOLO_FUNCS                     shift and go to state 12
    FUNCS                          shift and go to state 13

state 7

    (3) DEC_VARS -> epsilon .

    VOID            reduce using rule 3 (DEC_VARS -> epsilon .)
    MAIN            reduce using rule 3 (DEC_VARS -> epsilon .)


state 8

    (4) DEC_VARS -> VARS .

    VOID            reduce using rule 4 (DEC_VARS -> VARS .)
    MAIN            reduce using rule 4 (DEC_VARS -> VARS .)


state 9

    (11) VARS -> VAR . PUNTO_2 LISTA_VAR
    (10) PUNTO_2 -> .

    ID              reduce using rule 10 (PUNTO_2 -> .)

    PUNTO_2                        shift and go to state 15

state 10

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS . MAIN BODY END

    MAIN            shift and go to state 16


state 11

    (8) DEC_FUNCS -> epsilon .

    MAIN            reduce using rule 8 (DEC_FUNCS -> epsilon .)


state 12

    (9) DEC_FUNCS -> SOLO_FUNCS .

    MAIN            reduce using rule 9 (DEC_FUNCS -> SOLO_FUNCS .)


state 13

    (5) SOLO_FUNCS -> FUNCS . MAS_FUNCS
    (6) MAS_FUNCS -> . epsilon
    (7) MAS_FUNCS -> . SOLO_FUNCS
    (81) epsilon -> .
    (5) SOLO_FUNCS -> . FUNCS MAS_FUNCS
    (21) FUNCS -> . VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    MAIN            reduce using rule 81 (epsilon -> .)
    VOID            shift and go to state 14

    FUNCS                          shift and go to state 13
    MAS_FUNCS                      shift and go to state 17
    epsilon                        shift and go to state 18
    SOLO_FUNCS                     shift and go to state 19

state 14

    (21) FUNCS -> VOID . ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    ID              shift and go to state 20


state 15

    (11) VARS -> VAR PUNTO_2 . LISTA_VAR
    (13) LISTA_VAR -> . LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR
    (16) LISTA_ID -> . ID MAS_ID

    ID              shift and go to state 23

    LISTA_VAR                      shift and go to state 21
    LISTA_ID                       shift and go to state 22

state 16

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN . BODY END
    (29) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 24

state 17

    (5) SOLO_FUNCS -> FUNCS MAS_FUNCS .

    MAIN            reduce using rule 5 (SOLO_FUNCS -> FUNCS MAS_FUNCS .)


state 18

    (6) MAS_FUNCS -> epsilon .

    MAIN            reduce using rule 6 (MAS_FUNCS -> epsilon .)


state 19

    (7) MAS_FUNCS -> SOLO_FUNCS .

    MAIN            reduce using rule 7 (MAS_FUNCS -> SOLO_FUNCS .)


state 20

    (21) FUNCS -> VOID ID . LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    LEFT_PARENTHESIS shift and go to state 26


state 21

    (11) VARS -> VAR PUNTO_2 LISTA_VAR .

    VOID            reduce using rule 11 (VARS -> VAR PUNTO_2 LISTA_VAR .)
    MAIN            reduce using rule 11 (VARS -> VAR PUNTO_2 LISTA_VAR .)
    LEFT_BRACE      reduce using rule 11 (VARS -> VAR PUNTO_2 LISTA_VAR .)


state 22

    (13) LISTA_VAR -> LISTA_ID . COLON TYPE PUNTO_3 SEMICOLON MAS_VAR

    COLON           shift and go to state 27


state 23

    (16) LISTA_ID -> ID . MAS_ID
    (17) MAS_ID -> . COMMA LISTA_ID
    (18) MAS_ID -> . epsilon
    (81) epsilon -> .

    COMMA           shift and go to state 29
    COLON           reduce using rule 81 (epsilon -> .)

    MAS_ID                         shift and go to state 28
    epsilon                        shift and go to state 30

state 24

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY . END

    END             shift and go to state 31


state 25

    (29) BODY -> LEFT_BRACE . DEC_STATEMENTS RIGHT_BRACE
    (30) DEC_STATEMENTS -> . epsilon
    (31) DEC_STATEMENTS -> . LISTA_STATEMENTS
    (81) epsilon -> .
    (32) LISTA_STATEMENTS -> . STATEMENT MAS_STATEMENTS
    (35) STATEMENT -> . ASSIGN
    (36) STATEMENT -> . CONDITION
    (37) STATEMENT -> . CYCLE
    (38) STATEMENT -> . F_CALL
    (39) STATEMENT -> . PRINT_STMT
    (40) ASSIGN -> . ID EQUAL EXPRESION SEMICOLON
    (66) CONDITION -> . IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON
    (69) CYCLE -> . DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON
    (70) F_CALL -> . ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON
    (76) PRINT_STMT -> . PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON

    RIGHT_BRACE     reduce using rule 81 (epsilon -> .)
    ID              shift and go to state 41
    IF              shift and go to state 42
    DO              shift and go to state 43
    PRINT           shift and go to state 44

    DEC_STATEMENTS                 shift and go to state 32
    epsilon                        shift and go to state 33
    LISTA_STATEMENTS               shift and go to state 34
    STATEMENT                      shift and go to state 35
    ASSIGN                         shift and go to state 36
    CONDITION                      shift and go to state 37
    CYCLE                          shift and go to state 38
    F_CALL                         shift and go to state 39
    PRINT_STMT                     shift and go to state 40

state 26

    (21) FUNCS -> VOID ID LEFT_PARENTHESIS . PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON
    (22) PARAMETROS -> . epsilon
    (23) PARAMETROS -> . DEC_PARAMETROS
    (81) epsilon -> .
    (24) DEC_PARAMETROS -> . ID COLON TYPE LISTA_PARAMETROS

    RIGHT_PARENTHESIS reduce using rule 81 (epsilon -> .)
    ID              shift and go to state 45

    PARAMETROS                     shift and go to state 46
    epsilon                        shift and go to state 47
    DEC_PARAMETROS                 shift and go to state 48

state 27

    (13) LISTA_VAR -> LISTA_ID COLON . TYPE PUNTO_3 SEMICOLON MAS_VAR
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT

    INT             shift and go to state 50
    FLOAT           shift and go to state 51

    TYPE                           shift and go to state 49

state 28

    (16) LISTA_ID -> ID MAS_ID .

    COLON           reduce using rule 16 (LISTA_ID -> ID MAS_ID .)


state 29

    (17) MAS_ID -> COMMA . LISTA_ID
    (16) LISTA_ID -> . ID MAS_ID

    ID              shift and go to state 23

    LISTA_ID                       shift and go to state 52

state 30

    (18) MAS_ID -> epsilon .

    COLON           reduce using rule 18 (MAS_ID -> epsilon .)


state 31

    (1) PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END .

    $end            reduce using rule 1 (PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END .)


state 32

    (29) BODY -> LEFT_BRACE DEC_STATEMENTS . RIGHT_BRACE

    RIGHT_BRACE     shift and go to state 53


state 33

    (30) DEC_STATEMENTS -> epsilon .

    RIGHT_BRACE     reduce using rule 30 (DEC_STATEMENTS -> epsilon .)


state 34

    (31) DEC_STATEMENTS -> LISTA_STATEMENTS .

    RIGHT_BRACE     reduce using rule 31 (DEC_STATEMENTS -> LISTA_STATEMENTS .)


state 35

    (32) LISTA_STATEMENTS -> STATEMENT . MAS_STATEMENTS
    (33) MAS_STATEMENTS -> . epsilon
    (34) MAS_STATEMENTS -> . LISTA_STATEMENTS
    (81) epsilon -> .
    (32) LISTA_STATEMENTS -> . STATEMENT MAS_STATEMENTS
    (35) STATEMENT -> . ASSIGN
    (36) STATEMENT -> . CONDITION
    (37) STATEMENT -> . CYCLE
    (38) STATEMENT -> . F_CALL
    (39) STATEMENT -> . PRINT_STMT
    (40) ASSIGN -> . ID EQUAL EXPRESION SEMICOLON
    (66) CONDITION -> . IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON
    (69) CYCLE -> . DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON
    (70) F_CALL -> . ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON
    (76) PRINT_STMT -> . PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON

    RIGHT_BRACE     reduce using rule 81 (epsilon -> .)
    ID              shift and go to state 41
    IF              shift and go to state 42
    DO              shift and go to state 43
    PRINT           shift and go to state 44

    STATEMENT                      shift and go to state 35
    MAS_STATEMENTS                 shift and go to state 54
    epsilon                        shift and go to state 55
    LISTA_STATEMENTS               shift and go to state 56
    ASSIGN                         shift and go to state 36
    CONDITION                      shift and go to state 37
    CYCLE                          shift and go to state 38
    F_CALL                         shift and go to state 39
    PRINT_STMT                     shift and go to state 40

state 36

    (35) STATEMENT -> ASSIGN .

    ID              reduce using rule 35 (STATEMENT -> ASSIGN .)
    IF              reduce using rule 35 (STATEMENT -> ASSIGN .)
    DO              reduce using rule 35 (STATEMENT -> ASSIGN .)
    PRINT           reduce using rule 35 (STATEMENT -> ASSIGN .)
    RIGHT_BRACE     reduce using rule 35 (STATEMENT -> ASSIGN .)


state 37

    (36) STATEMENT -> CONDITION .

    ID              reduce using rule 36 (STATEMENT -> CONDITION .)
    IF              reduce using rule 36 (STATEMENT -> CONDITION .)
    DO              reduce using rule 36 (STATEMENT -> CONDITION .)
    PRINT           reduce using rule 36 (STATEMENT -> CONDITION .)
    RIGHT_BRACE     reduce using rule 36 (STATEMENT -> CONDITION .)


state 38

    (37) STATEMENT -> CYCLE .

    ID              reduce using rule 37 (STATEMENT -> CYCLE .)
    IF              reduce using rule 37 (STATEMENT -> CYCLE .)
    DO              reduce using rule 37 (STATEMENT -> CYCLE .)
    PRINT           reduce using rule 37 (STATEMENT -> CYCLE .)
    RIGHT_BRACE     reduce using rule 37 (STATEMENT -> CYCLE .)


state 39

    (38) STATEMENT -> F_CALL .

    ID              reduce using rule 38 (STATEMENT -> F_CALL .)
    IF              reduce using rule 38 (STATEMENT -> F_CALL .)
    DO              reduce using rule 38 (STATEMENT -> F_CALL .)
    PRINT           reduce using rule 38 (STATEMENT -> F_CALL .)
    RIGHT_BRACE     reduce using rule 38 (STATEMENT -> F_CALL .)


state 40

    (39) STATEMENT -> PRINT_STMT .

    ID              reduce using rule 39 (STATEMENT -> PRINT_STMT .)
    IF              reduce using rule 39 (STATEMENT -> PRINT_STMT .)
    DO              reduce using rule 39 (STATEMENT -> PRINT_STMT .)
    PRINT           reduce using rule 39 (STATEMENT -> PRINT_STMT .)
    RIGHT_BRACE     reduce using rule 39 (STATEMENT -> PRINT_STMT .)


state 41

    (40) ASSIGN -> ID . EQUAL EXPRESION SEMICOLON
    (70) F_CALL -> ID . LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON

    EQUAL           shift and go to state 57
    LEFT_PARENTHESIS shift and go to state 58


state 42

    (66) CONDITION -> IF . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON

    LEFT_PARENTHESIS shift and go to state 59


state 43

    (69) CYCLE -> DO . BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON
    (29) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 60

state 44

    (76) PRINT_STMT -> PRINT . LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS shift and go to state 61


state 45

    (24) DEC_PARAMETROS -> ID . COLON TYPE LISTA_PARAMETROS

    COLON           shift and go to state 62


state 46

    (21) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS . RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 63


state 47

    (22) PARAMETROS -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 22 (PARAMETROS -> epsilon .)


state 48

    (23) PARAMETROS -> DEC_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 23 (PARAMETROS -> DEC_PARAMETROS .)


state 49

    (13) LISTA_VAR -> LISTA_ID COLON TYPE . PUNTO_3 SEMICOLON MAS_VAR
    (12) PUNTO_3 -> .

    SEMICOLON       reduce using rule 12 (PUNTO_3 -> .)

    PUNTO_3                        shift and go to state 64

state 50

    (19) TYPE -> INT .

    SEMICOLON       reduce using rule 19 (TYPE -> INT .)
    COMMA           reduce using rule 19 (TYPE -> INT .)
    RIGHT_PARENTHESIS reduce using rule 19 (TYPE -> INT .)


state 51

    (20) TYPE -> FLOAT .

    SEMICOLON       reduce using rule 20 (TYPE -> FLOAT .)
    COMMA           reduce using rule 20 (TYPE -> FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 20 (TYPE -> FLOAT .)


state 52

    (17) MAS_ID -> COMMA LISTA_ID .

    COLON           reduce using rule 17 (MAS_ID -> COMMA LISTA_ID .)


state 53

    (29) BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .

    END             reduce using rule 29 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)
    WHILE           reduce using rule 29 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)
    ELSE            reduce using rule 29 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)
    SEMICOLON       reduce using rule 29 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)
    RIGHT_BRACKET   reduce using rule 29 (BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE .)


state 54

    (32) LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS .

    RIGHT_BRACE     reduce using rule 32 (LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS .)


state 55

    (33) MAS_STATEMENTS -> epsilon .

    RIGHT_BRACE     reduce using rule 33 (MAS_STATEMENTS -> epsilon .)


state 56

    (34) MAS_STATEMENTS -> LISTA_STATEMENTS .

    RIGHT_BRACE     reduce using rule 34 (MAS_STATEMENTS -> LISTA_STATEMENTS .)


state 57

    (40) ASSIGN -> ID EQUAL . EXPRESION SEMICOLON
    (41) EXPRESION -> . EXP MAS_EXPRESIONES
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    EXPRESION                      shift and go to state 65
    EXP                            shift and go to state 66
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 58

    (70) F_CALL -> ID LEFT_PARENTHESIS . EXPRESIONES RIGHT_PARENTHESIS SEMICOLON
    (71) EXPRESIONES -> . epsilon
    (72) EXPRESIONES -> . EXPRESIONES_F
    (81) epsilon -> .
    (73) EXPRESIONES_F -> . EXPRESION LISTA_EXP
    (41) EXPRESION -> . EXP MAS_EXPRESIONES
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon

    RIGHT_PARENTHESIS reduce using rule 81 (epsilon -> .)
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)
    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72

    EXPRESIONES                    shift and go to state 74
    epsilon                        shift and go to state 75
    EXPRESIONES_F                  shift and go to state 76
    EXPRESION                      shift and go to state 77
    EXP                            shift and go to state 66
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69

state 59

    (66) CONDITION -> IF LEFT_PARENTHESIS . EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON
    (41) EXPRESION -> . EXP MAS_EXPRESIONES
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    EXPRESION                      shift and go to state 78
    EXP                            shift and go to state 66
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 60

    (69) CYCLE -> DO BODY . WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON

    WHILE           shift and go to state 79


state 61

    (76) PRINT_STMT -> PRINT LEFT_PARENTHESIS . PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON
    (77) PARAMETROS_PRINT -> . CTE_STRING MAS_PRINT
    (78) PARAMETROS_PRINT -> . EXPRESION MAS_PRINT
    (41) EXPRESION -> . EXP MAS_EXPRESIONES
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    CTE_STRING      shift and go to state 81
    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    PARAMETROS_PRINT               shift and go to state 80
    EXPRESION                      shift and go to state 82
    EXP                            shift and go to state 66
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 62

    (24) DEC_PARAMETROS -> ID COLON . TYPE LISTA_PARAMETROS
    (19) TYPE -> . INT
    (20) TYPE -> . FLOAT

    INT             shift and go to state 50
    FLOAT           shift and go to state 51

    TYPE                           shift and go to state 83

state 63

    (21) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS . LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON

    LEFT_BRACKET    shift and go to state 84


state 64

    (13) LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 . SEMICOLON MAS_VAR

    SEMICOLON       shift and go to state 85


state 65

    (40) ASSIGN -> ID EQUAL EXPRESION . SEMICOLON

    SEMICOLON       shift and go to state 86


state 66

    (41) EXPRESION -> EXP . MAS_EXPRESIONES
    (42) MAS_EXPRESIONES -> . epsilon
    (43) MAS_EXPRESIONES -> . OPERADORES EXP
    (81) epsilon -> .
    (44) OPERADORES -> . GREATER_THAN
    (45) OPERADORES -> . LESS_THAN
    (46) OPERADORES -> . NOT_EQUAL

    SEMICOLON       reduce using rule 81 (epsilon -> .)
    COMMA           reduce using rule 81 (epsilon -> .)
    RIGHT_PARENTHESIS reduce using rule 81 (epsilon -> .)
    GREATER_THAN    shift and go to state 90
    LESS_THAN       shift and go to state 91
    NOT_EQUAL       shift and go to state 92

    MAS_EXPRESIONES                shift and go to state 87
    epsilon                        shift and go to state 88
    OPERADORES                     shift and go to state 89

state 67

    (47) EXP -> TERMINO . MAS_EXP
    (48) MAS_EXP -> . OPERADORES_EXP EXP
    (49) MAS_EXP -> . epsilon
    (50) OPERADORES_EXP -> . PLUS
    (51) OPERADORES_EXP -> . MINUS
    (81) epsilon -> .

    PLUS            shift and go to state 96
    MINUS           shift and go to state 97
    GREATER_THAN    reduce using rule 81 (epsilon -> .)
    LESS_THAN       reduce using rule 81 (epsilon -> .)
    NOT_EQUAL       reduce using rule 81 (epsilon -> .)
    SEMICOLON       reduce using rule 81 (epsilon -> .)
    COMMA           reduce using rule 81 (epsilon -> .)
    RIGHT_PARENTHESIS reduce using rule 81 (epsilon -> .)

    MAS_EXP                        shift and go to state 93
    OPERADORES_EXP                 shift and go to state 94
    epsilon                        shift and go to state 95

state 68

    (52) TERMINO -> FACTOR . MAS_TERMINO
    (53) MAS_TERMINO -> . epsilon
    (54) MAS_TERMINO -> . OPERADORES_TER TERMINO
    (81) epsilon -> .
    (55) OPERADORES_TER -> . MULTIPLICATION
    (56) OPERADORES_TER -> . DIVISION

    PLUS            reduce using rule 81 (epsilon -> .)
    MINUS           reduce using rule 81 (epsilon -> .)
    GREATER_THAN    reduce using rule 81 (epsilon -> .)
    LESS_THAN       reduce using rule 81 (epsilon -> .)
    NOT_EQUAL       reduce using rule 81 (epsilon -> .)
    SEMICOLON       reduce using rule 81 (epsilon -> .)
    COMMA           reduce using rule 81 (epsilon -> .)
    RIGHT_PARENTHESIS reduce using rule 81 (epsilon -> .)
    MULTIPLICATION  shift and go to state 101
    DIVISION        shift and go to state 102

    MAS_TERMINO                    shift and go to state 98
    epsilon                        shift and go to state 99
    OPERADORES_TER                 shift and go to state 100

state 69

    (57) FACTOR -> OPERADORES_FACTOR . ID_CTE
    (59) ID_CTE -> . ID
    (60) ID_CTE -> . CTE
    (64) CTE -> . CTE_INT
    (65) CTE -> . CTE_FLOAT

    ID              shift and go to state 104
    CTE_INT         shift and go to state 106
    CTE_FLOAT       shift and go to state 107

    ID_CTE                         shift and go to state 103
    CTE                            shift and go to state 105

state 70

    (58) FACTOR -> LEFT_PARENTHESIS . EXPRESION RIGHT_PARENTHESIS
    (41) EXPRESION -> . EXP MAS_EXPRESIONES
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    EXPRESION                      shift and go to state 108
    EXP                            shift and go to state 66
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 71

    (61) OPERADORES_FACTOR -> PLUS .

    ID              reduce using rule 61 (OPERADORES_FACTOR -> PLUS .)
    CTE_INT         reduce using rule 61 (OPERADORES_FACTOR -> PLUS .)
    CTE_FLOAT       reduce using rule 61 (OPERADORES_FACTOR -> PLUS .)


state 72

    (62) OPERADORES_FACTOR -> MINUS .

    ID              reduce using rule 62 (OPERADORES_FACTOR -> MINUS .)
    CTE_INT         reduce using rule 62 (OPERADORES_FACTOR -> MINUS .)
    CTE_FLOAT       reduce using rule 62 (OPERADORES_FACTOR -> MINUS .)


state 73

    (63) OPERADORES_FACTOR -> epsilon .

    ID              reduce using rule 63 (OPERADORES_FACTOR -> epsilon .)
    CTE_INT         reduce using rule 63 (OPERADORES_FACTOR -> epsilon .)
    CTE_FLOAT       reduce using rule 63 (OPERADORES_FACTOR -> epsilon .)


state 74

    (70) F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 109


state 75

    (71) EXPRESIONES -> epsilon .
    (63) OPERADORES_FACTOR -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 71 (EXPRESIONES -> epsilon .)
    ID              reduce using rule 63 (OPERADORES_FACTOR -> epsilon .)
    CTE_INT         reduce using rule 63 (OPERADORES_FACTOR -> epsilon .)
    CTE_FLOAT       reduce using rule 63 (OPERADORES_FACTOR -> epsilon .)


state 76

    (72) EXPRESIONES -> EXPRESIONES_F .

    RIGHT_PARENTHESIS reduce using rule 72 (EXPRESIONES -> EXPRESIONES_F .)


state 77

    (73) EXPRESIONES_F -> EXPRESION . LISTA_EXP
    (74) LISTA_EXP -> . epsilon
    (75) LISTA_EXP -> . COMMA EXPRESIONES_F
    (81) epsilon -> .

    COMMA           shift and go to state 112
    RIGHT_PARENTHESIS reduce using rule 81 (epsilon -> .)

    LISTA_EXP                      shift and go to state 110
    epsilon                        shift and go to state 111

state 78

    (66) CONDITION -> IF LEFT_PARENTHESIS EXPRESION . RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 113


state 79

    (69) CYCLE -> DO BODY WHILE . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON

    LEFT_PARENTHESIS shift and go to state 114


state 80

    (76) PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 115


state 81

    (77) PARAMETROS_PRINT -> CTE_STRING . MAS_PRINT
    (79) MAS_PRINT -> . epsilon
    (80) MAS_PRINT -> . COMMA PARAMETROS_PRINT
    (81) epsilon -> .

    COMMA           shift and go to state 118
    RIGHT_PARENTHESIS reduce using rule 81 (epsilon -> .)

    MAS_PRINT                      shift and go to state 116
    epsilon                        shift and go to state 117

state 82

    (78) PARAMETROS_PRINT -> EXPRESION . MAS_PRINT
    (79) MAS_PRINT -> . epsilon
    (80) MAS_PRINT -> . COMMA PARAMETROS_PRINT
    (81) epsilon -> .

    COMMA           shift and go to state 118
    RIGHT_PARENTHESIS reduce using rule 81 (epsilon -> .)

    MAS_PRINT                      shift and go to state 119
    epsilon                        shift and go to state 117

state 83

    (24) DEC_PARAMETROS -> ID COLON TYPE . LISTA_PARAMETROS
    (25) LISTA_PARAMETROS -> . epsilon
    (26) LISTA_PARAMETROS -> . COMMA DEC_PARAMETROS
    (81) epsilon -> .

    COMMA           shift and go to state 122
    RIGHT_PARENTHESIS reduce using rule 81 (epsilon -> .)

    LISTA_PARAMETROS               shift and go to state 120
    epsilon                        shift and go to state 121

state 84

    (21) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET . VARS_FUNC BODY RIGHT_BRACKET SEMICOLON
    (27) VARS_FUNC -> . epsilon
    (28) VARS_FUNC -> . VARS
    (81) epsilon -> .
    (11) VARS -> . VAR PUNTO_2 LISTA_VAR

    LEFT_BRACE      reduce using rule 81 (epsilon -> .)
    VAR             shift and go to state 9

    VARS_FUNC                      shift and go to state 123
    epsilon                        shift and go to state 124
    VARS                           shift and go to state 125

state 85

    (13) LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON . MAS_VAR
    (14) MAS_VAR -> . epsilon
    (15) MAS_VAR -> . LISTA_VAR
    (81) epsilon -> .
    (13) LISTA_VAR -> . LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR
    (16) LISTA_ID -> . ID MAS_ID

    VOID            reduce using rule 81 (epsilon -> .)
    MAIN            reduce using rule 81 (epsilon -> .)
    LEFT_BRACE      reduce using rule 81 (epsilon -> .)
    ID              shift and go to state 23

    LISTA_ID                       shift and go to state 22
    MAS_VAR                        shift and go to state 126
    epsilon                        shift and go to state 127
    LISTA_VAR                      shift and go to state 128

state 86

    (40) ASSIGN -> ID EQUAL EXPRESION SEMICOLON .

    ID              reduce using rule 40 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)
    IF              reduce using rule 40 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)
    DO              reduce using rule 40 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)
    PRINT           reduce using rule 40 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)
    RIGHT_BRACE     reduce using rule 40 (ASSIGN -> ID EQUAL EXPRESION SEMICOLON .)


state 87

    (41) EXPRESION -> EXP MAS_EXPRESIONES .

    SEMICOLON       reduce using rule 41 (EXPRESION -> EXP MAS_EXPRESIONES .)
    COMMA           reduce using rule 41 (EXPRESION -> EXP MAS_EXPRESIONES .)
    RIGHT_PARENTHESIS reduce using rule 41 (EXPRESION -> EXP MAS_EXPRESIONES .)


state 88

    (42) MAS_EXPRESIONES -> epsilon .

    SEMICOLON       reduce using rule 42 (MAS_EXPRESIONES -> epsilon .)
    COMMA           reduce using rule 42 (MAS_EXPRESIONES -> epsilon .)
    RIGHT_PARENTHESIS reduce using rule 42 (MAS_EXPRESIONES -> epsilon .)


state 89

    (43) MAS_EXPRESIONES -> OPERADORES . EXP
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    EXP                            shift and go to state 129
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 90

    (44) OPERADORES -> GREATER_THAN .

    LEFT_PARENTHESIS reduce using rule 44 (OPERADORES -> GREATER_THAN .)
    PLUS            reduce using rule 44 (OPERADORES -> GREATER_THAN .)
    MINUS           reduce using rule 44 (OPERADORES -> GREATER_THAN .)
    ID              reduce using rule 44 (OPERADORES -> GREATER_THAN .)
    CTE_INT         reduce using rule 44 (OPERADORES -> GREATER_THAN .)
    CTE_FLOAT       reduce using rule 44 (OPERADORES -> GREATER_THAN .)


state 91

    (45) OPERADORES -> LESS_THAN .

    LEFT_PARENTHESIS reduce using rule 45 (OPERADORES -> LESS_THAN .)
    PLUS            reduce using rule 45 (OPERADORES -> LESS_THAN .)
    MINUS           reduce using rule 45 (OPERADORES -> LESS_THAN .)
    ID              reduce using rule 45 (OPERADORES -> LESS_THAN .)
    CTE_INT         reduce using rule 45 (OPERADORES -> LESS_THAN .)
    CTE_FLOAT       reduce using rule 45 (OPERADORES -> LESS_THAN .)


state 92

    (46) OPERADORES -> NOT_EQUAL .

    LEFT_PARENTHESIS reduce using rule 46 (OPERADORES -> NOT_EQUAL .)
    PLUS            reduce using rule 46 (OPERADORES -> NOT_EQUAL .)
    MINUS           reduce using rule 46 (OPERADORES -> NOT_EQUAL .)
    ID              reduce using rule 46 (OPERADORES -> NOT_EQUAL .)
    CTE_INT         reduce using rule 46 (OPERADORES -> NOT_EQUAL .)
    CTE_FLOAT       reduce using rule 46 (OPERADORES -> NOT_EQUAL .)


state 93

    (47) EXP -> TERMINO MAS_EXP .

    GREATER_THAN    reduce using rule 47 (EXP -> TERMINO MAS_EXP .)
    LESS_THAN       reduce using rule 47 (EXP -> TERMINO MAS_EXP .)
    NOT_EQUAL       reduce using rule 47 (EXP -> TERMINO MAS_EXP .)
    SEMICOLON       reduce using rule 47 (EXP -> TERMINO MAS_EXP .)
    COMMA           reduce using rule 47 (EXP -> TERMINO MAS_EXP .)
    RIGHT_PARENTHESIS reduce using rule 47 (EXP -> TERMINO MAS_EXP .)


state 94

    (48) MAS_EXP -> OPERADORES_EXP . EXP
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    EXP                            shift and go to state 130
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 95

    (49) MAS_EXP -> epsilon .

    GREATER_THAN    reduce using rule 49 (MAS_EXP -> epsilon .)
    LESS_THAN       reduce using rule 49 (MAS_EXP -> epsilon .)
    NOT_EQUAL       reduce using rule 49 (MAS_EXP -> epsilon .)
    SEMICOLON       reduce using rule 49 (MAS_EXP -> epsilon .)
    COMMA           reduce using rule 49 (MAS_EXP -> epsilon .)
    RIGHT_PARENTHESIS reduce using rule 49 (MAS_EXP -> epsilon .)


state 96

    (50) OPERADORES_EXP -> PLUS .

    LEFT_PARENTHESIS reduce using rule 50 (OPERADORES_EXP -> PLUS .)
    PLUS            reduce using rule 50 (OPERADORES_EXP -> PLUS .)
    MINUS           reduce using rule 50 (OPERADORES_EXP -> PLUS .)
    ID              reduce using rule 50 (OPERADORES_EXP -> PLUS .)
    CTE_INT         reduce using rule 50 (OPERADORES_EXP -> PLUS .)
    CTE_FLOAT       reduce using rule 50 (OPERADORES_EXP -> PLUS .)


state 97

    (51) OPERADORES_EXP -> MINUS .

    LEFT_PARENTHESIS reduce using rule 51 (OPERADORES_EXP -> MINUS .)
    PLUS            reduce using rule 51 (OPERADORES_EXP -> MINUS .)
    MINUS           reduce using rule 51 (OPERADORES_EXP -> MINUS .)
    ID              reduce using rule 51 (OPERADORES_EXP -> MINUS .)
    CTE_INT         reduce using rule 51 (OPERADORES_EXP -> MINUS .)
    CTE_FLOAT       reduce using rule 51 (OPERADORES_EXP -> MINUS .)


state 98

    (52) TERMINO -> FACTOR MAS_TERMINO .

    PLUS            reduce using rule 52 (TERMINO -> FACTOR MAS_TERMINO .)
    MINUS           reduce using rule 52 (TERMINO -> FACTOR MAS_TERMINO .)
    GREATER_THAN    reduce using rule 52 (TERMINO -> FACTOR MAS_TERMINO .)
    LESS_THAN       reduce using rule 52 (TERMINO -> FACTOR MAS_TERMINO .)
    NOT_EQUAL       reduce using rule 52 (TERMINO -> FACTOR MAS_TERMINO .)
    SEMICOLON       reduce using rule 52 (TERMINO -> FACTOR MAS_TERMINO .)
    COMMA           reduce using rule 52 (TERMINO -> FACTOR MAS_TERMINO .)
    RIGHT_PARENTHESIS reduce using rule 52 (TERMINO -> FACTOR MAS_TERMINO .)


state 99

    (53) MAS_TERMINO -> epsilon .

    PLUS            reduce using rule 53 (MAS_TERMINO -> epsilon .)
    MINUS           reduce using rule 53 (MAS_TERMINO -> epsilon .)
    GREATER_THAN    reduce using rule 53 (MAS_TERMINO -> epsilon .)
    LESS_THAN       reduce using rule 53 (MAS_TERMINO -> epsilon .)
    NOT_EQUAL       reduce using rule 53 (MAS_TERMINO -> epsilon .)
    SEMICOLON       reduce using rule 53 (MAS_TERMINO -> epsilon .)
    COMMA           reduce using rule 53 (MAS_TERMINO -> epsilon .)
    RIGHT_PARENTHESIS reduce using rule 53 (MAS_TERMINO -> epsilon .)


state 100

    (54) MAS_TERMINO -> OPERADORES_TER . TERMINO
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    TERMINO                        shift and go to state 131
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 101

    (55) OPERADORES_TER -> MULTIPLICATION .

    LEFT_PARENTHESIS reduce using rule 55 (OPERADORES_TER -> MULTIPLICATION .)
    PLUS            reduce using rule 55 (OPERADORES_TER -> MULTIPLICATION .)
    MINUS           reduce using rule 55 (OPERADORES_TER -> MULTIPLICATION .)
    ID              reduce using rule 55 (OPERADORES_TER -> MULTIPLICATION .)
    CTE_INT         reduce using rule 55 (OPERADORES_TER -> MULTIPLICATION .)
    CTE_FLOAT       reduce using rule 55 (OPERADORES_TER -> MULTIPLICATION .)


state 102

    (56) OPERADORES_TER -> DIVISION .

    LEFT_PARENTHESIS reduce using rule 56 (OPERADORES_TER -> DIVISION .)
    PLUS            reduce using rule 56 (OPERADORES_TER -> DIVISION .)
    MINUS           reduce using rule 56 (OPERADORES_TER -> DIVISION .)
    ID              reduce using rule 56 (OPERADORES_TER -> DIVISION .)
    CTE_INT         reduce using rule 56 (OPERADORES_TER -> DIVISION .)
    CTE_FLOAT       reduce using rule 56 (OPERADORES_TER -> DIVISION .)


state 103

    (57) FACTOR -> OPERADORES_FACTOR ID_CTE .

    MULTIPLICATION  reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    DIVISION        reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    PLUS            reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    MINUS           reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    GREATER_THAN    reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    LESS_THAN       reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    NOT_EQUAL       reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    SEMICOLON       reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    COMMA           reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)
    RIGHT_PARENTHESIS reduce using rule 57 (FACTOR -> OPERADORES_FACTOR ID_CTE .)


state 104

    (59) ID_CTE -> ID .

    MULTIPLICATION  reduce using rule 59 (ID_CTE -> ID .)
    DIVISION        reduce using rule 59 (ID_CTE -> ID .)
    PLUS            reduce using rule 59 (ID_CTE -> ID .)
    MINUS           reduce using rule 59 (ID_CTE -> ID .)
    GREATER_THAN    reduce using rule 59 (ID_CTE -> ID .)
    LESS_THAN       reduce using rule 59 (ID_CTE -> ID .)
    NOT_EQUAL       reduce using rule 59 (ID_CTE -> ID .)
    SEMICOLON       reduce using rule 59 (ID_CTE -> ID .)
    COMMA           reduce using rule 59 (ID_CTE -> ID .)
    RIGHT_PARENTHESIS reduce using rule 59 (ID_CTE -> ID .)


state 105

    (60) ID_CTE -> CTE .

    MULTIPLICATION  reduce using rule 60 (ID_CTE -> CTE .)
    DIVISION        reduce using rule 60 (ID_CTE -> CTE .)
    PLUS            reduce using rule 60 (ID_CTE -> CTE .)
    MINUS           reduce using rule 60 (ID_CTE -> CTE .)
    GREATER_THAN    reduce using rule 60 (ID_CTE -> CTE .)
    LESS_THAN       reduce using rule 60 (ID_CTE -> CTE .)
    NOT_EQUAL       reduce using rule 60 (ID_CTE -> CTE .)
    SEMICOLON       reduce using rule 60 (ID_CTE -> CTE .)
    COMMA           reduce using rule 60 (ID_CTE -> CTE .)
    RIGHT_PARENTHESIS reduce using rule 60 (ID_CTE -> CTE .)


state 106

    (64) CTE -> CTE_INT .

    MULTIPLICATION  reduce using rule 64 (CTE -> CTE_INT .)
    DIVISION        reduce using rule 64 (CTE -> CTE_INT .)
    PLUS            reduce using rule 64 (CTE -> CTE_INT .)
    MINUS           reduce using rule 64 (CTE -> CTE_INT .)
    GREATER_THAN    reduce using rule 64 (CTE -> CTE_INT .)
    LESS_THAN       reduce using rule 64 (CTE -> CTE_INT .)
    NOT_EQUAL       reduce using rule 64 (CTE -> CTE_INT .)
    SEMICOLON       reduce using rule 64 (CTE -> CTE_INT .)
    COMMA           reduce using rule 64 (CTE -> CTE_INT .)
    RIGHT_PARENTHESIS reduce using rule 64 (CTE -> CTE_INT .)


state 107

    (65) CTE -> CTE_FLOAT .

    MULTIPLICATION  reduce using rule 65 (CTE -> CTE_FLOAT .)
    DIVISION        reduce using rule 65 (CTE -> CTE_FLOAT .)
    PLUS            reduce using rule 65 (CTE -> CTE_FLOAT .)
    MINUS           reduce using rule 65 (CTE -> CTE_FLOAT .)
    GREATER_THAN    reduce using rule 65 (CTE -> CTE_FLOAT .)
    LESS_THAN       reduce using rule 65 (CTE -> CTE_FLOAT .)
    NOT_EQUAL       reduce using rule 65 (CTE -> CTE_FLOAT .)
    SEMICOLON       reduce using rule 65 (CTE -> CTE_FLOAT .)
    COMMA           reduce using rule 65 (CTE -> CTE_FLOAT .)
    RIGHT_PARENTHESIS reduce using rule 65 (CTE -> CTE_FLOAT .)


state 108

    (58) FACTOR -> LEFT_PARENTHESIS EXPRESION . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS shift and go to state 132


state 109

    (70) F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 133


state 110

    (73) EXPRESIONES_F -> EXPRESION LISTA_EXP .

    RIGHT_PARENTHESIS reduce using rule 73 (EXPRESIONES_F -> EXPRESION LISTA_EXP .)


state 111

    (74) LISTA_EXP -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 74 (LISTA_EXP -> epsilon .)


state 112

    (75) LISTA_EXP -> COMMA . EXPRESIONES_F
    (73) EXPRESIONES_F -> . EXPRESION LISTA_EXP
    (41) EXPRESION -> . EXP MAS_EXPRESIONES
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    EXPRESIONES_F                  shift and go to state 134
    EXPRESION                      shift and go to state 77
    EXP                            shift and go to state 66
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 113

    (66) CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS . BODY ELSE_CONDITION SEMICOLON
    (29) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 135

state 114

    (69) CYCLE -> DO BODY WHILE LEFT_PARENTHESIS . EXPRESION RIGHT_PARENTHESIS SEMICOLON
    (41) EXPRESION -> . EXP MAS_EXPRESIONES
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    EXPRESION                      shift and go to state 136
    EXP                            shift and go to state 66
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 115

    (76) PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 137


state 116

    (77) PARAMETROS_PRINT -> CTE_STRING MAS_PRINT .

    RIGHT_PARENTHESIS reduce using rule 77 (PARAMETROS_PRINT -> CTE_STRING MAS_PRINT .)


state 117

    (79) MAS_PRINT -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 79 (MAS_PRINT -> epsilon .)


state 118

    (80) MAS_PRINT -> COMMA . PARAMETROS_PRINT
    (77) PARAMETROS_PRINT -> . CTE_STRING MAS_PRINT
    (78) PARAMETROS_PRINT -> . EXPRESION MAS_PRINT
    (41) EXPRESION -> . EXP MAS_EXPRESIONES
    (47) EXP -> . TERMINO MAS_EXP
    (52) TERMINO -> . FACTOR MAS_TERMINO
    (57) FACTOR -> . OPERADORES_FACTOR ID_CTE
    (58) FACTOR -> . LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS
    (61) OPERADORES_FACTOR -> . PLUS
    (62) OPERADORES_FACTOR -> . MINUS
    (63) OPERADORES_FACTOR -> . epsilon
    (81) epsilon -> .

    CTE_STRING      shift and go to state 81
    LEFT_PARENTHESIS shift and go to state 70
    PLUS            shift and go to state 71
    MINUS           shift and go to state 72
    ID              reduce using rule 81 (epsilon -> .)
    CTE_INT         reduce using rule 81 (epsilon -> .)
    CTE_FLOAT       reduce using rule 81 (epsilon -> .)

    PARAMETROS_PRINT               shift and go to state 138
    EXPRESION                      shift and go to state 82
    EXP                            shift and go to state 66
    TERMINO                        shift and go to state 67
    FACTOR                         shift and go to state 68
    OPERADORES_FACTOR              shift and go to state 69
    epsilon                        shift and go to state 73

state 119

    (78) PARAMETROS_PRINT -> EXPRESION MAS_PRINT .

    RIGHT_PARENTHESIS reduce using rule 78 (PARAMETROS_PRINT -> EXPRESION MAS_PRINT .)


state 120

    (24) DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 24 (DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS .)


state 121

    (25) LISTA_PARAMETROS -> epsilon .

    RIGHT_PARENTHESIS reduce using rule 25 (LISTA_PARAMETROS -> epsilon .)


state 122

    (26) LISTA_PARAMETROS -> COMMA . DEC_PARAMETROS
    (24) DEC_PARAMETROS -> . ID COLON TYPE LISTA_PARAMETROS

    ID              shift and go to state 45

    DEC_PARAMETROS                 shift and go to state 139

state 123

    (21) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC . BODY RIGHT_BRACKET SEMICOLON
    (29) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 140

state 124

    (27) VARS_FUNC -> epsilon .

    LEFT_BRACE      reduce using rule 27 (VARS_FUNC -> epsilon .)


state 125

    (28) VARS_FUNC -> VARS .

    LEFT_BRACE      reduce using rule 28 (VARS_FUNC -> VARS .)


state 126

    (13) LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR .

    VOID            reduce using rule 13 (LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR .)
    MAIN            reduce using rule 13 (LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR .)
    LEFT_BRACE      reduce using rule 13 (LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR .)


state 127

    (14) MAS_VAR -> epsilon .

    VOID            reduce using rule 14 (MAS_VAR -> epsilon .)
    MAIN            reduce using rule 14 (MAS_VAR -> epsilon .)
    LEFT_BRACE      reduce using rule 14 (MAS_VAR -> epsilon .)


state 128

    (15) MAS_VAR -> LISTA_VAR .

    VOID            reduce using rule 15 (MAS_VAR -> LISTA_VAR .)
    MAIN            reduce using rule 15 (MAS_VAR -> LISTA_VAR .)
    LEFT_BRACE      reduce using rule 15 (MAS_VAR -> LISTA_VAR .)


state 129

    (43) MAS_EXPRESIONES -> OPERADORES EXP .

    SEMICOLON       reduce using rule 43 (MAS_EXPRESIONES -> OPERADORES EXP .)
    COMMA           reduce using rule 43 (MAS_EXPRESIONES -> OPERADORES EXP .)
    RIGHT_PARENTHESIS reduce using rule 43 (MAS_EXPRESIONES -> OPERADORES EXP .)


state 130

    (48) MAS_EXP -> OPERADORES_EXP EXP .

    GREATER_THAN    reduce using rule 48 (MAS_EXP -> OPERADORES_EXP EXP .)
    LESS_THAN       reduce using rule 48 (MAS_EXP -> OPERADORES_EXP EXP .)
    NOT_EQUAL       reduce using rule 48 (MAS_EXP -> OPERADORES_EXP EXP .)
    SEMICOLON       reduce using rule 48 (MAS_EXP -> OPERADORES_EXP EXP .)
    COMMA           reduce using rule 48 (MAS_EXP -> OPERADORES_EXP EXP .)
    RIGHT_PARENTHESIS reduce using rule 48 (MAS_EXP -> OPERADORES_EXP EXP .)


state 131

    (54) MAS_TERMINO -> OPERADORES_TER TERMINO .

    PLUS            reduce using rule 54 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    MINUS           reduce using rule 54 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    GREATER_THAN    reduce using rule 54 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    LESS_THAN       reduce using rule 54 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    NOT_EQUAL       reduce using rule 54 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    SEMICOLON       reduce using rule 54 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    COMMA           reduce using rule 54 (MAS_TERMINO -> OPERADORES_TER TERMINO .)
    RIGHT_PARENTHESIS reduce using rule 54 (MAS_TERMINO -> OPERADORES_TER TERMINO .)


state 132

    (58) FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .

    MULTIPLICATION  reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    DIVISION        reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    PLUS            reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    MINUS           reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    GREATER_THAN    reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    LESS_THAN       reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    NOT_EQUAL       reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    SEMICOLON       reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    COMMA           reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)
    RIGHT_PARENTHESIS reduce using rule 58 (FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS .)


state 133

    (70) F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .

    ID              reduce using rule 70 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 70 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)
    DO              reduce using rule 70 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 70 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_BRACE     reduce using rule 70 (F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON .)


state 134

    (75) LISTA_EXP -> COMMA EXPRESIONES_F .

    RIGHT_PARENTHESIS reduce using rule 75 (LISTA_EXP -> COMMA EXPRESIONES_F .)


state 135

    (66) CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY . ELSE_CONDITION SEMICOLON
    (67) ELSE_CONDITION -> . epsilon
    (68) ELSE_CONDITION -> . ELSE BODY
    (81) epsilon -> .

    ELSE            shift and go to state 143
    SEMICOLON       reduce using rule 81 (epsilon -> .)

    ELSE_CONDITION                 shift and go to state 141
    epsilon                        shift and go to state 142

state 136

    (69) CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION . RIGHT_PARENTHESIS SEMICOLON

    RIGHT_PARENTHESIS shift and go to state 144


state 137

    (76) PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .

    ID              reduce using rule 76 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 76 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)
    DO              reduce using rule 76 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 76 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_BRACE     reduce using rule 76 (PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON .)


state 138

    (80) MAS_PRINT -> COMMA PARAMETROS_PRINT .

    RIGHT_PARENTHESIS reduce using rule 80 (MAS_PRINT -> COMMA PARAMETROS_PRINT .)


state 139

    (26) LISTA_PARAMETROS -> COMMA DEC_PARAMETROS .

    RIGHT_PARENTHESIS reduce using rule 26 (LISTA_PARAMETROS -> COMMA DEC_PARAMETROS .)


state 140

    (21) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY . RIGHT_BRACKET SEMICOLON

    RIGHT_BRACKET   shift and go to state 145


state 141

    (66) CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION . SEMICOLON

    SEMICOLON       shift and go to state 146


state 142

    (67) ELSE_CONDITION -> epsilon .

    SEMICOLON       reduce using rule 67 (ELSE_CONDITION -> epsilon .)


state 143

    (68) ELSE_CONDITION -> ELSE . BODY
    (29) BODY -> . LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE

    LEFT_BRACE      shift and go to state 25

    BODY                           shift and go to state 147

state 144

    (69) CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS . SEMICOLON

    SEMICOLON       shift and go to state 148


state 145

    (21) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET . SEMICOLON

    SEMICOLON       shift and go to state 149


state 146

    (66) CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .

    ID              reduce using rule 66 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)
    IF              reduce using rule 66 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)
    DO              reduce using rule 66 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)
    PRINT           reduce using rule 66 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)
    RIGHT_BRACE     reduce using rule 66 (CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON .)


state 147

    (68) ELSE_CONDITION -> ELSE BODY .

    SEMICOLON       reduce using rule 68 (ELSE_CONDITION -> ELSE BODY .)


state 148

    (69) CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .

    ID              reduce using rule 69 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)
    IF              reduce using rule 69 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)
    DO              reduce using rule 69 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)
    PRINT           reduce using rule 69 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)
    RIGHT_BRACE     reduce using rule 69 (CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON .)


state 149

    (21) FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON .

    VOID            reduce using rule 21 (FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON .)
    MAIN            reduce using rule 21 (FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON .)

