
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA CTE_FLOAT CTE_INT CTE_STRING DIVISION DO ELSE END EQUAL FLOAT GREATER_THAN ID IF INT LEFT_BRACE LEFT_BRACKET LEFT_PARENTHESIS LESS_THAN MAIN MINUS MULTIPLICATION NOT_EQUAL PLUS PRINT PROGRAM RIGHT_BRACE RIGHT_BRACKET RIGHT_PARENTHESIS SEMICOLON VAR VOID WHILEPROGRAMA : PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY ENDPUNTO_1 :DEC_VARS : epsilon\n                | VARSSOLO_FUNCS : FUNCS MAS_FUNCSMAS_FUNCS : epsilon\n                 | SOLO_FUNCSDEC_FUNCS : epsilon\n                 | SOLO_FUNCSPUNTO_2 :VARS : VAR PUNTO_2 LISTA_VARPUNTO_3 :LISTA_VAR : LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VARMAS_VAR : epsilon\n               | LISTA_VARLISTA_ID : ID MAS_IDMAS_ID : COMMA LISTA_ID\n              | epsilonTYPE : INT\n            | FLOATFUNCS : VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLONPARAMETROS : epsilon\n                  | DEC_PARAMETROSDEC_PARAMETROS : ID COLON TYPE LISTA_PARAMETROSLISTA_PARAMETROS : epsilon\n                        | COMMA DEC_PARAMETROSVARS_FUNC : epsilon\n                 | VARSBODY : LEFT_BRACE DEC_STATEMENTS RIGHT_BRACEDEC_STATEMENTS : epsilon\n                      | LISTA_STATEMENTSLISTA_STATEMENTS : STATEMENT MAS_STATEMENTSMAS_STATEMENTS : epsilon\n                      | LISTA_STATEMENTSSTATEMENT : ASSIGN\n                 | CONDITION\n                 | CYCLE\n                 | F_CALL\n                 | PRINT_STMT\n    ASSIGN : ID EQUAL EXPRESION SEMICOLONEXPRESION : EXP MAS_EXPRESIONESMAS_EXPRESIONES : epsilon\n                       | OPERADORES EXPOPERADORES : GREATER_THAN\n                  | LESS_THAN\n                  | NOT_EQUALEXP : TERMINO MAS_EXPMAS_EXP : OPERADORES_EXP EXP\n               | epsilonOPERADORES_EXP : PLUS\n                      | MINUSTERMINO : FACTOR MAS_TERMINOMAS_TERMINO : epsilon\n                   | OPERADORES_TER TERMINOOPERADORES_TER : MULTIPLICATION\n                      | DIVISIONFACTOR : OPERADORES_FACTOR ID_CTE\n              | LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESISID_CTE : ID\n              | CTEOPERADORES_FACTOR : PLUS\n                         | MINUS\n                         | epsilonCTE : CTE_INT\n           | CTE_FLOATCONDITION : IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLONELSE_CONDITION : epsilon\n                      | ELSE BODYCYCLE : DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLONF_CALL : ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLONEXPRESIONES : epsilon\n                   | EXPRESIONES_FEXPRESIONES_F : EXPRESION LISTA_EXPLISTA_EXP : epsilon\n                 | COMMA EXPRESIONES_FPRINT_STMT : PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLONPARAMETROS_PRINT : CTE_STRING MAS_PRINT\n                        | EXPRESION MAS_PRINTMAS_PRINT : epsilon\n                 | COMMA PARAMETROS_PRINTepsilon :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,],[0,-1,]),'ID':([2,9,14,15,25,26,29,35,36,37,38,39,40,57,58,59,61,69,70,71,72,73,75,85,86,89,90,91,92,94,96,97,100,101,102,112,114,118,122,133,137,146,148,],[3,-10,20,23,41,45,23,41,-35,-36,-37,-38,-39,-81,-81,-81,-81,104,-81,-61,-62,-63,-63,23,-40,-81,-44,-45,-46,-81,-50,-51,-81,-55,-56,-81,-81,-81,45,-70,-76,-66,-69,]),'SEMICOLON':([3,4,49,50,51,53,64,65,66,67,68,87,88,93,95,98,99,103,104,105,106,107,109,115,129,130,131,132,135,141,142,144,145,147,],[-2,5,-12,-19,-20,-29,85,86,-81,-81,-81,-41,-42,-47,-49,-52,-53,-57,-59,-60,-64,-65,133,137,-43,-48,-54,-58,-81,146,-67,148,149,-68,]),'VOID':([5,6,7,8,13,21,85,126,127,128,149,],[-81,14,-3,-4,14,-11,-81,-13,-14,-15,-21,]),'MAIN':([5,6,7,8,10,11,12,13,17,18,19,21,85,126,127,128,149,],[-81,-81,-3,-4,16,-8,-9,-81,-5,-6,-7,-11,-81,-13,-14,-15,-21,]),'VAR':([5,84,],[9,9,]),'LEFT_BRACE':([16,21,43,84,85,113,123,124,125,126,127,128,143,],[25,-11,25,-81,-81,25,25,-27,-28,-13,-14,-15,25,]),'LEFT_PARENTHESIS':([20,41,42,44,57,58,59,61,70,79,89,90,91,92,94,96,97,100,101,102,112,114,118,],[26,58,59,61,70,70,70,70,70,114,70,-44,-45,-46,70,-50,-51,70,-55,-56,70,70,70,]),'COLON':([22,23,28,30,45,52,],[27,-81,-16,-18,62,-17,]),'COMMA':([23,50,51,66,67,68,77,81,82,83,87,88,93,95,98,99,103,104,105,106,107,129,130,131,132,],[29,-19,-20,-81,-81,-81,112,118,118,122,-41,-42,-47,-49,-52,-53,-57,-59,-60,-64,-65,-43,-48,-54,-58,]),'END':([24,53,],[31,-29,]),'RIGHT_BRACE':([25,32,33,34,35,36,37,38,39,40,54,55,56,86,133,137,146,148,],[-81,53,-30,-31,-81,-35,-36,-37,-38,-39,-32,-33,-34,-40,-70,-76,-66,-69,]),'IF':([25,35,36,37,38,39,40,86,133,137,146,148,],[42,42,-35,-36,-37,-38,-39,-40,-70,-76,-66,-69,]),'DO':([25,35,36,37,38,39,40,86,133,137,146,148,],[43,43,-35,-36,-37,-38,-39,-40,-70,-76,-66,-69,]),'PRINT':([25,35,36,37,38,39,40,86,133,137,146,148,],[44,44,-35,-36,-37,-38,-39,-40,-70,-76,-66,-69,]),'RIGHT_PARENTHESIS':([26,46,47,48,50,51,58,66,67,68,74,75,76,77,78,80,81,82,83,87,88,93,95,98,99,103,104,105,106,107,108,110,111,116,117,119,120,121,129,130,131,132,134,136,138,139,],[-81,63,-22,-23,-19,-20,-81,-81,-81,-81,109,-71,-72,-81,113,115,-81,-81,-81,-41,-42,-47,-49,-52,-53,-57,-59,-60,-64,-65,132,-73,-74,-77,-79,-78,-24,-25,-43,-48,-54,-58,-75,144,-80,-26,]),'INT':([27,62,],[50,50,]),'FLOAT':([27,62,],[51,51,]),'EQUAL':([41,],[57,]),'WHILE':([53,60,],[-29,79,]),'ELSE':([53,135,],[-29,143,]),'RIGHT_BRACKET':([53,140,],[-29,145,]),'PLUS':([57,58,59,61,67,68,70,89,90,91,92,94,96,97,98,99,100,101,102,103,104,105,106,107,112,114,118,131,132,],[71,71,71,71,96,-81,71,71,-44,-45,-46,71,-50,-51,-52,-53,71,-55,-56,-57,-59,-60,-64,-65,71,71,71,-54,-58,]),'MINUS':([57,58,59,61,67,68,70,89,90,91,92,94,96,97,98,99,100,101,102,103,104,105,106,107,112,114,118,131,132,],[72,72,72,72,97,-81,72,72,-44,-45,-46,72,-50,-51,-52,-53,72,-55,-56,-57,-59,-60,-64,-65,72,72,72,-54,-58,]),'CTE_INT':([57,58,59,61,69,70,71,72,73,75,89,90,91,92,94,96,97,100,101,102,112,114,118,],[-81,-81,-81,-81,106,-81,-61,-62,-63,-63,-81,-44,-45,-46,-81,-50,-51,-81,-55,-56,-81,-81,-81,]),'CTE_FLOAT':([57,58,59,61,69,70,71,72,73,75,89,90,91,92,94,96,97,100,101,102,112,114,118,],[-81,-81,-81,-81,107,-81,-61,-62,-63,-63,-81,-44,-45,-46,-81,-50,-51,-81,-55,-56,-81,-81,-81,]),'CTE_STRING':([61,118,],[81,81,]),'LEFT_BRACKET':([63,],[84,]),'GREATER_THAN':([66,67,68,93,95,98,99,103,104,105,106,107,130,131,132,],[90,-81,-81,-47,-49,-52,-53,-57,-59,-60,-64,-65,-48,-54,-58,]),'LESS_THAN':([66,67,68,93,95,98,99,103,104,105,106,107,130,131,132,],[91,-81,-81,-47,-49,-52,-53,-57,-59,-60,-64,-65,-48,-54,-58,]),'NOT_EQUAL':([66,67,68,93,95,98,99,103,104,105,106,107,130,131,132,],[92,-81,-81,-47,-49,-52,-53,-57,-59,-60,-64,-65,-48,-54,-58,]),'MULTIPLICATION':([68,103,104,105,106,107,132,],[101,-57,-59,-60,-64,-65,-58,]),'DIVISION':([68,103,104,105,106,107,132,],[102,-57,-59,-60,-64,-65,-58,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'PUNTO_1':([3,],[4,]),'DEC_VARS':([5,],[6,]),'epsilon':([5,6,13,23,25,26,35,57,58,59,61,66,67,68,70,77,81,82,83,84,85,89,94,100,112,114,118,135,],[7,11,18,30,33,47,55,73,75,73,73,88,95,99,73,111,117,117,121,124,127,73,73,73,73,73,73,142,]),'VARS':([5,84,],[8,125,]),'DEC_FUNCS':([6,],[10,]),'SOLO_FUNCS':([6,13,],[12,19,]),'FUNCS':([6,13,],[13,13,]),'PUNTO_2':([9,],[15,]),'MAS_FUNCS':([13,],[17,]),'LISTA_VAR':([15,85,],[21,128,]),'LISTA_ID':([15,29,85,],[22,52,22,]),'BODY':([16,43,113,123,143,],[24,60,135,140,147,]),'MAS_ID':([23,],[28,]),'DEC_STATEMENTS':([25,],[32,]),'LISTA_STATEMENTS':([25,35,],[34,56,]),'STATEMENT':([25,35,],[35,35,]),'ASSIGN':([25,35,],[36,36,]),'CONDITION':([25,35,],[37,37,]),'CYCLE':([25,35,],[38,38,]),'F_CALL':([25,35,],[39,39,]),'PRINT_STMT':([25,35,],[40,40,]),'PARAMETROS':([26,],[46,]),'DEC_PARAMETROS':([26,122,],[48,139,]),'TYPE':([27,62,],[49,83,]),'MAS_STATEMENTS':([35,],[54,]),'PUNTO_3':([49,],[64,]),'EXPRESION':([57,58,59,61,70,112,114,118,],[65,77,78,82,108,77,136,82,]),'EXP':([57,58,59,61,70,89,94,112,114,118,],[66,66,66,66,66,129,130,66,66,66,]),'TERMINO':([57,58,59,61,70,89,94,100,112,114,118,],[67,67,67,67,67,67,67,131,67,67,67,]),'FACTOR':([57,58,59,61,70,89,94,100,112,114,118,],[68,68,68,68,68,68,68,68,68,68,68,]),'OPERADORES_FACTOR':([57,58,59,61,70,89,94,100,112,114,118,],[69,69,69,69,69,69,69,69,69,69,69,]),'EXPRESIONES':([58,],[74,]),'EXPRESIONES_F':([58,112,],[76,134,]),'PARAMETROS_PRINT':([61,118,],[80,138,]),'MAS_EXPRESIONES':([66,],[87,]),'OPERADORES':([66,],[89,]),'MAS_EXP':([67,],[93,]),'OPERADORES_EXP':([67,],[94,]),'MAS_TERMINO':([68,],[98,]),'OPERADORES_TER':([68,],[100,]),'ID_CTE':([69,],[103,]),'CTE':([69,],[105,]),'LISTA_EXP':([77,],[110,]),'MAS_PRINT':([81,82,],[116,119,]),'LISTA_PARAMETROS':([83,],[120,]),'VARS_FUNC':([84,],[123,]),'MAS_VAR':([85,],[126,]),'ELSE_CONDITION':([135,],[141,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END','PROGRAMA',9,'p_program','parser.py',33),
  ('PUNTO_1 -> <empty>','PUNTO_1',0,'p_punto_1','parser.py',39),
  ('DEC_VARS -> epsilon','DEC_VARS',1,'p_dec_vars','parser.py',50),
  ('DEC_VARS -> VARS','DEC_VARS',1,'p_dec_vars','parser.py',51),
  ('SOLO_FUNCS -> FUNCS MAS_FUNCS','SOLO_FUNCS',2,'p_solo_funcs','parser.py',59),
  ('MAS_FUNCS -> epsilon','MAS_FUNCS',1,'p_mas_funcs','parser.py',64),
  ('MAS_FUNCS -> SOLO_FUNCS','MAS_FUNCS',1,'p_mas_funcs','parser.py',65),
  ('DEC_FUNCS -> epsilon','DEC_FUNCS',1,'p_dec_funcs','parser.py',73),
  ('DEC_FUNCS -> SOLO_FUNCS','DEC_FUNCS',1,'p_dec_funcs','parser.py',74),
  ('PUNTO_2 -> <empty>','PUNTO_2',0,'p_punto_2','parser.py',83),
  ('VARS -> VAR PUNTO_2 LISTA_VAR','VARS',3,'p_vars','parser.py',91),
  ('PUNTO_3 -> <empty>','PUNTO_3',0,'p_punto_3','parser.py',97),
  ('LISTA_VAR -> LISTA_ID COLON TYPE PUNTO_3 SEMICOLON MAS_VAR','LISTA_VAR',6,'p_lista_var','parser.py',105),
  ('MAS_VAR -> epsilon','MAS_VAR',1,'p_mas_var','parser.py',113),
  ('MAS_VAR -> LISTA_VAR','MAS_VAR',1,'p_mas_var','parser.py',114),
  ('LISTA_ID -> ID MAS_ID','LISTA_ID',2,'p_lista_id','parser.py',122),
  ('MAS_ID -> COMMA LISTA_ID','MAS_ID',2,'p_mas_id','parser.py',128),
  ('MAS_ID -> epsilon','MAS_ID',1,'p_mas_id','parser.py',129),
  ('TYPE -> INT','TYPE',1,'p_type','parser.py',139),
  ('TYPE -> FLOAT','TYPE',1,'p_type','parser.py',140),
  ('FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON','FUNCS',10,'p_funcs','parser.py',147),
  ('PARAMETROS -> epsilon','PARAMETROS',1,'p_parametros','parser.py',152),
  ('PARAMETROS -> DEC_PARAMETROS','PARAMETROS',1,'p_parametros','parser.py',153),
  ('DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS','DEC_PARAMETROS',4,'p_dec_parametros','parser.py',161),
  ('LISTA_PARAMETROS -> epsilon','LISTA_PARAMETROS',1,'p_lista_parametros','parser.py',166),
  ('LISTA_PARAMETROS -> COMMA DEC_PARAMETROS','LISTA_PARAMETROS',2,'p_lista_parametros','parser.py',167),
  ('VARS_FUNC -> epsilon','VARS_FUNC',1,'p_vars_func','parser.py',175),
  ('VARS_FUNC -> VARS','VARS_FUNC',1,'p_vars_func','parser.py',176),
  ('BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE','BODY',3,'p_body','parser.py',186),
  ('DEC_STATEMENTS -> epsilon','DEC_STATEMENTS',1,'p_dec_staments','parser.py',191),
  ('DEC_STATEMENTS -> LISTA_STATEMENTS','DEC_STATEMENTS',1,'p_dec_staments','parser.py',192),
  ('LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS','LISTA_STATEMENTS',2,'p_lista_staments','parser.py',200),
  ('MAS_STATEMENTS -> epsilon','MAS_STATEMENTS',1,'p_mas_staments','parser.py',205),
  ('MAS_STATEMENTS -> LISTA_STATEMENTS','MAS_STATEMENTS',1,'p_mas_staments','parser.py',206),
  ('STATEMENT -> ASSIGN','STATEMENT',1,'p_statement','parser.py',216),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_statement','parser.py',217),
  ('STATEMENT -> CYCLE','STATEMENT',1,'p_statement','parser.py',218),
  ('STATEMENT -> F_CALL','STATEMENT',1,'p_statement','parser.py',219),
  ('STATEMENT -> PRINT_STMT','STATEMENT',1,'p_statement','parser.py',220),
  ('ASSIGN -> ID EQUAL EXPRESION SEMICOLON','ASSIGN',4,'p_assign','parser.py',228),
  ('EXPRESION -> EXP MAS_EXPRESIONES','EXPRESION',2,'p_expresion','parser.py',235),
  ('MAS_EXPRESIONES -> epsilon','MAS_EXPRESIONES',1,'p_mas_expresiones','parser.py',240),
  ('MAS_EXPRESIONES -> OPERADORES EXP','MAS_EXPRESIONES',2,'p_mas_expresiones','parser.py',241),
  ('OPERADORES -> GREATER_THAN','OPERADORES',1,'p_operadores','parser.py',249),
  ('OPERADORES -> LESS_THAN','OPERADORES',1,'p_operadores','parser.py',250),
  ('OPERADORES -> NOT_EQUAL','OPERADORES',1,'p_operadores','parser.py',251),
  ('EXP -> TERMINO MAS_EXP','EXP',2,'p_exp','parser.py',258),
  ('MAS_EXP -> OPERADORES_EXP EXP','MAS_EXP',2,'p_mas_exp','parser.py',263),
  ('MAS_EXP -> epsilon','MAS_EXP',1,'p_mas_exp','parser.py',264),
  ('OPERADORES_EXP -> PLUS','OPERADORES_EXP',1,'p_operadores_exp','parser.py',272),
  ('OPERADORES_EXP -> MINUS','OPERADORES_EXP',1,'p_operadores_exp','parser.py',273),
  ('TERMINO -> FACTOR MAS_TERMINO','TERMINO',2,'p_termino','parser.py',280),
  ('MAS_TERMINO -> epsilon','MAS_TERMINO',1,'p_mas_termino','parser.py',285),
  ('MAS_TERMINO -> OPERADORES_TER TERMINO','MAS_TERMINO',2,'p_mas_termino','parser.py',286),
  ('OPERADORES_TER -> MULTIPLICATION','OPERADORES_TER',1,'p_operadores_ter','parser.py',294),
  ('OPERADORES_TER -> DIVISION','OPERADORES_TER',1,'p_operadores_ter','parser.py',295),
  ('FACTOR -> OPERADORES_FACTOR ID_CTE','FACTOR',2,'p_factor','parser.py',302),
  ('FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS','FACTOR',3,'p_factor','parser.py',303),
  ('ID_CTE -> ID','ID_CTE',1,'p_id_cte','parser.py',311),
  ('ID_CTE -> CTE','ID_CTE',1,'p_id_cte','parser.py',312),
  ('OPERADORES_FACTOR -> PLUS','OPERADORES_FACTOR',1,'p_operadores_factor','parser.py',317),
  ('OPERADORES_FACTOR -> MINUS','OPERADORES_FACTOR',1,'p_operadores_factor','parser.py',318),
  ('OPERADORES_FACTOR -> epsilon','OPERADORES_FACTOR',1,'p_operadores_factor','parser.py',319),
  ('CTE -> CTE_INT','CTE',1,'p_cte','parser.py',329),
  ('CTE -> CTE_FLOAT','CTE',1,'p_cte','parser.py',330),
  ('CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON','CONDITION',7,'p_condition','parser.py',337),
  ('ELSE_CONDITION -> epsilon','ELSE_CONDITION',1,'p_else','parser.py',342),
  ('ELSE_CONDITION -> ELSE BODY','ELSE_CONDITION',2,'p_else','parser.py',343),
  ('CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON','CYCLE',7,'p_cycle','parser.py',353),
  ('F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON','F_CALL',5,'p_f_call','parser.py',360),
  ('EXPRESIONES -> epsilon','EXPRESIONES',1,'p_expresiones','parser.py',365),
  ('EXPRESIONES -> EXPRESIONES_F','EXPRESIONES',1,'p_expresiones','parser.py',366),
  ('EXPRESIONES_F -> EXPRESION LISTA_EXP','EXPRESIONES_F',2,'p_expresiones_f','parser.py',374),
  ('LISTA_EXP -> epsilon','LISTA_EXP',1,'p_lista_exp','parser.py',379),
  ('LISTA_EXP -> COMMA EXPRESIONES_F','LISTA_EXP',2,'p_lista_exp','parser.py',380),
  ('PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON','PRINT_STMT',5,'p_print_stmt','parser.py',390),
  ('PARAMETROS_PRINT -> CTE_STRING MAS_PRINT','PARAMETROS_PRINT',2,'p_parametros_print','parser.py',395),
  ('PARAMETROS_PRINT -> EXPRESION MAS_PRINT','PARAMETROS_PRINT',2,'p_parametros_print','parser.py',396),
  ('MAS_PRINT -> epsilon','MAS_PRINT',1,'p_mas_print','parser.py',401),
  ('MAS_PRINT -> COMMA PARAMETROS_PRINT','MAS_PRINT',2,'p_mas_print','parser.py',402),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','parser.py',410),
]
