
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'COLON COMMA CTE_FLOAT CTE_INT CTE_STRING DIVISION DO ELSE END EQUAL FLOAT GREATER_THAN ID IF INT LEFT_BRACE LEFT_BRACKET LEFT_PARENTHESIS LESS_THAN MAIN MINUS MULTIPLICATION NOT_EQUAL PLUS PRINT PROGRAM RIGHT_BRACE RIGHT_BRACKET RIGHT_PARENTHESIS SEMICOLON VAR VOID WHILEPROGRAMA : PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY ENDPUNTO_1 :DEC_VARS : epsilon\n                | VARSSOLO_FUNCS : FUNCS MAS_FUNCSMAS_FUNCS : epsilon\n                 | SOLO_FUNCSDEC_FUNCS : epsilon\n                 | SOLO_FUNCSPUNTO_2 :VARS : VAR PUNTO_2 LISTA_VARLISTA_VAR : LISTA_ID COLON TYPE SEMICOLON MAS_VARMAS_VAR : epsilon\n               | LISTA_VARLISTA_ID : ID MAS_IDMAS_ID : COMMA LISTA_ID\n              | epsilonTYPE : INT\n            | FLOATFUNCS : VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLONPARAMETROS : epsilon\n                  | DEC_PARAMETROSDEC_PARAMETROS : ID COLON TYPE LISTA_PARAMETROSLISTA_PARAMETROS : epsilon\n                        | COMMA DEC_PARAMETROSVARS_FUNC : epsilon\n                 | VARSBODY : LEFT_BRACE DEC_STATEMENTS RIGHT_BRACEDEC_STATEMENTS : epsilon\n                      | LISTA_STATEMENTSLISTA_STATEMENTS : STATEMENT MAS_STATEMENTSMAS_STATEMENTS : epsilon\n                      | LISTA_STATEMENTSSTATEMENT : ASSIGN\n                 | CONDITION\n                 | CYCLE\n                 | F_CALL\n                 | PRINT_STMT\n    ASSIGN : ID EQUAL EXPRESION SEMICOLONEXPRESION : EXP MAS_EXPRESIONESMAS_EXPRESIONES : epsilon\n                       | OPERADORES EXPOPERADORES : GREATER_THAN\n                  | LESS_THAN\n                  | NOT_EQUALEXP : TERMINO MAS_EXPMAS_EXP : OPERADORES_EXP EXP\n               | epsilonOPERADORES_EXP : PLUS\n                      | MINUSTERMINO : FACTOR MAS_TERMINOMAS_TERMINO : epsilon\n                   | OPERADORES_TER TERMINOOPERADORES_TER : MULTIPLICATION\n                      | DIVISIONFACTOR : OPERADORES_FACTOR ID_CTE\n              | LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESISID_CTE : ID\n              | CTEOPERADORES_FACTOR : PLUS\n                         | MINUS\n                         | epsilonCTE : CTE_INT\n           | CTE_FLOATCONDITION : IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLONELSE_CONDITION : epsilon\n                      | ELSE BODYCYCLE : DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLONF_CALL : ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLONEXPRESIONES : epsilon\n                   | EXPRESIONES_FEXPRESIONES_F : EXPRESION LISTA_EXPLISTA_EXP : epsilon\n                 | COMMA EXPRESIONES_FPRINT_STMT : PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLONPARAMETROS_PRINT : CTE_STRING MAS_PRINT\n                        | EXPRESION MAS_PRINTMAS_PRINT : epsilon\n                 | COMMA PARAMETROS_PRINTepsilon :'
    
_lr_action_items = {'PROGRAM':([0,],[2,]),'$end':([1,31,],[0,-1,]),'ID':([2,9,14,15,25,26,29,35,36,37,38,39,40,57,58,59,61,64,69,70,71,72,73,75,88,91,92,93,94,96,98,99,102,103,104,114,116,120,124,132,136,145,147,],[3,-10,20,23,41,45,23,41,-34,-35,-36,-37,-38,-80,-80,-80,-80,23,106,-80,-60,-61,-62,-62,-39,-80,-43,-44,-45,-80,-49,-50,-80,-54,-55,-80,-80,-80,45,-69,-75,-65,-68,]),'SEMICOLON':([3,4,49,50,51,53,65,66,67,68,89,90,95,97,100,101,105,106,107,108,109,111,117,128,129,130,131,134,140,141,143,144,146,],[-2,5,64,-18,-19,-28,88,-80,-80,-80,-40,-41,-46,-48,-51,-52,-56,-58,-59,-63,-64,132,136,-42,-47,-53,-57,-80,145,-66,147,148,-67,]),'VOID':([5,6,7,8,13,21,64,85,86,87,148,],[-80,14,-3,-4,14,-11,-80,-12,-13,-14,-20,]),'MAIN':([5,6,7,8,10,11,12,13,17,18,19,21,64,85,86,87,148,],[-80,-80,-3,-4,16,-8,-9,-80,-5,-6,-7,-11,-80,-12,-13,-14,-20,]),'VAR':([5,84,],[9,9,]),'LEFT_BRACE':([16,21,43,64,84,85,86,87,115,125,126,127,142,],[25,-11,25,-80,-80,-12,-13,-14,25,25,-26,-27,25,]),'LEFT_PARENTHESIS':([20,41,42,44,57,58,59,61,70,79,91,92,93,94,96,98,99,102,103,104,114,116,120,],[26,58,59,61,70,70,70,70,70,116,70,-43,-44,-45,70,-49,-50,70,-54,-55,70,70,70,]),'COLON':([22,23,28,30,45,52,],[27,-80,-15,-17,62,-16,]),'COMMA':([23,50,51,66,67,68,77,81,82,83,89,90,95,97,100,101,105,106,107,108,109,128,129,130,131,],[29,-18,-19,-80,-80,-80,114,120,120,124,-40,-41,-46,-48,-51,-52,-56,-58,-59,-63,-64,-42,-47,-53,-57,]),'END':([24,53,],[31,-28,]),'RIGHT_BRACE':([25,32,33,34,35,36,37,38,39,40,54,55,56,88,132,136,145,147,],[-80,53,-29,-30,-80,-34,-35,-36,-37,-38,-31,-32,-33,-39,-69,-75,-65,-68,]),'IF':([25,35,36,37,38,39,40,88,132,136,145,147,],[42,42,-34,-35,-36,-37,-38,-39,-69,-75,-65,-68,]),'DO':([25,35,36,37,38,39,40,88,132,136,145,147,],[43,43,-34,-35,-36,-37,-38,-39,-69,-75,-65,-68,]),'PRINT':([25,35,36,37,38,39,40,88,132,136,145,147,],[44,44,-34,-35,-36,-37,-38,-39,-69,-75,-65,-68,]),'RIGHT_PARENTHESIS':([26,46,47,48,50,51,58,66,67,68,74,75,76,77,78,80,81,82,83,89,90,95,97,100,101,105,106,107,108,109,110,112,113,118,119,121,122,123,128,129,130,131,133,135,137,138,],[-80,63,-21,-22,-18,-19,-80,-80,-80,-80,111,-70,-71,-80,115,117,-80,-80,-80,-40,-41,-46,-48,-51,-52,-56,-58,-59,-63,-64,131,-72,-73,-76,-78,-77,-23,-24,-42,-47,-53,-57,-74,143,-79,-25,]),'INT':([27,62,],[50,50,]),'FLOAT':([27,62,],[51,51,]),'EQUAL':([41,],[57,]),'WHILE':([53,60,],[-28,79,]),'ELSE':([53,134,],[-28,142,]),'RIGHT_BRACKET':([53,139,],[-28,144,]),'PLUS':([57,58,59,61,67,68,70,91,92,93,94,96,98,99,100,101,102,103,104,105,106,107,108,109,114,116,120,130,131,],[71,71,71,71,98,-80,71,71,-43,-44,-45,71,-49,-50,-51,-52,71,-54,-55,-56,-58,-59,-63,-64,71,71,71,-53,-57,]),'MINUS':([57,58,59,61,67,68,70,91,92,93,94,96,98,99,100,101,102,103,104,105,106,107,108,109,114,116,120,130,131,],[72,72,72,72,99,-80,72,72,-43,-44,-45,72,-49,-50,-51,-52,72,-54,-55,-56,-58,-59,-63,-64,72,72,72,-53,-57,]),'CTE_INT':([57,58,59,61,69,70,71,72,73,75,91,92,93,94,96,98,99,102,103,104,114,116,120,],[-80,-80,-80,-80,108,-80,-60,-61,-62,-62,-80,-43,-44,-45,-80,-49,-50,-80,-54,-55,-80,-80,-80,]),'CTE_FLOAT':([57,58,59,61,69,70,71,72,73,75,91,92,93,94,96,98,99,102,103,104,114,116,120,],[-80,-80,-80,-80,109,-80,-60,-61,-62,-62,-80,-43,-44,-45,-80,-49,-50,-80,-54,-55,-80,-80,-80,]),'CTE_STRING':([61,120,],[81,81,]),'LEFT_BRACKET':([63,],[84,]),'GREATER_THAN':([66,67,68,95,97,100,101,105,106,107,108,109,129,130,131,],[92,-80,-80,-46,-48,-51,-52,-56,-58,-59,-63,-64,-47,-53,-57,]),'LESS_THAN':([66,67,68,95,97,100,101,105,106,107,108,109,129,130,131,],[93,-80,-80,-46,-48,-51,-52,-56,-58,-59,-63,-64,-47,-53,-57,]),'NOT_EQUAL':([66,67,68,95,97,100,101,105,106,107,108,109,129,130,131,],[94,-80,-80,-46,-48,-51,-52,-56,-58,-59,-63,-64,-47,-53,-57,]),'MULTIPLICATION':([68,105,106,107,108,109,131,],[103,-56,-58,-59,-63,-64,-57,]),'DIVISION':([68,105,106,107,108,109,131,],[104,-56,-58,-59,-63,-64,-57,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PROGRAMA':([0,],[1,]),'PUNTO_1':([3,],[4,]),'DEC_VARS':([5,],[6,]),'epsilon':([5,6,13,23,25,26,35,57,58,59,61,64,66,67,68,70,77,81,82,83,84,91,96,102,114,116,120,134,],[7,11,18,30,33,47,55,73,75,73,73,86,90,97,101,73,113,119,119,123,126,73,73,73,73,73,73,141,]),'VARS':([5,84,],[8,127,]),'DEC_FUNCS':([6,],[10,]),'SOLO_FUNCS':([6,13,],[12,19,]),'FUNCS':([6,13,],[13,13,]),'PUNTO_2':([9,],[15,]),'MAS_FUNCS':([13,],[17,]),'LISTA_VAR':([15,64,],[21,87,]),'LISTA_ID':([15,29,64,],[22,52,22,]),'BODY':([16,43,115,125,142,],[24,60,134,139,146,]),'MAS_ID':([23,],[28,]),'DEC_STATEMENTS':([25,],[32,]),'LISTA_STATEMENTS':([25,35,],[34,56,]),'STATEMENT':([25,35,],[35,35,]),'ASSIGN':([25,35,],[36,36,]),'CONDITION':([25,35,],[37,37,]),'CYCLE':([25,35,],[38,38,]),'F_CALL':([25,35,],[39,39,]),'PRINT_STMT':([25,35,],[40,40,]),'PARAMETROS':([26,],[46,]),'DEC_PARAMETROS':([26,124,],[48,138,]),'TYPE':([27,62,],[49,83,]),'MAS_STATEMENTS':([35,],[54,]),'EXPRESION':([57,58,59,61,70,114,116,120,],[65,77,78,82,110,77,135,82,]),'EXP':([57,58,59,61,70,91,96,114,116,120,],[66,66,66,66,66,128,129,66,66,66,]),'TERMINO':([57,58,59,61,70,91,96,102,114,116,120,],[67,67,67,67,67,67,67,130,67,67,67,]),'FACTOR':([57,58,59,61,70,91,96,102,114,116,120,],[68,68,68,68,68,68,68,68,68,68,68,]),'OPERADORES_FACTOR':([57,58,59,61,70,91,96,102,114,116,120,],[69,69,69,69,69,69,69,69,69,69,69,]),'EXPRESIONES':([58,],[74,]),'EXPRESIONES_F':([58,114,],[76,133,]),'PARAMETROS_PRINT':([61,120,],[80,137,]),'MAS_VAR':([64,],[85,]),'MAS_EXPRESIONES':([66,],[89,]),'OPERADORES':([66,],[91,]),'MAS_EXP':([67,],[95,]),'OPERADORES_EXP':([67,],[96,]),'MAS_TERMINO':([68,],[100,]),'OPERADORES_TER':([68,],[102,]),'ID_CTE':([69,],[105,]),'CTE':([69,],[107,]),'LISTA_EXP':([77,],[112,]),'MAS_PRINT':([81,82,],[118,121,]),'LISTA_PARAMETROS':([83,],[122,]),'VARS_FUNC':([84,],[125,]),'ELSE_CONDITION':([134,],[140,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> PROGRAMA","S'",1,None,None,None),
  ('PROGRAMA -> PROGRAM ID PUNTO_1 SEMICOLON DEC_VARS DEC_FUNCS MAIN BODY END','PROGRAMA',9,'p_program','parser.py',33),
  ('PUNTO_1 -> <empty>','PUNTO_1',0,'p_punto_1','parser.py',39),
  ('DEC_VARS -> epsilon','DEC_VARS',1,'p_dec_vars','parser.py',50),
  ('DEC_VARS -> VARS','DEC_VARS',1,'p_dec_vars','parser.py',51),
  ('SOLO_FUNCS -> FUNCS MAS_FUNCS','SOLO_FUNCS',2,'p_solo_funcs','parser.py',59),
  ('MAS_FUNCS -> epsilon','MAS_FUNCS',1,'p_mas_funcs','parser.py',64),
  ('MAS_FUNCS -> SOLO_FUNCS','MAS_FUNCS',1,'p_mas_funcs','parser.py',65),
  ('DEC_FUNCS -> epsilon','DEC_FUNCS',1,'p_dec_funcs','parser.py',73),
  ('DEC_FUNCS -> SOLO_FUNCS','DEC_FUNCS',1,'p_dec_funcs','parser.py',74),
  ('PUNTO_2 -> <empty>','PUNTO_2',0,'p_punto_2','parser.py',83),
  ('VARS -> VAR PUNTO_2 LISTA_VAR','VARS',3,'p_vars','parser.py',91),
  ('LISTA_VAR -> LISTA_ID COLON TYPE SEMICOLON MAS_VAR','LISTA_VAR',5,'p_lista_var','parser.py',97),
  ('MAS_VAR -> epsilon','MAS_VAR',1,'p_mas_var','parser.py',102),
  ('MAS_VAR -> LISTA_VAR','MAS_VAR',1,'p_mas_var','parser.py',103),
  ('LISTA_ID -> ID MAS_ID','LISTA_ID',2,'p_lista_id','parser.py',111),
  ('MAS_ID -> COMMA LISTA_ID','MAS_ID',2,'p_mas_id','parser.py',116),
  ('MAS_ID -> epsilon','MAS_ID',1,'p_mas_id','parser.py',117),
  ('TYPE -> INT','TYPE',1,'p_type','parser.py',127),
  ('TYPE -> FLOAT','TYPE',1,'p_type','parser.py',128),
  ('FUNCS -> VOID ID LEFT_PARENTHESIS PARAMETROS RIGHT_PARENTHESIS LEFT_BRACKET VARS_FUNC BODY RIGHT_BRACKET SEMICOLON','FUNCS',10,'p_funcs','parser.py',135),
  ('PARAMETROS -> epsilon','PARAMETROS',1,'p_parametros','parser.py',140),
  ('PARAMETROS -> DEC_PARAMETROS','PARAMETROS',1,'p_parametros','parser.py',141),
  ('DEC_PARAMETROS -> ID COLON TYPE LISTA_PARAMETROS','DEC_PARAMETROS',4,'p_dec_parametros','parser.py',149),
  ('LISTA_PARAMETROS -> epsilon','LISTA_PARAMETROS',1,'p_lista_parametros','parser.py',154),
  ('LISTA_PARAMETROS -> COMMA DEC_PARAMETROS','LISTA_PARAMETROS',2,'p_lista_parametros','parser.py',155),
  ('VARS_FUNC -> epsilon','VARS_FUNC',1,'p_vars_func','parser.py',163),
  ('VARS_FUNC -> VARS','VARS_FUNC',1,'p_vars_func','parser.py',164),
  ('BODY -> LEFT_BRACE DEC_STATEMENTS RIGHT_BRACE','BODY',3,'p_body','parser.py',174),
  ('DEC_STATEMENTS -> epsilon','DEC_STATEMENTS',1,'p_dec_staments','parser.py',179),
  ('DEC_STATEMENTS -> LISTA_STATEMENTS','DEC_STATEMENTS',1,'p_dec_staments','parser.py',180),
  ('LISTA_STATEMENTS -> STATEMENT MAS_STATEMENTS','LISTA_STATEMENTS',2,'p_lista_staments','parser.py',188),
  ('MAS_STATEMENTS -> epsilon','MAS_STATEMENTS',1,'p_mas_staments','parser.py',193),
  ('MAS_STATEMENTS -> LISTA_STATEMENTS','MAS_STATEMENTS',1,'p_mas_staments','parser.py',194),
  ('STATEMENT -> ASSIGN','STATEMENT',1,'p_statement','parser.py',204),
  ('STATEMENT -> CONDITION','STATEMENT',1,'p_statement','parser.py',205),
  ('STATEMENT -> CYCLE','STATEMENT',1,'p_statement','parser.py',206),
  ('STATEMENT -> F_CALL','STATEMENT',1,'p_statement','parser.py',207),
  ('STATEMENT -> PRINT_STMT','STATEMENT',1,'p_statement','parser.py',208),
  ('ASSIGN -> ID EQUAL EXPRESION SEMICOLON','ASSIGN',4,'p_assign','parser.py',216),
  ('EXPRESION -> EXP MAS_EXPRESIONES','EXPRESION',2,'p_expresion','parser.py',223),
  ('MAS_EXPRESIONES -> epsilon','MAS_EXPRESIONES',1,'p_mas_expresiones','parser.py',228),
  ('MAS_EXPRESIONES -> OPERADORES EXP','MAS_EXPRESIONES',2,'p_mas_expresiones','parser.py',229),
  ('OPERADORES -> GREATER_THAN','OPERADORES',1,'p_operadores','parser.py',237),
  ('OPERADORES -> LESS_THAN','OPERADORES',1,'p_operadores','parser.py',238),
  ('OPERADORES -> NOT_EQUAL','OPERADORES',1,'p_operadores','parser.py',239),
  ('EXP -> TERMINO MAS_EXP','EXP',2,'p_exp','parser.py',246),
  ('MAS_EXP -> OPERADORES_EXP EXP','MAS_EXP',2,'p_mas_exp','parser.py',251),
  ('MAS_EXP -> epsilon','MAS_EXP',1,'p_mas_exp','parser.py',252),
  ('OPERADORES_EXP -> PLUS','OPERADORES_EXP',1,'p_operadores_exp','parser.py',260),
  ('OPERADORES_EXP -> MINUS','OPERADORES_EXP',1,'p_operadores_exp','parser.py',261),
  ('TERMINO -> FACTOR MAS_TERMINO','TERMINO',2,'p_termino','parser.py',268),
  ('MAS_TERMINO -> epsilon','MAS_TERMINO',1,'p_mas_termino','parser.py',273),
  ('MAS_TERMINO -> OPERADORES_TER TERMINO','MAS_TERMINO',2,'p_mas_termino','parser.py',274),
  ('OPERADORES_TER -> MULTIPLICATION','OPERADORES_TER',1,'p_operadores_ter','parser.py',282),
  ('OPERADORES_TER -> DIVISION','OPERADORES_TER',1,'p_operadores_ter','parser.py',283),
  ('FACTOR -> OPERADORES_FACTOR ID_CTE','FACTOR',2,'p_factor','parser.py',290),
  ('FACTOR -> LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS','FACTOR',3,'p_factor','parser.py',291),
  ('ID_CTE -> ID','ID_CTE',1,'p_id_cte','parser.py',299),
  ('ID_CTE -> CTE','ID_CTE',1,'p_id_cte','parser.py',300),
  ('OPERADORES_FACTOR -> PLUS','OPERADORES_FACTOR',1,'p_operadores_factor','parser.py',305),
  ('OPERADORES_FACTOR -> MINUS','OPERADORES_FACTOR',1,'p_operadores_factor','parser.py',306),
  ('OPERADORES_FACTOR -> epsilon','OPERADORES_FACTOR',1,'p_operadores_factor','parser.py',307),
  ('CTE -> CTE_INT','CTE',1,'p_cte','parser.py',317),
  ('CTE -> CTE_FLOAT','CTE',1,'p_cte','parser.py',318),
  ('CONDITION -> IF LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS BODY ELSE_CONDITION SEMICOLON','CONDITION',7,'p_condition','parser.py',325),
  ('ELSE_CONDITION -> epsilon','ELSE_CONDITION',1,'p_else','parser.py',330),
  ('ELSE_CONDITION -> ELSE BODY','ELSE_CONDITION',2,'p_else','parser.py',331),
  ('CYCLE -> DO BODY WHILE LEFT_PARENTHESIS EXPRESION RIGHT_PARENTHESIS SEMICOLON','CYCLE',7,'p_cycle','parser.py',341),
  ('F_CALL -> ID LEFT_PARENTHESIS EXPRESIONES RIGHT_PARENTHESIS SEMICOLON','F_CALL',5,'p_f_call','parser.py',348),
  ('EXPRESIONES -> epsilon','EXPRESIONES',1,'p_expresiones','parser.py',353),
  ('EXPRESIONES -> EXPRESIONES_F','EXPRESIONES',1,'p_expresiones','parser.py',354),
  ('EXPRESIONES_F -> EXPRESION LISTA_EXP','EXPRESIONES_F',2,'p_expresiones_f','parser.py',362),
  ('LISTA_EXP -> epsilon','LISTA_EXP',1,'p_lista_exp','parser.py',367),
  ('LISTA_EXP -> COMMA EXPRESIONES_F','LISTA_EXP',2,'p_lista_exp','parser.py',368),
  ('PRINT_STMT -> PRINT LEFT_PARENTHESIS PARAMETROS_PRINT RIGHT_PARENTHESIS SEMICOLON','PRINT_STMT',5,'p_print_stmt','parser.py',378),
  ('PARAMETROS_PRINT -> CTE_STRING MAS_PRINT','PARAMETROS_PRINT',2,'p_parametros_print','parser.py',383),
  ('PARAMETROS_PRINT -> EXPRESION MAS_PRINT','PARAMETROS_PRINT',2,'p_parametros_print','parser.py',384),
  ('MAS_PRINT -> epsilon','MAS_PRINT',1,'p_mas_print','parser.py',389),
  ('MAS_PRINT -> COMMA PARAMETROS_PRINT','MAS_PRINT',2,'p_mas_print','parser.py',390),
  ('epsilon -> <empty>','epsilon',0,'p_epsilon','parser.py',398),
]
